/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.utils.Utils;
import java.lang.Integer;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;

public class DeleteDisplayableListsRequest {

    @JsonProperty("ids")
    private List<Integer> ids;

    @JsonCreator
    public DeleteDisplayableListsRequest(
            @JsonProperty("ids") List<Integer> ids) {
        Utils.checkNotNull(ids, "ids");
        this.ids = ids;
    }

    @JsonIgnore
    public List<Integer> ids() {
        return ids;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public DeleteDisplayableListsRequest withIds(List<Integer> ids) {
        Utils.checkNotNull(ids, "ids");
        this.ids = ids;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteDisplayableListsRequest other = (DeleteDisplayableListsRequest) o;
        return 
            Objects.deepEquals(this.ids, other.ids);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            ids);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DeleteDisplayableListsRequest.class,
                "ids", ids);
    }
    
    public final static class Builder {
 
        private List<Integer> ids;
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder ids(List<Integer> ids) {
            Utils.checkNotNull(ids, "ids");
            this.ids = ids;
            return this;
        }
        
        public DeleteDisplayableListsRequest build() {
            return new DeleteDisplayableListsRequest(
                ids);
        }
    }
}
