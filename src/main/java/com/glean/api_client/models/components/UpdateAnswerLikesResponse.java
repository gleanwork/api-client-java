/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class UpdateAnswerLikesResponse {

    @JsonProperty("likes")
    private AnswerLikes likes;

    @JsonCreator
    public UpdateAnswerLikesResponse(
            @JsonProperty("likes") AnswerLikes likes) {
        Utils.checkNotNull(likes, "likes");
        this.likes = likes;
    }

    @JsonIgnore
    public AnswerLikes likes() {
        return likes;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public UpdateAnswerLikesResponse withLikes(AnswerLikes likes) {
        Utils.checkNotNull(likes, "likes");
        this.likes = likes;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateAnswerLikesResponse other = (UpdateAnswerLikesResponse) o;
        return 
            Objects.deepEquals(this.likes, other.likes);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            likes);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UpdateAnswerLikesResponse.class,
                "likes", likes);
    }
    
    public final static class Builder {
 
        private AnswerLikes likes;
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder likes(AnswerLikes likes) {
            Utils.checkNotNull(likes, "likes");
            this.likes = likes;
            return this;
        }
        
        public UpdateAnswerLikesResponse build() {
            return new UpdateAnswerLikesResponse(
                likes);
        }
    }
}
