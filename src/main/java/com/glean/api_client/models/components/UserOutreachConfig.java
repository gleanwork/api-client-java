/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public class UserOutreachConfig {

    /**
     * Whether the weekly feed email is enabled
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weeklyFeedEmailEnabled")
    private Optional<Boolean> weeklyFeedEmailEnabled;

    /**
     * Whether the onboarding email campaign is enabled
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onboardingCampaignEnabled")
    private Optional<Boolean> onboardingCampaignEnabled;

    @JsonCreator
    public UserOutreachConfig(
            @JsonProperty("weeklyFeedEmailEnabled") Optional<Boolean> weeklyFeedEmailEnabled,
            @JsonProperty("onboardingCampaignEnabled") Optional<Boolean> onboardingCampaignEnabled) {
        Utils.checkNotNull(weeklyFeedEmailEnabled, "weeklyFeedEmailEnabled");
        Utils.checkNotNull(onboardingCampaignEnabled, "onboardingCampaignEnabled");
        this.weeklyFeedEmailEnabled = weeklyFeedEmailEnabled;
        this.onboardingCampaignEnabled = onboardingCampaignEnabled;
    }
    
    public UserOutreachConfig() {
        this(Optional.empty(), Optional.empty());
    }

    /**
     * Whether the weekly feed email is enabled
     */
    @JsonIgnore
    public Optional<Boolean> weeklyFeedEmailEnabled() {
        return weeklyFeedEmailEnabled;
    }

    /**
     * Whether the onboarding email campaign is enabled
     */
    @JsonIgnore
    public Optional<Boolean> onboardingCampaignEnabled() {
        return onboardingCampaignEnabled;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Whether the weekly feed email is enabled
     */
    public UserOutreachConfig withWeeklyFeedEmailEnabled(boolean weeklyFeedEmailEnabled) {
        Utils.checkNotNull(weeklyFeedEmailEnabled, "weeklyFeedEmailEnabled");
        this.weeklyFeedEmailEnabled = Optional.ofNullable(weeklyFeedEmailEnabled);
        return this;
    }

    /**
     * Whether the weekly feed email is enabled
     */
    public UserOutreachConfig withWeeklyFeedEmailEnabled(Optional<Boolean> weeklyFeedEmailEnabled) {
        Utils.checkNotNull(weeklyFeedEmailEnabled, "weeklyFeedEmailEnabled");
        this.weeklyFeedEmailEnabled = weeklyFeedEmailEnabled;
        return this;
    }

    /**
     * Whether the onboarding email campaign is enabled
     */
    public UserOutreachConfig withOnboardingCampaignEnabled(boolean onboardingCampaignEnabled) {
        Utils.checkNotNull(onboardingCampaignEnabled, "onboardingCampaignEnabled");
        this.onboardingCampaignEnabled = Optional.ofNullable(onboardingCampaignEnabled);
        return this;
    }

    /**
     * Whether the onboarding email campaign is enabled
     */
    public UserOutreachConfig withOnboardingCampaignEnabled(Optional<Boolean> onboardingCampaignEnabled) {
        Utils.checkNotNull(onboardingCampaignEnabled, "onboardingCampaignEnabled");
        this.onboardingCampaignEnabled = onboardingCampaignEnabled;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UserOutreachConfig other = (UserOutreachConfig) o;
        return 
            Objects.deepEquals(this.weeklyFeedEmailEnabled, other.weeklyFeedEmailEnabled) &&
            Objects.deepEquals(this.onboardingCampaignEnabled, other.onboardingCampaignEnabled);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            weeklyFeedEmailEnabled,
            onboardingCampaignEnabled);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UserOutreachConfig.class,
                "weeklyFeedEmailEnabled", weeklyFeedEmailEnabled,
                "onboardingCampaignEnabled", onboardingCampaignEnabled);
    }
    
    public final static class Builder {
 
        private Optional<Boolean> weeklyFeedEmailEnabled = Optional.empty();
 
        private Optional<Boolean> onboardingCampaignEnabled = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Whether the weekly feed email is enabled
         */
        public Builder weeklyFeedEmailEnabled(boolean weeklyFeedEmailEnabled) {
            Utils.checkNotNull(weeklyFeedEmailEnabled, "weeklyFeedEmailEnabled");
            this.weeklyFeedEmailEnabled = Optional.ofNullable(weeklyFeedEmailEnabled);
            return this;
        }

        /**
         * Whether the weekly feed email is enabled
         */
        public Builder weeklyFeedEmailEnabled(Optional<Boolean> weeklyFeedEmailEnabled) {
            Utils.checkNotNull(weeklyFeedEmailEnabled, "weeklyFeedEmailEnabled");
            this.weeklyFeedEmailEnabled = weeklyFeedEmailEnabled;
            return this;
        }

        /**
         * Whether the onboarding email campaign is enabled
         */
        public Builder onboardingCampaignEnabled(boolean onboardingCampaignEnabled) {
            Utils.checkNotNull(onboardingCampaignEnabled, "onboardingCampaignEnabled");
            this.onboardingCampaignEnabled = Optional.ofNullable(onboardingCampaignEnabled);
            return this;
        }

        /**
         * Whether the onboarding email campaign is enabled
         */
        public Builder onboardingCampaignEnabled(Optional<Boolean> onboardingCampaignEnabled) {
            Utils.checkNotNull(onboardingCampaignEnabled, "onboardingCampaignEnabled");
            this.onboardingCampaignEnabled = onboardingCampaignEnabled;
            return this;
        }
        
        public UserOutreachConfig build() {
            return new UserOutreachConfig(
                weeklyFeedEmailEnabled,
                onboardingCampaignEnabled);
        }
    }
}
