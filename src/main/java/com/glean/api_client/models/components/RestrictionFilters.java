/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

public class RestrictionFilters {

    /**
     * Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerSpecs")
    private Optional<? extends List<DocumentSpecUnion>> containerSpecs;

    @JsonCreator
    public RestrictionFilters(
            @JsonProperty("containerSpecs") Optional<? extends List<DocumentSpecUnion>> containerSpecs) {
        Utils.checkNotNull(containerSpecs, "containerSpecs");
        this.containerSpecs = containerSpecs;
    }
    
    public RestrictionFilters() {
        this(Optional.empty());
    }

    /**
     * Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<DocumentSpecUnion>> containerSpecs() {
        return (Optional<List<DocumentSpecUnion>>) containerSpecs;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.
     */
    public RestrictionFilters withContainerSpecs(List<DocumentSpecUnion> containerSpecs) {
        Utils.checkNotNull(containerSpecs, "containerSpecs");
        this.containerSpecs = Optional.ofNullable(containerSpecs);
        return this;
    }

    /**
     * Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.
     */
    public RestrictionFilters withContainerSpecs(Optional<? extends List<DocumentSpecUnion>> containerSpecs) {
        Utils.checkNotNull(containerSpecs, "containerSpecs");
        this.containerSpecs = containerSpecs;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RestrictionFilters other = (RestrictionFilters) o;
        return 
            Objects.deepEquals(this.containerSpecs, other.containerSpecs);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            containerSpecs);
    }
    
    @Override
    public String toString() {
        return Utils.toString(RestrictionFilters.class,
                "containerSpecs", containerSpecs);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<DocumentSpecUnion>> containerSpecs = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.
         */
        public Builder containerSpecs(List<DocumentSpecUnion> containerSpecs) {
            Utils.checkNotNull(containerSpecs, "containerSpecs");
            this.containerSpecs = Optional.ofNullable(containerSpecs);
            return this;
        }

        /**
         * Specifications for containers that should be used as part of the restriction (include/exclude). Memberships are recursively defined for a subset of datasources (currently: SharePoint, OneDrive, Google Drive, and Confluence). Please contact the Glean team to enable this for more datasources. Recursive memberships do not apply for Collections.
         */
        public Builder containerSpecs(Optional<? extends List<DocumentSpecUnion>> containerSpecs) {
            Utils.checkNotNull(containerSpecs, "containerSpecs");
            this.containerSpecs = containerSpecs;
            return this;
        }
        
        public RestrictionFilters build() {
            return new RestrictionFilters(
                containerSpecs);
        }
    }
}
