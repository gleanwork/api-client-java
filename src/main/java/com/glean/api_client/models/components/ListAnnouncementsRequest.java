/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

public class ListAnnouncementsRequest {

    /**
     * This determines whether this is a Social Feed post or a regular announcement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channel")
    private Optional<? extends AnnouncementChannel> channel;

    @JsonCreator
    public ListAnnouncementsRequest(
            @JsonProperty("channel") Optional<? extends AnnouncementChannel> channel) {
        Utils.checkNotNull(channel, "channel");
        this.channel = channel;
    }
    
    public ListAnnouncementsRequest() {
        this(Optional.empty());
    }

    /**
     * This determines whether this is a Social Feed post or a regular announcement.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AnnouncementChannel> channel() {
        return (Optional<AnnouncementChannel>) channel;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * This determines whether this is a Social Feed post or a regular announcement.
     */
    public ListAnnouncementsRequest withChannel(AnnouncementChannel channel) {
        Utils.checkNotNull(channel, "channel");
        this.channel = Optional.ofNullable(channel);
        return this;
    }

    /**
     * This determines whether this is a Social Feed post or a regular announcement.
     */
    public ListAnnouncementsRequest withChannel(Optional<? extends AnnouncementChannel> channel) {
        Utils.checkNotNull(channel, "channel");
        this.channel = channel;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListAnnouncementsRequest other = (ListAnnouncementsRequest) o;
        return 
            Objects.deepEquals(this.channel, other.channel);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            channel);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListAnnouncementsRequest.class,
                "channel", channel);
    }
    
    public final static class Builder {
 
        private Optional<? extends AnnouncementChannel> channel = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * This determines whether this is a Social Feed post or a regular announcement.
         */
        public Builder channel(AnnouncementChannel channel) {
            Utils.checkNotNull(channel, "channel");
            this.channel = Optional.ofNullable(channel);
            return this;
        }

        /**
         * This determines whether this is a Social Feed post or a regular announcement.
         */
        public Builder channel(Optional<? extends AnnouncementChannel> channel) {
            Utils.checkNotNull(channel, "channel");
            this.channel = channel;
            return this;
        }
        
        public ListAnnouncementsRequest build() {
            return new ListAnnouncementsRequest(
                channel);
        }
    }
}
