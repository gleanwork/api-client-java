/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;

public class GetSimilarShortcutsResponse {

    /**
     * Shortcuts with similar aliases to the given. Includes shortcut with the exact alias if it exists.
     */
    @JsonProperty("shortcuts")
    private List<Shortcut> shortcuts;

    @JsonCreator
    public GetSimilarShortcutsResponse(
            @JsonProperty("shortcuts") List<Shortcut> shortcuts) {
        Utils.checkNotNull(shortcuts, "shortcuts");
        this.shortcuts = shortcuts;
    }

    /**
     * Shortcuts with similar aliases to the given. Includes shortcut with the exact alias if it exists.
     */
    @JsonIgnore
    public List<Shortcut> shortcuts() {
        return shortcuts;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Shortcuts with similar aliases to the given. Includes shortcut with the exact alias if it exists.
     */
    public GetSimilarShortcutsResponse withShortcuts(List<Shortcut> shortcuts) {
        Utils.checkNotNull(shortcuts, "shortcuts");
        this.shortcuts = shortcuts;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetSimilarShortcutsResponse other = (GetSimilarShortcutsResponse) o;
        return 
            Objects.deepEquals(this.shortcuts, other.shortcuts);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            shortcuts);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetSimilarShortcutsResponse.class,
                "shortcuts", shortcuts);
    }
    
    public final static class Builder {
 
        private List<Shortcut> shortcuts;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Shortcuts with similar aliases to the given. Includes shortcut with the exact alias if it exists.
         */
        public Builder shortcuts(List<Shortcut> shortcuts) {
            Utils.checkNotNull(shortcuts, "shortcuts");
            this.shortcuts = shortcuts;
            return this;
        }
        
        public GetSimilarShortcutsResponse build() {
            return new GetSimilarShortcutsResponse(
                shortcuts);
        }
    }
}
