/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * MessageType
 * 
 * <p>Semantically groups content of a certain type. It can be used for purposes such as differential UI treatment. USER authored messages should be of type CONTENT and do not need `messageType` specified.
 */
public enum MessageType {
    UPDATE("UPDATE"),
    CONTENT("CONTENT"),
    CONTEXT("CONTEXT"),
    DEBUG("DEBUG"),
    DEBUG_EXTERNAL("DEBUG_EXTERNAL"),
    ERROR("ERROR"),
    HEADING("HEADING"),
    WARNING("WARNING");

    @JsonValue
    private final String value;

    private MessageType(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<MessageType> fromValue(String value) {
        for (MessageType o: MessageType.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

