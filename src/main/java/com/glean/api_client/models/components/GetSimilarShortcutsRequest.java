/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class GetSimilarShortcutsRequest {

    /**
     * Link text following go/ prefix.
     */
    @JsonProperty("alias")
    private String alias;

    @JsonCreator
    public GetSimilarShortcutsRequest(
            @JsonProperty("alias") String alias) {
        Utils.checkNotNull(alias, "alias");
        this.alias = alias;
    }

    /**
     * Link text following go/ prefix.
     */
    @JsonIgnore
    public String alias() {
        return alias;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Link text following go/ prefix.
     */
    public GetSimilarShortcutsRequest withAlias(String alias) {
        Utils.checkNotNull(alias, "alias");
        this.alias = alias;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetSimilarShortcutsRequest other = (GetSimilarShortcutsRequest) o;
        return 
            Objects.deepEquals(this.alias, other.alias);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            alias);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetSimilarShortcutsRequest.class,
                "alias", alias);
    }
    
    public final static class Builder {
 
        private String alias;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Link text following go/ prefix.
         */
        public Builder alias(String alias) {
            Utils.checkNotNull(alias, "alias");
            this.alias = alias;
            return this;
        }
        
        public GetSimilarShortcutsRequest build() {
            return new GetSimilarShortcutsRequest(
                alias);
        }
    }
}
