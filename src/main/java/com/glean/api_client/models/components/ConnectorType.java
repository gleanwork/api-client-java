/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * ConnectorType
 * 
 * <p>The source from which document content was pulled, e.g. an API crawl or browser history
 */
public enum ConnectorType {
    API_CRAWL("API_CRAWL"),
    BROWSER_CRAWL("BROWSER_CRAWL"),
    BROWSER_HISTORY("BROWSER_HISTORY"),
    BUILTIN("BUILTIN"),
    FEDERATED_SEARCH("FEDERATED_SEARCH"),
    PUSH_API("PUSH_API"),
    WEB_CRAWL("WEB_CRAWL"),
    NATIVE_HISTORY("NATIVE_HISTORY");

    @JsonValue
    private final String value;

    private ConnectorType(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<ConnectorType> fromValue(String value) {
        for (ConnectorType o: ConnectorType.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

