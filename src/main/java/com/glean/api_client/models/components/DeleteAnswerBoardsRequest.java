/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;

public class DeleteAnswerBoardsRequest {

    /**
     * The IDs of the Answer Boards to delete.
     */
    @JsonProperty("ids")
    private List<Long> ids;

    @JsonCreator
    public DeleteAnswerBoardsRequest(
            @JsonProperty("ids") List<Long> ids) {
        Utils.checkNotNull(ids, "ids");
        this.ids = ids;
    }

    /**
     * The IDs of the Answer Boards to delete.
     */
    @JsonIgnore
    public List<Long> ids() {
        return ids;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The IDs of the Answer Boards to delete.
     */
    public DeleteAnswerBoardsRequest withIds(List<Long> ids) {
        Utils.checkNotNull(ids, "ids");
        this.ids = ids;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteAnswerBoardsRequest other = (DeleteAnswerBoardsRequest) o;
        return 
            Objects.deepEquals(this.ids, other.ids);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            ids);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DeleteAnswerBoardsRequest.class,
                "ids", ids);
    }
    
    public final static class Builder {
 
        private List<Long> ids;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The IDs of the Answer Boards to delete.
         */
        public Builder ids(List<Long> ids) {
            Utils.checkNotNull(ids, "ids");
            this.ids = ids;
            return this;
        }
        
        public DeleteAnswerBoardsRequest build() {
            return new DeleteAnswerBoardsRequest(
                ids);
        }
    }
}
