/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;

public class GetChatFilesRequest {

    /**
     * IDs of files to fetch.
     */
    @JsonProperty("fileIds")
    private List<String> fileIds;

    @JsonCreator
    public GetChatFilesRequest(
            @JsonProperty("fileIds") List<String> fileIds) {
        Utils.checkNotNull(fileIds, "fileIds");
        this.fileIds = fileIds;
    }

    /**
     * IDs of files to fetch.
     */
    @JsonIgnore
    public List<String> fileIds() {
        return fileIds;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * IDs of files to fetch.
     */
    public GetChatFilesRequest withFileIds(List<String> fileIds) {
        Utils.checkNotNull(fileIds, "fileIds");
        this.fileIds = fileIds;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetChatFilesRequest other = (GetChatFilesRequest) o;
        return 
            Objects.deepEquals(this.fileIds, other.fileIds);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            fileIds);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetChatFilesRequest.class,
                "fileIds", fileIds);
    }
    
    public final static class Builder {
 
        private List<String> fileIds;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * IDs of files to fetch.
         */
        public Builder fileIds(List<String> fileIds) {
            Utils.checkNotNull(fileIds, "fileIds");
            this.fileIds = fileIds;
            return this;
        }
        
        public GetChatFilesRequest build() {
            return new GetChatFilesRequest(
                fileIds);
        }
    }
}
