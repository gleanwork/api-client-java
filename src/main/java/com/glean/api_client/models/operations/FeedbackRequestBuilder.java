/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.operations;

import com.glean.api_client.models.components.Feedback;
import com.glean.api_client.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class FeedbackRequestBuilder {

    private Optional<String> xGleanActAs = Optional.empty();
    private Optional<String> xGleanAuthType = Optional.empty();
    private Optional<String> feedbackQueryParameter = Optional.empty();
    private Optional<? extends Feedback> feedback1 = Optional.empty();
    private final SDKMethodInterfaces.MethodCallFeedback sdk;

    public FeedbackRequestBuilder(SDKMethodInterfaces.MethodCallFeedback sdk) {
        this.sdk = sdk;
    }
                
    public FeedbackRequestBuilder xGleanActAs(String xGleanActAs) {
        Utils.checkNotNull(xGleanActAs, "xGleanActAs");
        this.xGleanActAs = Optional.of(xGleanActAs);
        return this;
    }

    public FeedbackRequestBuilder xGleanActAs(Optional<String> xGleanActAs) {
        Utils.checkNotNull(xGleanActAs, "xGleanActAs");
        this.xGleanActAs = xGleanActAs;
        return this;
    }
                
    public FeedbackRequestBuilder xGleanAuthType(String xGleanAuthType) {
        Utils.checkNotNull(xGleanAuthType, "xGleanAuthType");
        this.xGleanAuthType = Optional.of(xGleanAuthType);
        return this;
    }

    public FeedbackRequestBuilder xGleanAuthType(Optional<String> xGleanAuthType) {
        Utils.checkNotNull(xGleanAuthType, "xGleanAuthType");
        this.xGleanAuthType = xGleanAuthType;
        return this;
    }
                
    public FeedbackRequestBuilder feedbackQueryParameter(String feedbackQueryParameter) {
        Utils.checkNotNull(feedbackQueryParameter, "feedbackQueryParameter");
        this.feedbackQueryParameter = Optional.of(feedbackQueryParameter);
        return this;
    }

    public FeedbackRequestBuilder feedbackQueryParameter(Optional<String> feedbackQueryParameter) {
        Utils.checkNotNull(feedbackQueryParameter, "feedbackQueryParameter");
        this.feedbackQueryParameter = feedbackQueryParameter;
        return this;
    }
                
    public FeedbackRequestBuilder feedback1(Feedback feedback1) {
        Utils.checkNotNull(feedback1, "feedback1");
        this.feedback1 = Optional.of(feedback1);
        return this;
    }

    public FeedbackRequestBuilder feedback1(Optional<? extends Feedback> feedback1) {
        Utils.checkNotNull(feedback1, "feedback1");
        this.feedback1 = feedback1;
        return this;
    }

    public FeedbackResponse call() throws Exception {

        return sdk.reportActivity(
            xGleanActAs,
            xGleanAuthType,
            feedbackQueryParameter,
            feedback1);
    }
}
