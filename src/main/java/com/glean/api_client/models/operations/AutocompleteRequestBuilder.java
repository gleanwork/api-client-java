/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.operations;

import com.glean.api_client.models.components.AutocompleteRequest;
import com.glean.api_client.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class AutocompleteRequestBuilder {

    private Optional<String> xScioActas = Optional.empty();
    private Optional<String> xGleanAuthType = Optional.empty();
    private AutocompleteRequest autocompleteRequest;
    private final SDKMethodInterfaces.MethodCallAutocomplete sdk;

    public AutocompleteRequestBuilder(SDKMethodInterfaces.MethodCallAutocomplete sdk) {
        this.sdk = sdk;
    }
                
    public AutocompleteRequestBuilder xScioActas(String xScioActas) {
        Utils.checkNotNull(xScioActas, "xScioActas");
        this.xScioActas = Optional.of(xScioActas);
        return this;
    }

    public AutocompleteRequestBuilder xScioActas(Optional<String> xScioActas) {
        Utils.checkNotNull(xScioActas, "xScioActas");
        this.xScioActas = xScioActas;
        return this;
    }
                
    public AutocompleteRequestBuilder xGleanAuthType(String xGleanAuthType) {
        Utils.checkNotNull(xGleanAuthType, "xGleanAuthType");
        this.xGleanAuthType = Optional.of(xGleanAuthType);
        return this;
    }

    public AutocompleteRequestBuilder xGleanAuthType(Optional<String> xGleanAuthType) {
        Utils.checkNotNull(xGleanAuthType, "xGleanAuthType");
        this.xGleanAuthType = xGleanAuthType;
        return this;
    }

    public AutocompleteRequestBuilder autocompleteRequest(AutocompleteRequest autocompleteRequest) {
        Utils.checkNotNull(autocompleteRequest, "autocompleteRequest");
        this.autocompleteRequest = autocompleteRequest;
        return this;
    }

    public AutocompleteResponse call() throws Exception {

        return sdk.autocomplete(
            xScioActas,
            xGleanAuthType,
            autocompleteRequest);
    }
}
