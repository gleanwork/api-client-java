/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.operations;

import com.glean.api_client.models.components.GetDocumentAnalyticsRequest;
import com.glean.api_client.utils.Utils;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class GetdocumentanalyticsRequestBuilder {

    private Optional<String> xScioActas = Optional.empty();
    private Optional<String> xGleanAuthType = Optional.empty();
    private Optional<? extends GetDocumentAnalyticsRequest> getDocumentAnalyticsRequest = Optional.empty();
    private final SDKMethodInterfaces.MethodCallGetdocumentanalytics sdk;

    public GetdocumentanalyticsRequestBuilder(SDKMethodInterfaces.MethodCallGetdocumentanalytics sdk) {
        this.sdk = sdk;
    }
                
    public GetdocumentanalyticsRequestBuilder xScioActas(String xScioActas) {
        Utils.checkNotNull(xScioActas, "xScioActas");
        this.xScioActas = Optional.of(xScioActas);
        return this;
    }

    public GetdocumentanalyticsRequestBuilder xScioActas(Optional<String> xScioActas) {
        Utils.checkNotNull(xScioActas, "xScioActas");
        this.xScioActas = xScioActas;
        return this;
    }
                
    public GetdocumentanalyticsRequestBuilder xGleanAuthType(String xGleanAuthType) {
        Utils.checkNotNull(xGleanAuthType, "xGleanAuthType");
        this.xGleanAuthType = Optional.of(xGleanAuthType);
        return this;
    }

    public GetdocumentanalyticsRequestBuilder xGleanAuthType(Optional<String> xGleanAuthType) {
        Utils.checkNotNull(xGleanAuthType, "xGleanAuthType");
        this.xGleanAuthType = xGleanAuthType;
        return this;
    }
                
    public GetdocumentanalyticsRequestBuilder getDocumentAnalyticsRequest(GetDocumentAnalyticsRequest getDocumentAnalyticsRequest) {
        Utils.checkNotNull(getDocumentAnalyticsRequest, "getDocumentAnalyticsRequest");
        this.getDocumentAnalyticsRequest = Optional.of(getDocumentAnalyticsRequest);
        return this;
    }

    public GetdocumentanalyticsRequestBuilder getDocumentAnalyticsRequest(Optional<? extends GetDocumentAnalyticsRequest> getDocumentAnalyticsRequest) {
        Utils.checkNotNull(getDocumentAnalyticsRequest, "getDocumentAnalyticsRequest");
        this.getDocumentAnalyticsRequest = getDocumentAnalyticsRequest;
        return this;
    }

    public GetdocumentanalyticsResponse call() throws Exception {

        return sdk.getAnalytics(
            xScioActas,
            xGleanAuthType,
            getDocumentAnalyticsRequest);
    }
}
