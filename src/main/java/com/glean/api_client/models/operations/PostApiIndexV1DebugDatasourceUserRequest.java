/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.glean.api_client.models.components.DebugUserRequest;
import com.glean.api_client.utils.SpeakeasyMetadata;
import com.glean.api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class PostApiIndexV1DebugDatasourceUserRequest {

    /**
     * The datasource to which the user belongs
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=datasource")
    private String datasource;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private DebugUserRequest debugUserRequest;

    @JsonCreator
    public PostApiIndexV1DebugDatasourceUserRequest(
            String datasource,
            DebugUserRequest debugUserRequest) {
        Utils.checkNotNull(datasource, "datasource");
        Utils.checkNotNull(debugUserRequest, "debugUserRequest");
        this.datasource = datasource;
        this.debugUserRequest = debugUserRequest;
    }

    /**
     * The datasource to which the user belongs
     */
    @JsonIgnore
    public String datasource() {
        return datasource;
    }

    @JsonIgnore
    public DebugUserRequest debugUserRequest() {
        return debugUserRequest;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The datasource to which the user belongs
     */
    public PostApiIndexV1DebugDatasourceUserRequest withDatasource(String datasource) {
        Utils.checkNotNull(datasource, "datasource");
        this.datasource = datasource;
        return this;
    }

    public PostApiIndexV1DebugDatasourceUserRequest withDebugUserRequest(DebugUserRequest debugUserRequest) {
        Utils.checkNotNull(debugUserRequest, "debugUserRequest");
        this.debugUserRequest = debugUserRequest;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PostApiIndexV1DebugDatasourceUserRequest other = (PostApiIndexV1DebugDatasourceUserRequest) o;
        return 
            Objects.deepEquals(this.datasource, other.datasource) &&
            Objects.deepEquals(this.debugUserRequest, other.debugUserRequest);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            datasource,
            debugUserRequest);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PostApiIndexV1DebugDatasourceUserRequest.class,
                "datasource", datasource,
                "debugUserRequest", debugUserRequest);
    }
    
    public final static class Builder {
 
        private String datasource;
 
        private DebugUserRequest debugUserRequest;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The datasource to which the user belongs
         */
        public Builder datasource(String datasource) {
            Utils.checkNotNull(datasource, "datasource");
            this.datasource = datasource;
            return this;
        }

        public Builder debugUserRequest(DebugUserRequest debugUserRequest) {
            Utils.checkNotNull(debugUserRequest, "debugUserRequest");
            this.debugUserRequest = debugUserRequest;
            return this;
        }
        
        public PostApiIndexV1DebugDatasourceUserRequest build() {
            return new PostApiIndexV1DebugDatasourceUserRequest(
                datasource,
                debugUserRequest);
        }
    }
}
