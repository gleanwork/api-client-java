/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.glean.api_client.models.components.RunAgentRequest;
import com.glean.api_client.utils.SpeakeasyMetadata;
import com.glean.api_client.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public class RunagentRequest {

    /**
     * The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=timezoneOffset")
    private Optional<Long> timezoneOffset;

    @SpeakeasyMetadata("request:mediaType=application/json")
    private RunAgentRequest runAgentRequest;

    @JsonCreator
    public RunagentRequest(
            Optional<Long> timezoneOffset,
            RunAgentRequest runAgentRequest) {
        Utils.checkNotNull(timezoneOffset, "timezoneOffset");
        Utils.checkNotNull(runAgentRequest, "runAgentRequest");
        this.timezoneOffset = timezoneOffset;
        this.runAgentRequest = runAgentRequest;
    }
    
    public RunagentRequest(
            RunAgentRequest runAgentRequest) {
        this(Optional.empty(), runAgentRequest);
    }

    /**
     * The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
     */
    @JsonIgnore
    public Optional<Long> timezoneOffset() {
        return timezoneOffset;
    }

    @JsonIgnore
    public RunAgentRequest runAgentRequest() {
        return runAgentRequest;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
     */
    public RunagentRequest withTimezoneOffset(long timezoneOffset) {
        Utils.checkNotNull(timezoneOffset, "timezoneOffset");
        this.timezoneOffset = Optional.ofNullable(timezoneOffset);
        return this;
    }

    /**
     * The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
     */
    public RunagentRequest withTimezoneOffset(Optional<Long> timezoneOffset) {
        Utils.checkNotNull(timezoneOffset, "timezoneOffset");
        this.timezoneOffset = timezoneOffset;
        return this;
    }

    public RunagentRequest withRunAgentRequest(RunAgentRequest runAgentRequest) {
        Utils.checkNotNull(runAgentRequest, "runAgentRequest");
        this.runAgentRequest = runAgentRequest;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RunagentRequest other = (RunagentRequest) o;
        return 
            Objects.deepEquals(this.timezoneOffset, other.timezoneOffset) &&
            Objects.deepEquals(this.runAgentRequest, other.runAgentRequest);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            timezoneOffset,
            runAgentRequest);
    }
    
    @Override
    public String toString() {
        return Utils.toString(RunagentRequest.class,
                "timezoneOffset", timezoneOffset,
                "runAgentRequest", runAgentRequest);
    }
    
    public final static class Builder {
 
        private Optional<Long> timezoneOffset = Optional.empty();
 
        private RunAgentRequest runAgentRequest;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
         */
        public Builder timezoneOffset(long timezoneOffset) {
            Utils.checkNotNull(timezoneOffset, "timezoneOffset");
            this.timezoneOffset = Optional.ofNullable(timezoneOffset);
            return this;
        }

        /**
         * The offset of the client's timezone in minutes from UTC. e.g. PDT is -420 because it's 7 hours behind UTC.
         */
        public Builder timezoneOffset(Optional<Long> timezoneOffset) {
            Utils.checkNotNull(timezoneOffset, "timezoneOffset");
            this.timezoneOffset = timezoneOffset;
            return this;
        }

        public Builder runAgentRequest(RunAgentRequest runAgentRequest) {
            Utils.checkNotNull(runAgentRequest, "runAgentRequest");
            this.runAgentRequest = runAgentRequest;
            return this;
        }
        
        public RunagentRequest build() {
            return new RunagentRequest(
                timezoneOffset,
                runAgentRequest);
        }
    }
}
