/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static com.glean.api_client.glean_api_client.operations.Operations.RequestOperation;

import com.glean.api_client.glean_api_client.models.components.BulkIndexGroupsRequest;
import com.glean.api_client.glean_api_client.models.components.BulkIndexMembershipsRequest;
import com.glean.api_client.glean_api_client.models.components.BulkIndexUsersRequest;
import com.glean.api_client.glean_api_client.models.components.DeleteGroupRequest;
import com.glean.api_client.glean_api_client.models.components.DeleteMembershipRequest;
import com.glean.api_client.glean_api_client.models.components.DeleteUserRequest;
import com.glean.api_client.glean_api_client.models.components.GreenlistUsersRequest;
import com.glean.api_client.glean_api_client.models.components.IndexGroupRequest;
import com.glean.api_client.glean_api_client.models.components.IndexMembershipRequest;
import com.glean.api_client.glean_api_client.models.components.IndexUserRequest;
import com.glean.api_client.glean_api_client.models.components.ProcessAllMembershipsRequest;
import com.glean.api_client.glean_api_client.models.components.UpdatePermissionsRequest;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1BetausersRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1BetausersResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1BulkindexgroupsRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1BulkindexgroupsResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1BulkindexmembershipsRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1BulkindexmembershipsResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1BulkindexusersRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1BulkindexusersResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1DeletegroupRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1DeletegroupResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1DeletemembershipRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1DeletemembershipResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1DeleteuserRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1DeleteuserResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1IndexgroupRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1IndexgroupResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1IndexmembershipRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1IndexmembershipResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1IndexuserRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1IndexuserResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1ProcessallmembershipsRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1ProcessallmembershipsResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1UpdatepermissionsRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1UpdatepermissionsResponse;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1BetausersOperation;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1BulkindexgroupsOperation;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1BulkindexmembershipsOperation;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1BulkindexusersOperation;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1DeletegroupOperation;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1DeletemembershipOperation;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1DeleteuserOperation;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1IndexgroupOperation;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1IndexmembershipOperation;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1IndexuserOperation;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1ProcessallmembershipsOperation;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1UpdatepermissionsOperation;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class Permissions {
    private final SDKConfiguration sdkConfiguration;

    Permissions(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Update document permissions
     * 
     * <p>Updates the permissions for a given document without modifying document content.
     * 
     * @return The call builder
     */
    public PostApiIndexV1UpdatepermissionsRequestBuilder updatePermissions() {
        return new PostApiIndexV1UpdatepermissionsRequestBuilder(sdkConfiguration);
    }

    /**
     * Update document permissions
     * 
     * <p>Updates the permissions for a given document without modifying document content.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1UpdatepermissionsResponse updatePermissions(
            UpdatePermissionsRequest request) throws Exception {
        RequestOperation<UpdatePermissionsRequest, PostApiIndexV1UpdatepermissionsResponse> operation
              = new PostApiIndexV1UpdatepermissionsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Index user
     * 
     * <p>Adds a datasource user or updates an existing user.
     * 
     * @return The call builder
     */
    public PostApiIndexV1IndexuserRequestBuilder indexUser() {
        return new PostApiIndexV1IndexuserRequestBuilder(sdkConfiguration);
    }

    /**
     * Index user
     * 
     * <p>Adds a datasource user or updates an existing user.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1IndexuserResponse indexUser(
            IndexUserRequest request) throws Exception {
        RequestOperation<IndexUserRequest, PostApiIndexV1IndexuserResponse> operation
              = new PostApiIndexV1IndexuserOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Bulk index users
     * 
     * <p>Replaces the users in a datasource using paginated batch API calls. Please refer to the [bulk indexing](https://developers.glean.com/docs/indexing_api_bulk_indexing/#bulk-upload-model) documentation for an explanation of how to use bulk endpoints.
     * 
     * @return The call builder
     */
    public PostApiIndexV1BulkindexusersRequestBuilder bulkIndexUsers() {
        return new PostApiIndexV1BulkindexusersRequestBuilder(sdkConfiguration);
    }

    /**
     * Bulk index users
     * 
     * <p>Replaces the users in a datasource using paginated batch API calls. Please refer to the [bulk indexing](https://developers.glean.com/docs/indexing_api_bulk_indexing/#bulk-upload-model) documentation for an explanation of how to use bulk endpoints.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1BulkindexusersResponse bulkIndexUsers(
            BulkIndexUsersRequest request) throws Exception {
        RequestOperation<BulkIndexUsersRequest, PostApiIndexV1BulkindexusersResponse> operation
              = new PostApiIndexV1BulkindexusersOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Index group
     * 
     * <p>Add or update a group in the datasource.
     * 
     * @return The call builder
     */
    public PostApiIndexV1IndexgroupRequestBuilder indexGroup() {
        return new PostApiIndexV1IndexgroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Index group
     * 
     * <p>Add or update a group in the datasource.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1IndexgroupResponse indexGroup(
            IndexGroupRequest request) throws Exception {
        RequestOperation<IndexGroupRequest, PostApiIndexV1IndexgroupResponse> operation
              = new PostApiIndexV1IndexgroupOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Bulk index groups
     * 
     * <p>Replaces the groups in a datasource using paginated batch API calls. Please refer to the [bulk indexing](https://developers.glean.com/docs/indexing_api_bulk_indexing/#bulk-upload-model) documentation for an explanation of how to use bulk endpoints.
     * 
     * @return The call builder
     */
    public PostApiIndexV1BulkindexgroupsRequestBuilder bulkIndexGroups() {
        return new PostApiIndexV1BulkindexgroupsRequestBuilder(sdkConfiguration);
    }

    /**
     * Bulk index groups
     * 
     * <p>Replaces the groups in a datasource using paginated batch API calls. Please refer to the [bulk indexing](https://developers.glean.com/docs/indexing_api_bulk_indexing/#bulk-upload-model) documentation for an explanation of how to use bulk endpoints.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1BulkindexgroupsResponse bulkIndexGroups(
            BulkIndexGroupsRequest request) throws Exception {
        RequestOperation<BulkIndexGroupsRequest, PostApiIndexV1BulkindexgroupsResponse> operation
              = new PostApiIndexV1BulkindexgroupsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Index membership
     * 
     * <p>Add the memberships of a group in the datasource.
     * 
     * @return The call builder
     */
    public PostApiIndexV1IndexmembershipRequestBuilder indexMembership() {
        return new PostApiIndexV1IndexmembershipRequestBuilder(sdkConfiguration);
    }

    /**
     * Index membership
     * 
     * <p>Add the memberships of a group in the datasource.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1IndexmembershipResponse indexMembership(
            IndexMembershipRequest request) throws Exception {
        RequestOperation<IndexMembershipRequest, PostApiIndexV1IndexmembershipResponse> operation
              = new PostApiIndexV1IndexmembershipOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Bulk index memberships for a group
     * 
     * <p>Replaces the memberships for a group in a datasource using paginated batch API calls. Please refer to the [bulk indexing](https://developers.glean.com/docs/indexing_api_bulk_indexing/#bulk-upload-model) documentation for an explanation of how to use bulk endpoints.
     * 
     * @return The call builder
     */
    public PostApiIndexV1BulkindexmembershipsRequestBuilder bulkIndexMemberships() {
        return new PostApiIndexV1BulkindexmembershipsRequestBuilder(sdkConfiguration);
    }

    /**
     * Bulk index memberships for a group
     * 
     * <p>Replaces the memberships for a group in a datasource using paginated batch API calls. Please refer to the [bulk indexing](https://developers.glean.com/docs/indexing_api_bulk_indexing/#bulk-upload-model) documentation for an explanation of how to use bulk endpoints.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1BulkindexmembershipsResponse bulkIndexMemberships(
            BulkIndexMembershipsRequest request) throws Exception {
        RequestOperation<BulkIndexMembershipsRequest, PostApiIndexV1BulkindexmembershipsResponse> operation
              = new PostApiIndexV1BulkindexmembershipsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Schedules the processing of group memberships
     * 
     * <p>Schedules the immediate processing of all group memberships uploaded through the indexing API. By default the uploaded group memberships will be processed asynchronously but this API can be used to schedule processing of all memberships on demand.
     * 
     * @return The call builder
     */
    public PostApiIndexV1ProcessallmembershipsRequestBuilder processMemberships() {
        return new PostApiIndexV1ProcessallmembershipsRequestBuilder(sdkConfiguration);
    }

    /**
     * Schedules the processing of group memberships
     * 
     * <p>Schedules the immediate processing of all group memberships uploaded through the indexing API. By default the uploaded group memberships will be processed asynchronously but this API can be used to schedule processing of all memberships on demand.
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1ProcessallmembershipsResponse processMembershipsDirect() throws Exception {
        return processMemberships(Optional.empty());
    }

    /**
     * Schedules the processing of group memberships
     * 
     * <p>Schedules the immediate processing of all group memberships uploaded through the indexing API. By default the uploaded group memberships will be processed asynchronously but this API can be used to schedule processing of all memberships on demand.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1ProcessallmembershipsResponse processMemberships(
            Optional<? extends ProcessAllMembershipsRequest> request) throws Exception {
        RequestOperation<Optional<? extends ProcessAllMembershipsRequest>, PostApiIndexV1ProcessallmembershipsResponse> operation
              = new PostApiIndexV1ProcessallmembershipsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Delete user
     * 
     * <p>Delete the user from the datasource. Silently succeeds if user is not present.
     * 
     * @return The call builder
     */
    public PostApiIndexV1DeleteuserRequestBuilder deleteUser() {
        return new PostApiIndexV1DeleteuserRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete user
     * 
     * <p>Delete the user from the datasource. Silently succeeds if user is not present.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1DeleteuserResponse deleteUser(
            DeleteUserRequest request) throws Exception {
        RequestOperation<DeleteUserRequest, PostApiIndexV1DeleteuserResponse> operation
              = new PostApiIndexV1DeleteuserOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Delete group
     * 
     * <p>Delete group from the datasource. Silently succeeds if group is not present.
     * 
     * @return The call builder
     */
    public PostApiIndexV1DeletegroupRequestBuilder deleteGroup() {
        return new PostApiIndexV1DeletegroupRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete group
     * 
     * <p>Delete group from the datasource. Silently succeeds if group is not present.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1DeletegroupResponse deleteGroup(
            DeleteGroupRequest request) throws Exception {
        RequestOperation<DeleteGroupRequest, PostApiIndexV1DeletegroupResponse> operation
              = new PostApiIndexV1DeletegroupOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Delete membership
     * 
     * <p>Delete membership to a group in the specified datasource. Silently succeeds if membership is not present.
     * 
     * @return The call builder
     */
    public PostApiIndexV1DeletemembershipRequestBuilder deleteMembership() {
        return new PostApiIndexV1DeletemembershipRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete membership
     * 
     * <p>Delete membership to a group in the specified datasource. Silently succeeds if membership is not present.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1DeletemembershipResponse deleteMembership(
            DeleteMembershipRequest request) throws Exception {
        RequestOperation<DeleteMembershipRequest, PostApiIndexV1DeletemembershipResponse> operation
              = new PostApiIndexV1DeletemembershipOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Beta users
     * 
     * <p>Allow the datasource be visible to the specified beta users. The default behaviour is datasource being visible to all users if it is enabled and not visible to any user if it is not enabled.
     * 
     * @return The call builder
     */
    public PostApiIndexV1BetausersRequestBuilder authorizeBetaUsers() {
        return new PostApiIndexV1BetausersRequestBuilder(sdkConfiguration);
    }

    /**
     * Beta users
     * 
     * <p>Allow the datasource be visible to the specified beta users. The default behaviour is datasource being visible to all users if it is enabled and not visible to any user if it is not enabled.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1BetausersResponse authorizeBetaUsers(
            GreenlistUsersRequest request) throws Exception {
        RequestOperation<GreenlistUsersRequest, PostApiIndexV1BetausersResponse> operation
              = new PostApiIndexV1BetausersOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
