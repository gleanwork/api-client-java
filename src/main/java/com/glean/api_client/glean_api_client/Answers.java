/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static com.glean.api_client.glean_api_client.operations.Operations.RequestOperation;

import com.glean.api_client.glean_api_client.models.components.CreateAnswerRequest;
import com.glean.api_client.glean_api_client.models.components.DeleteAnswerRequest;
import com.glean.api_client.glean_api_client.models.components.EditAnswerRequest;
import com.glean.api_client.glean_api_client.models.components.GetAnswerRequest;
import com.glean.api_client.glean_api_client.models.components.ListAnswersRequest;
import com.glean.api_client.glean_api_client.models.operations.CreateanswerRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.CreateanswerResponse;
import com.glean.api_client.glean_api_client.models.operations.DeleteanswerRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.DeleteanswerResponse;
import com.glean.api_client.glean_api_client.models.operations.EditanswerRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.EditanswerResponse;
import com.glean.api_client.glean_api_client.models.operations.GetanswerRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.GetanswerResponse;
import com.glean.api_client.glean_api_client.models.operations.ListanswersRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.ListanswersResponse;
import com.glean.api_client.glean_api_client.operations.CreateanswerOperation;
import com.glean.api_client.glean_api_client.operations.DeleteanswerOperation;
import com.glean.api_client.glean_api_client.operations.EditanswerOperation;
import com.glean.api_client.glean_api_client.operations.GetanswerOperation;
import com.glean.api_client.glean_api_client.operations.ListanswersOperation;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class Answers {
    private final SDKConfiguration sdkConfiguration;

    Answers(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create Answer
     * 
     * <p>Create a user-generated Answer that contains a question and answer.
     * 
     * @return The call builder
     */
    public CreateanswerRequestBuilder create() {
        return new CreateanswerRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Answer
     * 
     * <p>Create a user-generated Answer that contains a question and answer.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateanswerResponse create(
            CreateAnswerRequest request) throws Exception {
        RequestOperation<CreateAnswerRequest, CreateanswerResponse> operation
              = new CreateanswerOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Delete Answer
     * 
     * <p>Delete an existing user-generated Answer.
     * 
     * @return The call builder
     */
    public DeleteanswerRequestBuilder delete() {
        return new DeleteanswerRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete Answer
     * 
     * <p>Delete an existing user-generated Answer.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public DeleteanswerResponse delete(
            DeleteAnswerRequest request) throws Exception {
        RequestOperation<DeleteAnswerRequest, DeleteanswerResponse> operation
              = new DeleteanswerOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update Answer
     * 
     * <p>Update an existing user-generated Answer.
     * 
     * @return The call builder
     */
    public EditanswerRequestBuilder update() {
        return new EditanswerRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Answer
     * 
     * <p>Update an existing user-generated Answer.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public EditanswerResponse update(
            EditAnswerRequest request) throws Exception {
        RequestOperation<EditAnswerRequest, EditanswerResponse> operation
              = new EditanswerOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Read Answer
     * 
     * <p>Read the details of a particular Answer given its ID.
     * 
     * @return The call builder
     */
    public GetanswerRequestBuilder retrieve() {
        return new GetanswerRequestBuilder(sdkConfiguration);
    }

    /**
     * Read Answer
     * 
     * <p>Read the details of a particular Answer given its ID.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetanswerResponse retrieve(
            GetAnswerRequest request) throws Exception {
        RequestOperation<GetAnswerRequest, GetanswerResponse> operation
              = new GetanswerOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * List Answers
     * 
     * <p>List Answers created by the current user.
     * 
     * @return The call builder
     */
    public ListanswersRequestBuilder list() {
        return new ListanswersRequestBuilder(sdkConfiguration);
    }

    /**
     * List Answers
     * 
     * <p>List Answers created by the current user.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ListanswersResponse list(
            ListAnswersRequest request) throws Exception {
        RequestOperation<ListAnswersRequest, ListanswersResponse> operation
              = new ListanswersOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
