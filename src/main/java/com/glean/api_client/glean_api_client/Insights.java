/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static com.glean.api_client.glean_api_client.operations.Operations.RequestOperation;

import com.glean.api_client.glean_api_client.models.components.InsightsRequest;
import com.glean.api_client.glean_api_client.models.operations.InsightsRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.InsightsResponse;
import com.glean.api_client.glean_api_client.operations.InsightsOperation;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class Insights {
    private final SDKConfiguration sdkConfiguration;

    Insights(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Read insights
     * 
     * <p>Reads the aggregate information for each user, query, and content.
     * 
     * @return The call builder
     */
    public InsightsRequestBuilder retrieve() {
        return new InsightsRequestBuilder(sdkConfiguration);
    }

    /**
     * Read insights
     * 
     * <p>Reads the aggregate information for each user, query, and content.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public InsightsResponse retrieve(
            InsightsRequest request) throws Exception {
        RequestOperation<InsightsRequest, InsightsResponse> operation
              = new InsightsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
