/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

public class SocialNetwork {

    /**
     * Possible values are "twitter", "linkedin".
     */
    @JsonProperty("name")
    private String name;

    /**
     * Human-readable profile name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profileName")
    private Optional<String> profileName;

    /**
     * Link to profile.
     */
    @JsonProperty("profileUrl")
    private String profileUrl;

    @JsonCreator
    public SocialNetwork(
            @JsonProperty("name") String name,
            @JsonProperty("profileName") Optional<String> profileName,
            @JsonProperty("profileUrl") String profileUrl) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(profileName, "profileName");
        Utils.checkNotNull(profileUrl, "profileUrl");
        this.name = name;
        this.profileName = profileName;
        this.profileUrl = profileUrl;
    }
    
    public SocialNetwork(
            String name,
            String profileUrl) {
        this(name, Optional.empty(), profileUrl);
    }

    /**
     * Possible values are "twitter", "linkedin".
     */
    @JsonIgnore
    public String name() {
        return name;
    }

    /**
     * Human-readable profile name.
     */
    @JsonIgnore
    public Optional<String> profileName() {
        return profileName;
    }

    /**
     * Link to profile.
     */
    @JsonIgnore
    public String profileUrl() {
        return profileUrl;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Possible values are "twitter", "linkedin".
     */
    public SocialNetwork withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * Human-readable profile name.
     */
    public SocialNetwork withProfileName(String profileName) {
        Utils.checkNotNull(profileName, "profileName");
        this.profileName = Optional.ofNullable(profileName);
        return this;
    }

    /**
     * Human-readable profile name.
     */
    public SocialNetwork withProfileName(Optional<String> profileName) {
        Utils.checkNotNull(profileName, "profileName");
        this.profileName = profileName;
        return this;
    }

    /**
     * Link to profile.
     */
    public SocialNetwork withProfileUrl(String profileUrl) {
        Utils.checkNotNull(profileUrl, "profileUrl");
        this.profileUrl = profileUrl;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SocialNetwork other = (SocialNetwork) o;
        return 
            Utils.enhancedDeepEquals(this.name, other.name) &&
            Utils.enhancedDeepEquals(this.profileName, other.profileName) &&
            Utils.enhancedDeepEquals(this.profileUrl, other.profileUrl);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            name,
            profileName,
            profileUrl);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SocialNetwork.class,
                "name", name,
                "profileName", profileName,
                "profileUrl", profileUrl);
    }
    
    public final static class Builder {
 
        private String name;
 
        private Optional<String> profileName = Optional.empty();
 
        private String profileUrl;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Possible values are "twitter", "linkedin".
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        /**
         * Human-readable profile name.
         */
        public Builder profileName(String profileName) {
            Utils.checkNotNull(profileName, "profileName");
            this.profileName = Optional.ofNullable(profileName);
            return this;
        }

        /**
         * Human-readable profile name.
         */
        public Builder profileName(Optional<String> profileName) {
            Utils.checkNotNull(profileName, "profileName");
            this.profileName = profileName;
            return this;
        }

        /**
         * Link to profile.
         */
        public Builder profileUrl(String profileUrl) {
            Utils.checkNotNull(profileUrl, "profileUrl");
            this.profileUrl = profileUrl;
            return this;
        }
        
        public SocialNetwork build() {
            return new SocialNetwork(
                name,
                profileName,
                profileUrl);
        }
    }
}
