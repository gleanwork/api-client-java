/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;

public class AgentResult {

    @JsonProperty("agent")
    private Agent agent;

    @JsonCreator
    public AgentResult(
            @JsonProperty("agent") Agent agent) {
        Utils.checkNotNull(agent, "agent");
        this.agent = agent;
    }

    @JsonIgnore
    public Agent agent() {
        return agent;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    public AgentResult withAgent(Agent agent) {
        Utils.checkNotNull(agent, "agent");
        this.agent = agent;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AgentResult other = (AgentResult) o;
        return 
            Objects.deepEquals(this.agent, other.agent);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            agent);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AgentResult.class,
                "agent", agent);
    }
    
    public final static class Builder {
 
        private Agent agent;
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder agent(Agent agent) {
            Utils.checkNotNull(agent, "agent");
            this.agent = agent;
            return this;
        }
        
        public AgentResult build() {
            return new AgentResult(
                agent);
        }
    }
}
