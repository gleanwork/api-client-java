/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

public class ChatZeroStateSuggestionOptions {

    /**
     * The Chat Application ID this feed request should be scoped to. Empty means there is no Chat Application ID..
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationId")
    private Optional<String> applicationId;

    @JsonCreator
    public ChatZeroStateSuggestionOptions(
            @JsonProperty("applicationId") Optional<String> applicationId) {
        Utils.checkNotNull(applicationId, "applicationId");
        this.applicationId = applicationId;
    }
    
    public ChatZeroStateSuggestionOptions() {
        this(Optional.empty());
    }

    /**
     * The Chat Application ID this feed request should be scoped to. Empty means there is no Chat Application ID..
     */
    @JsonIgnore
    public Optional<String> applicationId() {
        return applicationId;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The Chat Application ID this feed request should be scoped to. Empty means there is no Chat Application ID..
     */
    public ChatZeroStateSuggestionOptions withApplicationId(String applicationId) {
        Utils.checkNotNull(applicationId, "applicationId");
        this.applicationId = Optional.ofNullable(applicationId);
        return this;
    }

    /**
     * The Chat Application ID this feed request should be scoped to. Empty means there is no Chat Application ID..
     */
    public ChatZeroStateSuggestionOptions withApplicationId(Optional<String> applicationId) {
        Utils.checkNotNull(applicationId, "applicationId");
        this.applicationId = applicationId;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ChatZeroStateSuggestionOptions other = (ChatZeroStateSuggestionOptions) o;
        return 
            Utils.enhancedDeepEquals(this.applicationId, other.applicationId);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            applicationId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ChatZeroStateSuggestionOptions.class,
                "applicationId", applicationId);
    }
    
    public final static class Builder {
 
        private Optional<String> applicationId = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The Chat Application ID this feed request should be scoped to. Empty means there is no Chat Application ID..
         */
        public Builder applicationId(String applicationId) {
            Utils.checkNotNull(applicationId, "applicationId");
            this.applicationId = Optional.ofNullable(applicationId);
            return this;
        }

        /**
         * The Chat Application ID this feed request should be scoped to. Empty means there is no Chat Application ID..
         */
        public Builder applicationId(Optional<String> applicationId) {
            Utils.checkNotNull(applicationId, "applicationId");
            this.applicationId = applicationId;
            return this;
        }
        
        public ChatZeroStateSuggestionOptions build() {
            return new ChatZeroStateSuggestionOptions(
                applicationId);
        }
    }
}
