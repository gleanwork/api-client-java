/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Optional;

public class ClusterGroup {

    /**
     * A list of results that should be displayed as associated with this result.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clusteredResults")
    private Optional<? extends List<SearchResult>> clusteredResults;

    /**
     * The reason for inclusion of clusteredResults.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clusterType")
    private Optional<? extends ClusterTypeEnum> clusterType;

    /**
     * The default number of results to display before truncating and showing a "see more" link
     */
    @JsonProperty("visibleCountHint")
    private long visibleCountHint;

    @JsonCreator
    public ClusterGroup(
            @JsonProperty("clusteredResults") Optional<? extends List<SearchResult>> clusteredResults,
            @JsonProperty("clusterType") Optional<? extends ClusterTypeEnum> clusterType,
            @JsonProperty("visibleCountHint") long visibleCountHint) {
        Utils.checkNotNull(clusteredResults, "clusteredResults");
        Utils.checkNotNull(clusterType, "clusterType");
        Utils.checkNotNull(visibleCountHint, "visibleCountHint");
        this.clusteredResults = clusteredResults;
        this.clusterType = clusterType;
        this.visibleCountHint = visibleCountHint;
    }
    
    public ClusterGroup(
            long visibleCountHint) {
        this(Optional.empty(), Optional.empty(), visibleCountHint);
    }

    /**
     * A list of results that should be displayed as associated with this result.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<SearchResult>> clusteredResults() {
        return (Optional<List<SearchResult>>) clusteredResults;
    }

    /**
     * The reason for inclusion of clusteredResults.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ClusterTypeEnum> clusterType() {
        return (Optional<ClusterTypeEnum>) clusterType;
    }

    /**
     * The default number of results to display before truncating and showing a "see more" link
     */
    @JsonIgnore
    public long visibleCountHint() {
        return visibleCountHint;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * A list of results that should be displayed as associated with this result.
     */
    public ClusterGroup withClusteredResults(List<SearchResult> clusteredResults) {
        Utils.checkNotNull(clusteredResults, "clusteredResults");
        this.clusteredResults = Optional.ofNullable(clusteredResults);
        return this;
    }

    /**
     * A list of results that should be displayed as associated with this result.
     */
    public ClusterGroup withClusteredResults(Optional<? extends List<SearchResult>> clusteredResults) {
        Utils.checkNotNull(clusteredResults, "clusteredResults");
        this.clusteredResults = clusteredResults;
        return this;
    }

    /**
     * The reason for inclusion of clusteredResults.
     */
    public ClusterGroup withClusterType(ClusterTypeEnum clusterType) {
        Utils.checkNotNull(clusterType, "clusterType");
        this.clusterType = Optional.ofNullable(clusterType);
        return this;
    }

    /**
     * The reason for inclusion of clusteredResults.
     */
    public ClusterGroup withClusterType(Optional<? extends ClusterTypeEnum> clusterType) {
        Utils.checkNotNull(clusterType, "clusterType");
        this.clusterType = clusterType;
        return this;
    }

    /**
     * The default number of results to display before truncating and showing a "see more" link
     */
    public ClusterGroup withVisibleCountHint(long visibleCountHint) {
        Utils.checkNotNull(visibleCountHint, "visibleCountHint");
        this.visibleCountHint = visibleCountHint;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ClusterGroup other = (ClusterGroup) o;
        return 
            Utils.enhancedDeepEquals(this.clusteredResults, other.clusteredResults) &&
            Utils.enhancedDeepEquals(this.clusterType, other.clusterType) &&
            Utils.enhancedDeepEquals(this.visibleCountHint, other.visibleCountHint);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            clusteredResults,
            clusterType,
            visibleCountHint);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ClusterGroup.class,
                "clusteredResults", clusteredResults,
                "clusterType", clusterType,
                "visibleCountHint", visibleCountHint);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<SearchResult>> clusteredResults = Optional.empty();
 
        private Optional<? extends ClusterTypeEnum> clusterType = Optional.empty();
 
        private Long visibleCountHint;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * A list of results that should be displayed as associated with this result.
         */
        public Builder clusteredResults(List<SearchResult> clusteredResults) {
            Utils.checkNotNull(clusteredResults, "clusteredResults");
            this.clusteredResults = Optional.ofNullable(clusteredResults);
            return this;
        }

        /**
         * A list of results that should be displayed as associated with this result.
         */
        public Builder clusteredResults(Optional<? extends List<SearchResult>> clusteredResults) {
            Utils.checkNotNull(clusteredResults, "clusteredResults");
            this.clusteredResults = clusteredResults;
            return this;
        }

        /**
         * The reason for inclusion of clusteredResults.
         */
        public Builder clusterType(ClusterTypeEnum clusterType) {
            Utils.checkNotNull(clusterType, "clusterType");
            this.clusterType = Optional.ofNullable(clusterType);
            return this;
        }

        /**
         * The reason for inclusion of clusteredResults.
         */
        public Builder clusterType(Optional<? extends ClusterTypeEnum> clusterType) {
            Utils.checkNotNull(clusterType, "clusterType");
            this.clusterType = clusterType;
            return this;
        }

        /**
         * The default number of results to display before truncating and showing a "see more" link
         */
        public Builder visibleCountHint(long visibleCountHint) {
            Utils.checkNotNull(visibleCountHint, "visibleCountHint");
            this.visibleCountHint = visibleCountHint;
            return this;
        }
        
        public ClusterGroup build() {
            return new ClusterGroup(
                clusteredResults,
                clusterType,
                visibleCountHint);
        }
    }
}
