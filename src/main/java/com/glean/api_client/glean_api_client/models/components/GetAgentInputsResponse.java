/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;

public class GetAgentInputsResponse {

    /**
     * The inputs to the agent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputs")
    private Optional<? extends List<WorkflowInputField>> inputs;

    @JsonCreator
    public GetAgentInputsResponse(
            @JsonProperty("inputs") Optional<? extends List<WorkflowInputField>> inputs) {
        Utils.checkNotNull(inputs, "inputs");
        this.inputs = inputs;
    }
    
    public GetAgentInputsResponse() {
        this(Optional.empty());
    }

    /**
     * The inputs to the agent.
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<WorkflowInputField>> inputs() {
        return (Optional<List<WorkflowInputField>>) inputs;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The inputs to the agent.
     */
    public GetAgentInputsResponse withInputs(List<WorkflowInputField> inputs) {
        Utils.checkNotNull(inputs, "inputs");
        this.inputs = Optional.ofNullable(inputs);
        return this;
    }

    /**
     * The inputs to the agent.
     */
    public GetAgentInputsResponse withInputs(Optional<? extends List<WorkflowInputField>> inputs) {
        Utils.checkNotNull(inputs, "inputs");
        this.inputs = inputs;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetAgentInputsResponse other = (GetAgentInputsResponse) o;
        return 
            Objects.deepEquals(this.inputs, other.inputs);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            inputs);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetAgentInputsResponse.class,
                "inputs", inputs);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<WorkflowInputField>> inputs = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The inputs to the agent.
         */
        public Builder inputs(List<WorkflowInputField> inputs) {
            Utils.checkNotNull(inputs, "inputs");
            this.inputs = Optional.ofNullable(inputs);
            return this;
        }

        /**
         * The inputs to the agent.
         */
        public Builder inputs(Optional<? extends List<WorkflowInputField>> inputs) {
            Utils.checkNotNull(inputs, "inputs");
            this.inputs = inputs;
            return this;
        }
        
        public GetAgentInputsResponse build() {
            return new GetAgentInputsResponse(
                inputs);
        }
    }
}
