/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * Relation
 * 
 * <p>How this document relates to the including entity.
 */
public enum Relation {
    ATTACHMENT("ATTACHMENT"),
    CANONICAL("CANONICAL"),
    CASE("CASE"),
    CONTACT("CONTACT"),
    CONVERSATION_MESSAGES("CONVERSATION_MESSAGES"),
    EXPERT("EXPERT"),
    FROM("FROM"),
    HIGHLIGHT("HIGHLIGHT"),
    OPPORTUNITY("OPPORTUNITY"),
    RECENT("RECENT"),
    SOURCE("SOURCE"),
    TICKET("TICKET"),
    TRANSCRIPT("TRANSCRIPT"),
    WITH("WITH");

    @JsonValue
    private final String value;

    Relation(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<Relation> fromValue(String value) {
        for (Relation o: Relation.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

