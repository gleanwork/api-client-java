/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public enum IconType {
    COLLECTION("COLLECTION"),
    CUSTOM("CUSTOM"),
    DATASOURCE("DATASOURCE"),
    DATASOURCE_INSTANCE("DATASOURCE_INSTANCE"),
    FAVICON("FAVICON"),
    FILE_TYPE("FILE_TYPE"),
    GENERATED_BACKGROUND("GENERATED_BACKGROUND"),
    GLYPH("GLYPH"),
    MIME_TYPE("MIME_TYPE"),
    NO_ICON("NO_ICON"),
    PERSON("PERSON"),
    REACTIONS("REACTIONS"),
    URL("URL");

    @JsonValue
    private final String value;

    IconType(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<IconType> fromValue(String value) {
        for (IconType o: IconType.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

