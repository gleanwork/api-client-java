/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * DocCategory
 * 
 * <p>The document category of this object type.
 */
public enum DocCategory {
    UNCATEGORIZED("UNCATEGORIZED"),
    TICKETS("TICKETS"),
    CRM("CRM"),
    PUBLISHED_CONTENT("PUBLISHED_CONTENT"),
    COLLABORATIVE_CONTENT("COLLABORATIVE_CONTENT"),
    QUESTION_ANSWER("QUESTION_ANSWER"),
    MESSAGING("MESSAGING"),
    CODE_REPOSITORY("CODE_REPOSITORY"),
    CHANGE_MANAGEMENT("CHANGE_MANAGEMENT"),
    PEOPLE("PEOPLE"),
    EMAIL("EMAIL"),
    SSO("SSO"),
    ATS("ATS"),
    KNOWLEDGE_HUB("KNOWLEDGE_HUB"),
    EXTERNAL_SHORTCUT("EXTERNAL_SHORTCUT"),
    ENTITY("ENTITY"),
    CALENDAR("CALENDAR");

    @JsonValue
    private final String value;

    DocCategory(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<DocCategory> fromValue(String value) {
        for (DocCategory o: DocCategory.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

