/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;

/**
 * DeleteTeamRequest
 * 
 * <p>Describes the request body of the /deleteteam API call
 */
public class DeleteTeamRequest {

    /**
     * The deleted team's id
     */
    @JsonProperty("id")
    private String id;

    @JsonCreator
    public DeleteTeamRequest(
            @JsonProperty("id") String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
    }

    /**
     * The deleted team's id
     */
    @JsonIgnore
    public String id() {
        return id;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The deleted team's id
     */
    public DeleteTeamRequest withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeleteTeamRequest other = (DeleteTeamRequest) o;
        return 
            Utils.enhancedDeepEquals(this.id, other.id);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            id);
    }
    
    @Override
    public String toString() {
        return Utils.toString(DeleteTeamRequest.class,
                "id", id);
    }
    
    public final static class Builder {
 
        private String id;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The deleted team's id
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }
        
        public DeleteTeamRequest build() {
            return new DeleteTeamRequest(
                id);
        }
    }
}
