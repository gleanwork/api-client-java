/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * AuthType
 * 
 * <p>The type of authentication being used.
 * Use 'OAUTH_*' when Glean calls an external API (e.g., Jira) on behalf of a user to obtain an OAuth token.
 * 'OAUTH_ADMIN' utilizes an admin token for external API calls on behalf all users.
 * 'OAUTH_USER' uses individual user tokens for external API calls.
 * 'DWD' refers to domain wide delegation.
 */
public enum AuthType {
    NONE("NONE"),
    OAUTH_USER("OAUTH_USER"),
    OAUTH_ADMIN("OAUTH_ADMIN"),
    API_KEY("API_KEY"),
    BASIC_AUTH("BASIC_AUTH"),
    DWD("DWD");

    @JsonValue
    private final String value;

    AuthType(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<AuthType> fromValue(String value) {
        for (AuthType o: AuthType.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

