/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * TeamStatus
 * 
 * <p>whether this team is fully processed or there are still unprocessed operations that'll affect it
 */
public enum TeamStatus {
    PROCESSED("PROCESSED"),
    QUEUED_FOR_CREATION("QUEUED_FOR_CREATION"),
    QUEUED_FOR_DELETION("QUEUED_FOR_DELETION");

    @JsonValue
    private final String value;

    TeamStatus(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<TeamStatus> fromValue(String value) {
        for (TeamStatus o: TeamStatus.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

