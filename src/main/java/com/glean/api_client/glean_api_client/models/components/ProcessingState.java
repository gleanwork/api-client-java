/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonValue;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

/**
 * ProcessingState
 * 
 * <p>The current state of the upload, an enum of UNAVAILABLE, UPLOAD STARTED, UPLOAD IN PROGRESS, UPLOAD COMPLETED, DELETION PAUSED, INDEXING COMPLETED
 */
public enum ProcessingState {
    UNAVAILABLE("UNAVAILABLE"),
    UPLOAD_STARTED("UPLOAD STARTED"),
    UPLOAD_IN_PROGRESS("UPLOAD IN PROGRESS"),
    UPLOAD_COMPLETED("UPLOAD COMPLETED"),
    DELETION_PAUSED("DELETION PAUSED"),
    INDEXING_COMPLETED("INDEXING COMPLETED");

    @JsonValue
    private final String value;

    ProcessingState(String value) {
        this.value = value;
    }
    
    public String value() {
        return value;
    }
    
    public static Optional<ProcessingState> fromValue(String value) {
        for (ProcessingState o: ProcessingState.values()) {
            if (Objects.deepEquals(o.value, value)) {
                return Optional.of(o);
            }
        }
        return Optional.empty();
    }
}

