/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;

public class Verification {

    /**
     * The verification state for the document.
     */
    @JsonProperty("state")
    private State state;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    private Optional<? extends VerificationMetadata> metadata;

    @JsonCreator
    public Verification(
            @JsonProperty("state") State state,
            @JsonProperty("metadata") Optional<? extends VerificationMetadata> metadata) {
        Utils.checkNotNull(state, "state");
        Utils.checkNotNull(metadata, "metadata");
        this.state = state;
        this.metadata = metadata;
    }
    
    public Verification(
            State state) {
        this(state, Optional.empty());
    }

    /**
     * The verification state for the document.
     */
    @JsonIgnore
    public State state() {
        return state;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<VerificationMetadata> metadata() {
        return (Optional<VerificationMetadata>) metadata;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * The verification state for the document.
     */
    public Verification withState(State state) {
        Utils.checkNotNull(state, "state");
        this.state = state;
        return this;
    }

    public Verification withMetadata(VerificationMetadata metadata) {
        Utils.checkNotNull(metadata, "metadata");
        this.metadata = Optional.ofNullable(metadata);
        return this;
    }

    public Verification withMetadata(Optional<? extends VerificationMetadata> metadata) {
        Utils.checkNotNull(metadata, "metadata");
        this.metadata = metadata;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Verification other = (Verification) o;
        return 
            Objects.deepEquals(this.state, other.state) &&
            Objects.deepEquals(this.metadata, other.metadata);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            state,
            metadata);
    }
    
    @Override
    public String toString() {
        return Utils.toString(Verification.class,
                "state", state,
                "metadata", metadata);
    }
    
    public final static class Builder {
 
        private State state;
 
        private Optional<? extends VerificationMetadata> metadata = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The verification state for the document.
         */
        public Builder state(State state) {
            Utils.checkNotNull(state, "state");
            this.state = state;
            return this;
        }

        public Builder metadata(VerificationMetadata metadata) {
            Utils.checkNotNull(metadata, "metadata");
            this.metadata = Optional.ofNullable(metadata);
            return this;
        }

        public Builder metadata(Optional<? extends VerificationMetadata> metadata) {
            Utils.checkNotNull(metadata, "metadata");
            this.metadata = metadata;
            return this;
        }
        
        public Verification build() {
            return new Verification(
                state,
                metadata);
        }
    }
}
