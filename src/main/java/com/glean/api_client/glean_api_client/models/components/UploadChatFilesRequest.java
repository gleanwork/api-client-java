/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.glean.api_client.glean_api_client.utils.SpeakeasyMetadata;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.Objects;

public class UploadChatFilesRequest {

    /**
     * Raw files to be uploaded for chat in binary format.
     */
    @SpeakeasyMetadata("multipartForm:name=files")
    private List<File> files;

    @JsonCreator
    public UploadChatFilesRequest(
            List<File> files) {
        Utils.checkNotNull(files, "files");
        this.files = files;
    }

    /**
     * Raw files to be uploaded for chat in binary format.
     */
    @JsonIgnore
    public List<File> files() {
        return files;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Raw files to be uploaded for chat in binary format.
     */
    public UploadChatFilesRequest withFiles(List<File> files) {
        Utils.checkNotNull(files, "files");
        this.files = files;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UploadChatFilesRequest other = (UploadChatFilesRequest) o;
        return 
            Objects.deepEquals(this.files, other.files);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            files);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UploadChatFilesRequest.class,
                "files", files);
    }
    
    public final static class Builder {
 
        private List<File> files;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Raw files to be uploaded for chat in binary format.
         */
        public Builder files(List<File> files) {
            Utils.checkNotNull(files, "files");
            this.files = files;
            return this;
        }
        
        public UploadChatFilesRequest build() {
            return new UploadChatFilesRequest(
                files);
        }
    }
}
