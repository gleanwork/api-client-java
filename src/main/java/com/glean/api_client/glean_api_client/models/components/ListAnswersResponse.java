/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Override;
import java.lang.String;
import java.util.List;

public class ListAnswersResponse {

    /**
     * List of answers with tracking tokens.
     */
    @JsonProperty("answerResults")
    private List<AnswerResult> answerResults;

    @JsonCreator
    public ListAnswersResponse(
            @JsonProperty("answerResults") List<AnswerResult> answerResults) {
        Utils.checkNotNull(answerResults, "answerResults");
        this.answerResults = answerResults;
    }

    /**
     * List of answers with tracking tokens.
     */
    @JsonIgnore
    public List<AnswerResult> answerResults() {
        return answerResults;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * List of answers with tracking tokens.
     */
    public ListAnswersResponse withAnswerResults(List<AnswerResult> answerResults) {
        Utils.checkNotNull(answerResults, "answerResults");
        this.answerResults = answerResults;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListAnswersResponse other = (ListAnswersResponse) o;
        return 
            Utils.enhancedDeepEquals(this.answerResults, other.answerResults);
    }
    
    @Override
    public int hashCode() {
        return Utils.enhancedHash(
            answerResults);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ListAnswersResponse.class,
                "answerResults", answerResults);
    }
    
    public final static class Builder {
 
        private List<AnswerResult> answerResults;
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * List of answers with tracking tokens.
         */
        public Builder answerResults(List<AnswerResult> answerResults) {
            Utils.checkNotNull(answerResults, "answerResults");
            this.answerResults = answerResults;
            return this;
        }
        
        public ListAnswersResponse build() {
            return new ListAnswersResponse(
                answerResults);
        }
    }
}
