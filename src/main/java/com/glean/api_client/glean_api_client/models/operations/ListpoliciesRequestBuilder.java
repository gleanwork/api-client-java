/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.operations;

import static com.glean.api_client.glean_api_client.operations.Operations.RequestOperation;

import com.glean.api_client.glean_api_client.SDKConfiguration;
import com.glean.api_client.glean_api_client.operations.ListpoliciesOperation;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Boolean;
import java.lang.Exception;
import java.lang.String;
import java.util.Optional;

public class ListpoliciesRequestBuilder {

    private Optional<Boolean> autoHide = Optional.empty();
    private Optional<String> frequency = Optional.empty();
    private final SDKConfiguration sdkConfiguration;

    public ListpoliciesRequestBuilder(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }
                
    public ListpoliciesRequestBuilder autoHide(boolean autoHide) {
        Utils.checkNotNull(autoHide, "autoHide");
        this.autoHide = Optional.of(autoHide);
        return this;
    }

    public ListpoliciesRequestBuilder autoHide(Optional<Boolean> autoHide) {
        Utils.checkNotNull(autoHide, "autoHide");
        this.autoHide = autoHide;
        return this;
    }
                
    public ListpoliciesRequestBuilder frequency(String frequency) {
        Utils.checkNotNull(frequency, "frequency");
        this.frequency = Optional.of(frequency);
        return this;
    }

    public ListpoliciesRequestBuilder frequency(Optional<String> frequency) {
        Utils.checkNotNull(frequency, "frequency");
        this.frequency = frequency;
        return this;
    }


    private ListpoliciesRequest buildRequest() {

        ListpoliciesRequest request = new ListpoliciesRequest(autoHide,
            frequency);

        return request;
    }

    public ListpoliciesResponse call() throws Exception {
        
        RequestOperation<ListpoliciesRequest, ListpoliciesResponse> operation
              = new ListpoliciesOperation( sdkConfiguration);
        ListpoliciesRequest request = buildRequest();

        return operation.handleResponse(operation.doRequest(request));
    }
}
