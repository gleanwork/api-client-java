/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client.models.components;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;

public class SearchRequestInputDetails {

    /**
     * Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasCopyPaste")
    private Optional<Boolean> hasCopyPaste;

    @JsonCreator
    public SearchRequestInputDetails(
            @JsonProperty("hasCopyPaste") Optional<Boolean> hasCopyPaste) {
        Utils.checkNotNull(hasCopyPaste, "hasCopyPaste");
        this.hasCopyPaste = hasCopyPaste;
    }
    
    public SearchRequestInputDetails() {
        this(Optional.empty());
    }

    /**
     * Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
     */
    @JsonIgnore
    public Optional<Boolean> hasCopyPaste() {
        return hasCopyPaste;
    }

    public final static Builder builder() {
        return new Builder();
    }    

    /**
     * Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
     */
    public SearchRequestInputDetails withHasCopyPaste(boolean hasCopyPaste) {
        Utils.checkNotNull(hasCopyPaste, "hasCopyPaste");
        this.hasCopyPaste = Optional.ofNullable(hasCopyPaste);
        return this;
    }

    /**
     * Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
     */
    public SearchRequestInputDetails withHasCopyPaste(Optional<Boolean> hasCopyPaste) {
        Utils.checkNotNull(hasCopyPaste, "hasCopyPaste");
        this.hasCopyPaste = hasCopyPaste;
        return this;
    }

    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SearchRequestInputDetails other = (SearchRequestInputDetails) o;
        return 
            Objects.deepEquals(this.hasCopyPaste, other.hasCopyPaste);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            hasCopyPaste);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SearchRequestInputDetails.class,
                "hasCopyPaste", hasCopyPaste);
    }
    
    public final static class Builder {
 
        private Optional<Boolean> hasCopyPaste = Optional.empty();
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
         */
        public Builder hasCopyPaste(boolean hasCopyPaste) {
            Utils.checkNotNull(hasCopyPaste, "hasCopyPaste");
            this.hasCopyPaste = Optional.ofNullable(hasCopyPaste);
            return this;
        }

        /**
         * Whether the associated query was at least partially copy-pasted.  If subsequent requests are issued after a copy-pasted query is constructed (e.g. with facet modifications), this bit should continue to be set for those requests.
         */
        public Builder hasCopyPaste(Optional<Boolean> hasCopyPaste) {
            Utils.checkNotNull(hasCopyPaste, "hasCopyPaste");
            this.hasCopyPaste = hasCopyPaste;
            return this;
        }
        
        public SearchRequestInputDetails build() {
            return new SearchRequestInputDetails(
                hasCopyPaste);
        }
    }
}
