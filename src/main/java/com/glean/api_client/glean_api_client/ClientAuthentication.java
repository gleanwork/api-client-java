/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static com.glean.api_client.glean_api_client.operations.Operations.RequestlessOperation;

import com.glean.api_client.glean_api_client.models.operations.CreateauthtokenRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.CreateauthtokenResponse;
import com.glean.api_client.glean_api_client.operations.CreateauthtokenOperation;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class ClientAuthentication {
    private final SDKConfiguration sdkConfiguration;

    ClientAuthentication(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create authentication token
     * 
     * <p>Creates an authentication token for the authenticated user. These are
     * specifically intended to be used with the [Web SDK](https://developers.glean.com/web).
     * 
     * <p>Note: The tokens generated from this endpoint are **not** valid tokens
     * for use with the Client API (e.g. `/rest/api/v1/*`).
     * 
     * @return The call builder
     */
    public CreateauthtokenRequestBuilder createToken() {
        return new CreateauthtokenRequestBuilder(sdkConfiguration);
    }

    /**
     * Create authentication token
     * 
     * <p>Creates an authentication token for the authenticated user. These are
     * specifically intended to be used with the [Web SDK](https://developers.glean.com/web).
     * 
     * <p>Note: The tokens generated from this endpoint are **not** valid tokens
     * for use with the Client API (e.g. `/rest/api/v1/*`).
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateauthtokenResponse createTokenDirect() throws Exception {
        RequestlessOperation<CreateauthtokenResponse> operation
            = new CreateauthtokenOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest());
    }

}
