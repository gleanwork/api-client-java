/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static com.glean.api_client.glean_api_client.operations.Operations.RequestOperation;

import com.glean.api_client.glean_api_client.models.components.CustomDatasourceConfig;
import com.glean.api_client.glean_api_client.models.components.GetDatasourceConfigRequest;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1AdddatasourceRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1AdddatasourceResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1GetdatasourceconfigRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1GetdatasourceconfigResponse;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1AdddatasourceOperation;
import com.glean.api_client.glean_api_client.operations.PostApiIndexV1GetdatasourceconfigOperation;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class Datasources {
    private final SDKConfiguration sdkConfiguration;

    Datasources(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Add or update datasource
     * 
     * <p>Add or update a custom datasource and its schema.
     * 
     * @return The call builder
     */
    public PostApiIndexV1AdddatasourceRequestBuilder add() {
        return new PostApiIndexV1AdddatasourceRequestBuilder(sdkConfiguration);
    }

    /**
     * Add or update datasource
     * 
     * <p>Add or update a custom datasource and its schema.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1AdddatasourceResponse add(
            CustomDatasourceConfig request) throws Exception {
        RequestOperation<CustomDatasourceConfig, PostApiIndexV1AdddatasourceResponse> operation
              = new PostApiIndexV1AdddatasourceOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Get datasource config
     * 
     * <p>Fetches the datasource config for the specified custom datasource.
     * 
     * @return The call builder
     */
    public PostApiIndexV1GetdatasourceconfigRequestBuilder retrieveConfig() {
        return new PostApiIndexV1GetdatasourceconfigRequestBuilder(sdkConfiguration);
    }

    /**
     * Get datasource config
     * 
     * <p>Fetches the datasource config for the specified custom datasource.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public PostApiIndexV1GetdatasourceconfigResponse retrieveConfig(
            GetDatasourceConfigRequest request) throws Exception {
        RequestOperation<GetDatasourceConfigRequest, PostApiIndexV1GetdatasourceconfigResponse> operation
              = new PostApiIndexV1GetdatasourceconfigOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
