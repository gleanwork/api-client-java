/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static com.glean.api_client.glean_api_client.operations.Operations.RequestOperation;

import com.glean.api_client.glean_api_client.models.components.CreateAnnouncementRequest;
import com.glean.api_client.glean_api_client.models.components.DeleteAnnouncementRequest;
import com.glean.api_client.glean_api_client.models.components.UpdateAnnouncementRequest;
import com.glean.api_client.glean_api_client.models.operations.CreateannouncementRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.CreateannouncementResponse;
import com.glean.api_client.glean_api_client.models.operations.DeleteannouncementRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.DeleteannouncementResponse;
import com.glean.api_client.glean_api_client.models.operations.UpdateannouncementRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.UpdateannouncementResponse;
import com.glean.api_client.glean_api_client.operations.CreateannouncementOperation;
import com.glean.api_client.glean_api_client.operations.DeleteannouncementOperation;
import com.glean.api_client.glean_api_client.operations.UpdateannouncementOperation;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class Announcements {
    private final SDKConfiguration sdkConfiguration;

    Announcements(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Create Announcement
     * 
     * <p>Create a textual announcement visible to some set of users based on department and location.
     * 
     * @return The call builder
     */
    public CreateannouncementRequestBuilder create() {
        return new CreateannouncementRequestBuilder(sdkConfiguration);
    }

    /**
     * Create Announcement
     * 
     * <p>Create a textual announcement visible to some set of users based on department and location.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public CreateannouncementResponse create(
            CreateAnnouncementRequest request) throws Exception {
        RequestOperation<CreateAnnouncementRequest, CreateannouncementResponse> operation
              = new CreateannouncementOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Delete Announcement
     * 
     * <p>Delete an existing user-generated announcement.
     * 
     * @return The call builder
     */
    public DeleteannouncementRequestBuilder delete() {
        return new DeleteannouncementRequestBuilder(sdkConfiguration);
    }

    /**
     * Delete Announcement
     * 
     * <p>Delete an existing user-generated announcement.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public DeleteannouncementResponse delete(
            DeleteAnnouncementRequest request) throws Exception {
        RequestOperation<DeleteAnnouncementRequest, DeleteannouncementResponse> operation
              = new DeleteannouncementOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Update Announcement
     * 
     * <p>Update a textual announcement visible to some set of users based on department and location.
     * 
     * @return The call builder
     */
    public UpdateannouncementRequestBuilder update() {
        return new UpdateannouncementRequestBuilder(sdkConfiguration);
    }

    /**
     * Update Announcement
     * 
     * <p>Update a textual announcement visible to some set of users based on department and location.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public UpdateannouncementResponse update(
            UpdateAnnouncementRequest request) throws Exception {
        RequestOperation<UpdateAnnouncementRequest, UpdateannouncementResponse> operation
              = new UpdateannouncementOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
