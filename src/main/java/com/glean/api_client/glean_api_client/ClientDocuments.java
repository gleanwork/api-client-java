/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static com.glean.api_client.glean_api_client.operations.Operations.RequestOperation;

import com.glean.api_client.glean_api_client.models.components.GetDocPermissionsRequest;
import com.glean.api_client.glean_api_client.models.components.GetDocumentsByFacetsRequest;
import com.glean.api_client.glean_api_client.models.components.GetDocumentsRequest;
import com.glean.api_client.glean_api_client.models.components.SummarizeRequest;
import com.glean.api_client.glean_api_client.models.operations.GetdocpermissionsRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.GetdocpermissionsResponse;
import com.glean.api_client.glean_api_client.models.operations.GetdocumentsRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.GetdocumentsResponse;
import com.glean.api_client.glean_api_client.models.operations.GetdocumentsbyfacetsRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.GetdocumentsbyfacetsResponse;
import com.glean.api_client.glean_api_client.models.operations.SummarizeRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.SummarizeResponse;
import com.glean.api_client.glean_api_client.operations.GetdocpermissionsOperation;
import com.glean.api_client.glean_api_client.operations.GetdocumentsOperation;
import com.glean.api_client.glean_api_client.operations.GetdocumentsbyfacetsOperation;
import com.glean.api_client.glean_api_client.operations.SummarizeOperation;
import java.lang.Exception;
import java.util.List;
import java.util.Optional;


public class ClientDocuments {
    private final SDKConfiguration sdkConfiguration;

    ClientDocuments(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Read document permissions
     * 
     * <p>Read the emails of all users who have access to the given document.
     * 
     * @return The call builder
     */
    public GetdocpermissionsRequestBuilder retrievePermissions() {
        return new GetdocpermissionsRequestBuilder(sdkConfiguration);
    }

    /**
     * Read document permissions
     * 
     * <p>Read the emails of all users who have access to the given document.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetdocpermissionsResponse retrievePermissions(
            GetDocPermissionsRequest request) throws Exception {
        RequestOperation<GetDocPermissionsRequest, GetdocpermissionsResponse> operation
              = new GetdocpermissionsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Read documents
     * 
     * <p>Read the documents including metadata (does not include enhanced metadata via `/documentmetadata`) for the given list of Glean Document IDs or URLs specified in the request.
     * 
     * @return The call builder
     */
    public GetdocumentsRequestBuilder retrieve() {
        return new GetdocumentsRequestBuilder(sdkConfiguration);
    }

    /**
     * Read documents
     * 
     * <p>Read the documents including metadata (does not include enhanced metadata via `/documentmetadata`) for the given list of Glean Document IDs or URLs specified in the request.
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetdocumentsResponse retrieveDirect() throws Exception {
        return retrieve(Optional.empty());
    }

    /**
     * Read documents
     * 
     * <p>Read the documents including metadata (does not include enhanced metadata via `/documentmetadata`) for the given list of Glean Document IDs or URLs specified in the request.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetdocumentsResponse retrieve(
            Optional<? extends GetDocumentsRequest> request) throws Exception {
        RequestOperation<Optional<? extends GetDocumentsRequest>, GetdocumentsResponse> operation
              = new GetdocumentsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Read documents by facets
     * 
     * <p>Read the documents including metadata (does not include enhanced metadata via `/documentmetadata`) macthing the given facet conditions.
     * 
     * @return The call builder
     */
    public GetdocumentsbyfacetsRequestBuilder retrieveByFacets() {
        return new GetdocumentsbyfacetsRequestBuilder(sdkConfiguration);
    }

    /**
     * Read documents by facets
     * 
     * <p>Read the documents including metadata (does not include enhanced metadata via `/documentmetadata`) macthing the given facet conditions.
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetdocumentsbyfacetsResponse retrieveByFacetsDirect() throws Exception {
        return retrieveByFacets(Optional.empty());
    }

    /**
     * Read documents by facets
     * 
     * <p>Read the documents including metadata (does not include enhanced metadata via `/documentmetadata`) macthing the given facet conditions.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public GetdocumentsbyfacetsResponse retrieveByFacets(
            Optional<? extends GetDocumentsByFacetsRequest> request) throws Exception {
        RequestOperation<Optional<? extends GetDocumentsByFacetsRequest>, GetdocumentsbyfacetsResponse> operation
              = new GetdocumentsbyfacetsOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Summarize documents
     * 
     * <p>Generate an AI summary of the requested documents.
     * 
     * @return The call builder
     */
    public SummarizeRequestBuilder summarize() {
        return new SummarizeRequestBuilder(sdkConfiguration);
    }

    /**
     * Summarize documents
     * 
     * <p>Generate an AI summary of the requested documents.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public SummarizeResponse summarize(
            SummarizeRequest request) throws Exception {
        RequestOperation<SummarizeRequest, SummarizeResponse> operation
              = new SummarizeOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
