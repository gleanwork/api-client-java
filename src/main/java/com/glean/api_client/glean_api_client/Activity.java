/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static com.glean.api_client.glean_api_client.operations.Operations.RequestOperation;

import com.glean.api_client.glean_api_client.models.components.Feedback;
import com.glean.api_client.glean_api_client.models.operations.ActivityRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.ActivityResponse;
import com.glean.api_client.glean_api_client.models.operations.FeedbackRequest;
import com.glean.api_client.glean_api_client.models.operations.FeedbackRequestBuilder;
import com.glean.api_client.glean_api_client.models.operations.FeedbackResponse;
import com.glean.api_client.glean_api_client.operations.ActivityOperation;
import com.glean.api_client.glean_api_client.operations.FeedbackOperation;
import java.lang.Exception;
import java.lang.String;
import java.util.List;
import java.util.Optional;


public class Activity {
    private final SDKConfiguration sdkConfiguration;

    Activity(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
    }

    /**
     * Report document activity
     * 
     * <p>Report user activity that occurs on indexed documents such as viewing or editing. This signal improves search quality.
     * 
     * @return The call builder
     */
    public ActivityRequestBuilder report() {
        return new ActivityRequestBuilder(sdkConfiguration);
    }

    /**
     * Report document activity
     * 
     * <p>Report user activity that occurs on indexed documents such as viewing or editing. This signal improves search quality.
     * 
     * @param request The request object containing all the parameters for the API call.
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public ActivityResponse report(
            com.glean.api_client.glean_api_client.models.components.Activity request) throws Exception {
        RequestOperation<com.glean.api_client.glean_api_client.models.components.Activity, ActivityResponse> operation
              = new ActivityOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }


    /**
     * Report client activity
     * 
     * <p>Report events that happen to results within a Glean client UI, such as search result views and clicks.  This signal improves search quality.
     * 
     * @return The call builder
     */
    public FeedbackRequestBuilder feedback() {
        return new FeedbackRequestBuilder(sdkConfiguration);
    }

    /**
     * Report client activity
     * 
     * <p>Report events that happen to results within a Glean client UI, such as search result views and clicks.  This signal improves search quality.
     * 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FeedbackResponse feedbackDirect() throws Exception {
        return feedback(Optional.empty(), Optional.empty());
    }

    /**
     * Report client activity
     * 
     * <p>Report events that happen to results within a Glean client UI, such as search result views and clicks.  This signal improves search quality.
     * 
     * @param feedbackQueryParameter A URL encoded versions of Feedback. This is useful for requests.
     * @param feedback1 
     * @return The response from the API call
     * @throws Exception if the API call fails
     */
    public FeedbackResponse feedback(
            Optional<String> feedbackQueryParameter,
            Optional<? extends Feedback> feedback1) throws Exception {
        FeedbackRequest request =
            FeedbackRequest
                .builder()
                .feedbackQueryParameter(feedbackQueryParameter)
                .feedback1(feedback1)
                .build();
        RequestOperation<FeedbackRequest, FeedbackResponse> operation
              = new FeedbackOperation( sdkConfiguration);
        return operation.handleResponse(operation.doRequest(request));
    }

}
