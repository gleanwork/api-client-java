/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static org.junit.jupiter.api.Assertions.assertEquals;

import com.glean.api_client.glean_api_client.models.components.AgentConfig;
import com.glean.api_client.glean_api_client.models.components.AgentEnum;
import com.glean.api_client.glean_api_client.models.components.Answer;
import com.glean.api_client.glean_api_client.models.components.AnswerBoard;
import com.glean.api_client.glean_api_client.models.components.AnswerLike;
import com.glean.api_client.glean_api_client.models.components.AnswerLikes;
import com.glean.api_client.glean_api_client.models.components.AnswerSourceType;
import com.glean.api_client.glean_api_client.models.components.AppResult;
import com.glean.api_client.glean_api_client.models.components.AuthConfig;
import com.glean.api_client.glean_api_client.models.components.AuthConfigStatus;
import com.glean.api_client.glean_api_client.models.components.AuthConfigType;
import com.glean.api_client.glean_api_client.models.components.AuthToken;
import com.glean.api_client.glean_api_client.models.components.AuthType;
import com.glean.api_client.glean_api_client.models.components.Author;
import com.glean.api_client.glean_api_client.models.components.Badge;
import com.glean.api_client.glean_api_client.models.components.CalendarAttendee;
import com.glean.api_client.glean_api_client.models.components.CalendarAttendees;
import com.glean.api_client.glean_api_client.models.components.ChannelInviteInfo;
import com.glean.api_client.glean_api_client.models.components.Chat;
import com.glean.api_client.glean_api_client.models.components.ChatFile;
import com.glean.api_client.glean_api_client.models.components.ChatFileFailureReason;
import com.glean.api_client.glean_api_client.models.components.ChatFileMetadata;
import com.glean.api_client.glean_api_client.models.components.ChatFileStatus;
import com.glean.api_client.glean_api_client.models.components.ChatMessage;
import com.glean.api_client.glean_api_client.models.components.ChatMessageCitation;
import com.glean.api_client.glean_api_client.models.components.ChatMessageFragment;
import com.glean.api_client.glean_api_client.models.components.ChatMetadata;
import com.glean.api_client.glean_api_client.models.components.ChatMetadataResult;
import com.glean.api_client.glean_api_client.models.components.ChatRequest;
import com.glean.api_client.glean_api_client.models.components.ChatResult;
import com.glean.api_client.glean_api_client.models.components.ClusterGroup;
import com.glean.api_client.glean_api_client.models.components.Code;
import com.glean.api_client.glean_api_client.models.components.Collection;
import com.glean.api_client.glean_api_client.models.components.CollectionItem;
import com.glean.api_client.glean_api_client.models.components.CollectionItemItemType;
import com.glean.api_client.glean_api_client.models.components.Company;
import com.glean.api_client.glean_api_client.models.components.ConnectorType;
import com.glean.api_client.glean_api_client.models.components.CustomDataValue;
import com.glean.api_client.glean_api_client.models.components.CustomEntity;
import com.glean.api_client.glean_api_client.models.components.CustomFieldData;
import com.glean.api_client.glean_api_client.models.components.CustomFieldValue;
import com.glean.api_client.glean_api_client.models.components.CustomFieldValuePerson;
import com.glean.api_client.glean_api_client.models.components.CustomFieldValueStr;
import com.glean.api_client.glean_api_client.models.components.Customer;
import com.glean.api_client.glean_api_client.models.components.DatasourceProfile;
import com.glean.api_client.glean_api_client.models.components.DeleteChatFilesRequest;
import com.glean.api_client.glean_api_client.models.components.DeleteChatsRequest;
import com.glean.api_client.glean_api_client.models.components.Disambiguation;
import com.glean.api_client.glean_api_client.models.components.Document;
import com.glean.api_client.glean_api_client.models.components.DocumentContent;
import com.glean.api_client.glean_api_client.models.components.DocumentInteractions;
import com.glean.api_client.glean_api_client.models.components.DocumentMetadata;
import com.glean.api_client.glean_api_client.models.components.DocumentSection;
import com.glean.api_client.glean_api_client.models.components.DocumentSpec1;
import com.glean.api_client.glean_api_client.models.components.DocumentSpecUnion;
import com.glean.api_client.glean_api_client.models.components.EntityType;
import com.glean.api_client.glean_api_client.models.components.ExtractedQnA;
import com.glean.api_client.glean_api_client.models.components.FacetFilter;
import com.glean.api_client.glean_api_client.models.components.FacetFilterSet;
import com.glean.api_client.glean_api_client.models.components.FacetFilterValue;
import com.glean.api_client.glean_api_client.models.components.GetChatApplicationRequest;
import com.glean.api_client.glean_api_client.models.components.GetChatApplicationResponse;
import com.glean.api_client.glean_api_client.models.components.GetChatFilesRequest;
import com.glean.api_client.glean_api_client.models.components.GetChatFilesResponse;
import com.glean.api_client.glean_api_client.models.components.GetChatRequest;
import com.glean.api_client.glean_api_client.models.components.GetChatResponse;
import com.glean.api_client.glean_api_client.models.components.GrantType;
import com.glean.api_client.glean_api_client.models.components.IconConfig;
import com.glean.api_client.glean_api_client.models.components.IconType;
import com.glean.api_client.glean_api_client.models.components.InviteInfo;
import com.glean.api_client.glean_api_client.models.components.KnowledgeType;
import com.glean.api_client.glean_api_client.models.components.ListChatsResponse;
import com.glean.api_client.glean_api_client.models.components.Meeting;
import com.glean.api_client.glean_api_client.models.components.MessageType;
import com.glean.api_client.glean_api_client.models.components.Mode;
import com.glean.api_client.glean_api_client.models.components.ObjectPermissions;
import com.glean.api_client.glean_api_client.models.components.Person;
import com.glean.api_client.glean_api_client.models.components.PersonMetadata;
import com.glean.api_client.glean_api_client.models.components.PersonMetadataType;
import com.glean.api_client.glean_api_client.models.components.PersonObject;
import com.glean.api_client.glean_api_client.models.components.PersonToTeamRelationship;
import com.glean.api_client.glean_api_client.models.components.PinDocument;
import com.glean.api_client.glean_api_client.models.components.Prominence;
import com.glean.api_client.glean_api_client.models.components.QuerySuggestion;
import com.glean.api_client.glean_api_client.models.components.QuerySuggestionList;
import com.glean.api_client.glean_api_client.models.components.Reaction;
import com.glean.api_client.glean_api_client.models.components.ReferenceRange;
import com.glean.api_client.glean_api_client.models.components.RelatedDocuments;
import com.glean.api_client.glean_api_client.models.components.RelatedQuestion;
import com.glean.api_client.glean_api_client.models.components.RelationType;
import com.glean.api_client.glean_api_client.models.components.Reminder;
import com.glean.api_client.glean_api_client.models.components.SearchProviderInfo;
import com.glean.api_client.glean_api_client.models.components.SearchRequestInputDetails;
import com.glean.api_client.glean_api_client.models.components.SearchRequestOptions;
import com.glean.api_client.glean_api_client.models.components.SearchResult;
import com.glean.api_client.glean_api_client.models.components.SearchResultSnippet;
import com.glean.api_client.glean_api_client.models.components.Share;
import com.glean.api_client.glean_api_client.models.components.Shortcut;
import com.glean.api_client.glean_api_client.models.components.State;
import com.glean.api_client.glean_api_client.models.components.StructuredResult;
import com.glean.api_client.glean_api_client.models.components.StructuredResultSource;
import com.glean.api_client.glean_api_client.models.components.StructuredText;
import com.glean.api_client.glean_api_client.models.components.StructuredTextItem;
import com.glean.api_client.glean_api_client.models.components.Team;
import com.glean.api_client.glean_api_client.models.components.TeamStatus;
import com.glean.api_client.glean_api_client.models.components.TextRange;
import com.glean.api_client.glean_api_client.models.components.TextRangeType;
import com.glean.api_client.glean_api_client.models.components.ToolInfo;
import com.glean.api_client.glean_api_client.models.components.ToolMetadata;
import com.glean.api_client.glean_api_client.models.components.ToolMetadataType;
import com.glean.api_client.glean_api_client.models.components.UserRole;
import com.glean.api_client.glean_api_client.models.components.UserRoleSpecification;
import com.glean.api_client.glean_api_client.models.components.Verification;
import com.glean.api_client.glean_api_client.models.components.VerificationMetadata;
import com.glean.api_client.glean_api_client.models.components.WriteActionParameter;
import com.glean.api_client.glean_api_client.models.components.WriteActionParameterType;
import com.glean.api_client.glean_api_client.models.components.WriteActionType;
import com.glean.api_client.glean_api_client.models.operations.ChatStreamResponse;
import com.glean.api_client.glean_api_client.models.operations.DeleteallchatsResponse;
import com.glean.api_client.glean_api_client.models.operations.DeletechatfilesResponse;
import com.glean.api_client.glean_api_client.models.operations.DeletechatsResponse;
import com.glean.api_client.glean_api_client.models.operations.GetchatResponse;
import com.glean.api_client.glean_api_client.models.operations.GetchatapplicationResponse;
import com.glean.api_client.glean_api_client.models.operations.GetchatfilesResponse;
import com.glean.api_client.glean_api_client.models.operations.ListchatsResponse;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Exception;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Assumptions;
import org.junit.jupiter.api.Test;

public class ClientChatTests {

    @Test
    public void testClientChat_Ask() throws Exception {
        Assumptions.assumeTrue(false, "incomplete test found please make sure to address the following errors: [`workflow step ask.test referencing operation ask not found in document`]");
    }

    @Test
    public void testClientChat_ChatDefaultExample() throws Exception {
        Assumptions.assumeTrue(false, "incomplete test found please make sure to address the following errors: [`workflow step chat-defaultExample.test referencing operation chat does not contain response body with content type text/plain`]");
    }

    @Test
    public void testClientChat_ChatGptAgentExample() throws Exception {
        Assumptions.assumeTrue(false, "incomplete test found please make sure to address the following errors: [`workflow step chat-gptAgentExample.test referencing operation chat does not contain response body with content type text/plain`]");
    }

    @Test
    public void testClientChat_ChatStreamingExample() throws Exception {
        Assumptions.assumeTrue(false, "incomplete test found please make sure to address the following errors: [`workflow step chat-streamingExample.test referencing operation chat does not contain response body with content type text/plain`]");
    }

    @Test
    public void testClientChat_ChatUpdateResponse() throws Exception {
        Assumptions.assumeTrue(false, "incomplete test found please make sure to address the following errors: [`workflow step chat-updateResponse.test referencing operation chat does not contain response body with content type text/plain`]");
    }

    @Test
    public void testClientChat_ChatCitationResponse() throws Exception {
        Assumptions.assumeTrue(false, "incomplete test found please make sure to address the following errors: [`workflow step chat-citationResponse.test referencing operation chat does not contain response body with content type text/plain`]");
    }

    @Test
    public void testClientChat_Deleteallchats() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("deleteallchats");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        DeleteallchatsResponse res = sdk.client().chat().deleteAll()
                .call();
        assertEquals(200, res.statusCode());
    }

    @Test
    public void testClientChat_Deletechats() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("deletechats");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        DeletechatsResponse res = sdk.client().chat().delete()
                .deleteChatsRequest(DeleteChatsRequest.builder()
                    .ids(List.of(
                        "<value>",
                        "<value>"))
                    .build())
                .call();
        assertEquals(200, res.statusCode());
    }

    @Test
    public void testClientChat_Getchat() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("getchat");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        GetchatResponse res = sdk.client().chat().retrieve()
                .getChatRequest(GetChatRequest.builder()
                    .id("<id>")
                    .build())
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            GetChatResponse.builder()
            .chatResult(ChatResult.builder()
                .chat(Chat.builder()
                    .id("string")
                    .createTime(0L)
                    .createdBy(Person.builder()
                        .name("George Clooney")
                        .obfuscatedId("abc123")
                        .build())
                    .updateTime(0L)
                    .name("string")
                    .applicationId("string")
                    .applicationName("string")
                    .icon(IconConfig.builder()
                        .color("#343CED")
                        .key("person_icon")
                        .iconType(IconType.GLYPH)
                        .name("user")
                        .build())
                    .messages(List.of(
                        ChatMessage.builder()
                            .agentConfig(AgentConfig.builder()
                                .agent(AgentEnum.DEFAULT)
                                .mode(Mode.DEFAULT)
                                .build())
                            .author(Author.USER)
                            .citations(List.of(
                                ChatMessageCitation.builder()
                                    .trackingToken("string")
                                    .sourceDocument(Document.builder()
                                        .id("string")
                                        .datasource("string")
                                        .connectorType(ConnectorType.API_CRAWL)
                                        .docType("string")
                                        .content(DocumentContent.builder()
                                            .fullTextList(List.of(
                                                "<value>"))
                                            .build())
                                        .title("string")
                                        .url("string")
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .sections(List.of(
                                            DocumentSection.builder()
                                                .title("<value>")
                                                .url("https://normal-making.name")
                                                .build()))
                                        .build())
                                    .sourceFile(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .metadata(ChatFileMetadata.builder()
                                            .status(ChatFileStatus.PROCESSING)
                                            .uploadTime(0L)
                                            .processedSize(0L)
                                            .failureReason(ChatFileFailureReason.PARSE_FAILED)
                                            .mimeType("string")
                                            .build())
                                        .build())
                                    .sourcePerson(Person.builder()
                                        .name("George Clooney")
                                        .obfuscatedId("abc123")
                                        .build())
                                    .referenceRanges(List.of(
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(969961L)
                                                .endIndex(458049L)
                                                .type(TextRangeType.CITATION)
                                                .url("https://earnest-tuber.info/")
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("<value>")
                                                    .ranges(List.of(
                                                        TextRange.builder()
                                                            .startIndex(78888L)
                                                            .document(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .build(),
                                                        TextRange.builder()
                                                            .startIndex(219956L)
                                                            .document(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .build(),
                                                        TextRange.builder()
                                                            .startIndex(313464L)
                                                            .document(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .build()))
                                                    .build()))
                                            .build()))
                                    .build()))
                            .uploadedFileIds(List.of(
                                "string"))
                            .fragments(List.of(
                                ChatMessageFragment.builder()
                                    .structuredResults(List.of(
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .id("<id>")
                                                .datasource("<value>")
                                                .connectorType(ConnectorType.API_CRAWL)
                                                .docType("<value>")
                                                .title("<value>")
                                                .url("https://strange-gloom.net")
                                                .metadata(DocumentMetadata.builder()
                                                    .author(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .owner(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .mentionedPeople(List.of(
                                                        Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build()))
                                                    .pins(List.of(
                                                        PinDocument.builder()
                                                            .documentId("<id>")
                                                            .audienceFilters(List.of(
                                                                FacetFilter.builder()
                                                                    .fieldName("type")
                                                                    .values(List.of(
                                                                        FacetFilterValue.builder()
                                                                            .value("Spreadsheet")
                                                                            .relationType(RelationType.EQUALS)
                                                                            .build(),
                                                                        FacetFilterValue.builder()
                                                                            .value("Presentation")
                                                                            .relationType(RelationType.EQUALS)
                                                                            .build()))
                                                                    .build()))
                                                            .attribution(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .updatedBy(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build(),
                                                        PinDocument.builder()
                                                            .documentId("<id>")
                                                            .audienceFilters(List.of(
                                                                FacetFilter.builder()
                                                                    .fieldName("type")
                                                                    .values(List.of(
                                                                        FacetFilterValue.builder()
                                                                            .value("Spreadsheet")
                                                                            .relationType(RelationType.EQUALS)
                                                                            .build(),
                                                                        FacetFilterValue.builder()
                                                                            .value("Presentation")
                                                                            .relationType(RelationType.EQUALS)
                                                                            .build()))
                                                                    .build()))
                                                            .attribution(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .updatedBy(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build()))
                                                    .assignedTo(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .collections(List.of(
                                                        Collection.builder()
                                                            .name("<value>")
                                                            .description("scrabble ignite aw showboat shakily")
                                                            .id(843618L)
                                                            .addedRoles(List.of(
                                                                UserRoleSpecification.builder()
                                                                    .role(UserRole.OWNER)
                                                                    .person(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .build(),
                                                                UserRoleSpecification.builder()
                                                                    .role(UserRole.EDITOR)
                                                                    .person(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .build()))
                                                            .removedRoles(List.of(
                                                                UserRoleSpecification.builder()
                                                                    .role(UserRole.VERIFIER)
                                                                    .person(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .build(),
                                                                UserRoleSpecification.builder()
                                                                    .role(UserRole.EDITOR)
                                                                    .person(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .build()))
                                                            .audienceFilters(List.of(
                                                                FacetFilter.builder()
                                                                    .fieldName("type")
                                                                    .values(List.of(
                                                                        FacetFilterValue.builder()
                                                                            .value("Spreadsheet")
                                                                            .relationType(RelationType.EQUALS)
                                                                            .build(),
                                                                        FacetFilterValue.builder()
                                                                            .value("Presentation")
                                                                            .relationType(RelationType.EQUALS)
                                                                            .build()))
                                                                    .build()))
                                                            .creator(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .updatedBy(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .items(List.of(
                                                                CollectionItem.builder()
                                                                    .collectionId(149108L)
                                                                    .itemType(CollectionItemItemType.URL)
                                                                    .createdBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .build(),
                                                                CollectionItem.builder()
                                                                    .collectionId(503671L)
                                                                    .itemType(CollectionItemItemType.COLLECTION)
                                                                    .createdBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .build()))
                                                            .roles(List.of(
                                                                UserRoleSpecification.builder()
                                                                    .role(UserRole.OWNER)
                                                                    .person(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .build()))
                                                            .build(),
                                                        Collection.builder()
                                                            .name("<value>")
                                                            .description("ah ack aha bah")
                                                            .id(72193L)
                                                            .audienceFilters(List.of(
                                                                FacetFilter.builder()
                                                                    .fieldName("type")
                                                                    .values(List.of(
                                                                        FacetFilterValue.builder()
                                                                            .value("Spreadsheet")
                                                                            .relationType(RelationType.EQUALS)
                                                                            .build(),
                                                                        FacetFilterValue.builder()
                                                                            .value("Presentation")
                                                                            .relationType(RelationType.EQUALS)
                                                                            .build()))
                                                                    .build()))
                                                            .creator(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .updatedBy(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build()))
                                                    .interactions(DocumentInteractions.builder()
                                                        .reacts(List.of(
                                                            Reaction.builder()
                                                                .reactors(List.of(
                                                                    Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build()))
                                                                .build(),
                                                            Reaction.builder()
                                                                .build(),
                                                            Reaction.builder()
                                                                .build()))
                                                        .shares(List.of(
                                                            Share.builder()
                                                                .numDaysAgo(786783L)
                                                                .sharer(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build(),
                                                            Share.builder()
                                                                .numDaysAgo(972276L)
                                                                .sharer(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .verification(Verification.builder()
                                                        .state(State.UNVERIFIED)
                                                        .metadata(VerificationMetadata.builder()
                                                            .lastVerifier(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .reminders(List.of(
                                                                Reminder.builder()
                                                                    .assignee(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .remindAt(844917L)
                                                                    .requestor(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .build(),
                                                                Reminder.builder()
                                                                    .assignee(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .remindAt(531548L)
                                                                    .requestor(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .build()))
                                                            .lastReminder(Reminder.builder()
                                                                .assignee(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .remindAt(576892L)
                                                                .requestor(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build())
                                                            .candidateVerifiers(List.of(
                                                                Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build()))
                                                            .build())
                                                        .build())
                                                    .contactPerson(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .documentCounts(Map.ofEntries(
                                                    Map.entry("key", 534384L),
                                                    Map.entry("key1", 901064L)))
                                                .startDate(LocalDate.parse("2025-09-27"))
                                                .contractAnnualRevenue(2187.45)
                                                .notes("<value>")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .description("aw fibre hassle freezing but conversation under")
                                                .businessUnit("<value>")
                                                .department("<value>")
                                                .photoUrl("https://sizzling-accountability.net/")
                                                .bannerUrl("https://miserable-hydrant.biz/")
                                                .externalLink("https://hasty-cappelletti.name/")
                                                .memberCount(626356L)
                                                .datasource("<value>")
                                                .createdFrom("<value>")
                                                .lastUpdatedAt(OffsetDateTime.parse("2023-08-02T00:17:06.651Z"))
                                                .status(TeamStatus.QUEUED_FOR_CREATION)
                                                .canBeDeleted(false)
                                                .loggingId("<id>")
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .id("<id>")
                                                .title("<value>")
                                                .datasource("<value>")
                                                .objectType("<value>")
                                                .build())
                                            .answer(Answer.builder()
                                                .id(313992L)
                                                .docId("<id>")
                                                .question("<value>")
                                                .bodyText("<value>")
                                                .boardId(933583L)
                                                .sourceDocumentSpec(DocumentSpecUnion.of(DocumentSpec1.builder()
                                                    .build()))
                                                .sourceType(AnswerSourceType.ASSISTANT)
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .structuredList(List.of(
                                                        StructuredTextItem.builder()
                                                            .link("https://en.wikipedia.org/wiki/Diffuse_sky_radiation")
                                                            .document(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .text("Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.")
                                                            .build(),
                                                        StructuredTextItem.builder()
                                                            .link("https://en.wikipedia.org/wiki/Diffuse_sky_radiation")
                                                            .document(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .text("Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.")
                                                            .build()))
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(false)
                                                    .numLikes(30856L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("<value>")
                                                    .obfuscatedId("<id>")
                                                    .relatedDocuments(List.of(
                                                        RelatedDocuments.builder()
                                                            .querySuggestion(QuerySuggestion.builder()
                                                                .query("app:github type:pull author:mortimer")
                                                                .label("Mortimer's PRs")
                                                                .datasource("github")
                                                                .build())
                                                            .results(List.of(
                                                                SearchResult.builder()
                                                                    .url("https://example.com/foo/bar")
                                                                    .title("title")
                                                                    .nativeAppUrl("slack://foo/bar")
                                                                    .build()))
                                                            .build(),
                                                        RelatedDocuments.builder()
                                                            .querySuggestion(QuerySuggestion.builder()
                                                                .query("app:github type:pull author:mortimer")
                                                                .label("Mortimer's PRs")
                                                                .datasource("github")
                                                                .build())
                                                            .build(),
                                                        RelatedDocuments.builder()
                                                            .querySuggestion(QuerySuggestion.builder()
                                                                .query("app:github type:pull author:mortimer")
                                                                .label("Mortimer's PRs")
                                                                .datasource("github")
                                                                .build())
                                                            .build()))
                                                    .metadata(PersonMetadata.builder()
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .build())
                                                    .build())
                                                .createTime(OffsetDateTime.parse("2024-01-11T09:24:54.882Z"))
                                                .updateTime(OffsetDateTime.parse("2024-10-30T08:25:44.878Z"))
                                                .updatedBy(Person.builder()
                                                    .name("<value>")
                                                    .obfuscatedId("<id>")
                                                    .metadata(PersonMetadata.builder()
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .build())
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.VERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(306618L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("indolent vainly closely")
                                                    .id(601522L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .documentCategory("<value>")
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .heading("<value>")
                                                .question("<value>")
                                                .questionResult(SearchResult.builder()
                                                    .url("https://gorgeous-custom.org/")
                                                    .document(Document.builder()
                                                        .metadata(DocumentMetadata.builder()
                                                            .datasource("datasource")
                                                            .objectType("Feature Request")
                                                            .container("container")
                                                            .parentId("JIRA_EN-1337")
                                                            .mimeType("mimeType")
                                                            .documentId("documentId")
                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .author(Person.builder()
                                                                .name("name")
                                                                .obfuscatedId("<id>")
                                                                .build())
                                                            .components(List.of(
                                                                "Backend",
                                                                "Networking"))
                                                            .status("[\"Done\"]")
                                                            .customData(Map.ofEntries(
                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                    .build())))
                                                            .build())
                                                        .build())
                                                    .relatedResults(List.of(
                                                        RelatedDocuments.builder()
                                                            .querySuggestion(QuerySuggestion.builder()
                                                                .query("app:github type:pull author:mortimer")
                                                                .label("Mortimer's PRs")
                                                                .datasource("github")
                                                                .build())
                                                            .build()))
                                                    .allClusteredResults(List.of(
                                                        ClusterGroup.builder()
                                                            .visibleCountHint(564329L)
                                                            .build()))
                                                    .mustIncludeSuggestions(QuerySuggestionList.builder()
                                                        .suggestions(List.of(
                                                            QuerySuggestion.builder()
                                                                .query("app:github type:pull author:mortimer")
                                                                .label("Mortimer's PRs")
                                                                .datasource("github")
                                                                .build()))
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build())
                                                    .querySuggestion(QuerySuggestion.builder()
                                                        .query("app:github type:pull author:mortimer")
                                                        .label("Mortimer's PRs")
                                                        .datasource("github")
                                                        .build())
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .id("<id>")
                                                .title("<value>")
                                                .description("inside dulcimer however sonnet um eek until geez phew")
                                                .startTime(OffsetDateTime.parse("2025-10-27T12:29:37.632Z"))
                                                .endTime(OffsetDateTime.parse("2024-03-28T07:14:42.093Z"))
                                                .attendees(CalendarAttendees.builder()
                                                    .people(List.of(
                                                        CalendarAttendee.builder()
                                                            .person(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build(),
                                                        CalendarAttendee.builder()
                                                            .person(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build()))
                                                    .build())
                                                .build())
                                            .app(AppResult.builder()
                                                .datasource("<value>")
                                                .docType("<value>")
                                                .mimeType("<value>")
                                                .iconUrl("https://bustling-birdbath.org")
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("unless yuck serenade cuddly rundown neighboring considering upliftingly why")
                                                .id(67110L)
                                                .icon("<value>")
                                                .adminLocked(false)
                                                .parentId(896826L)
                                                .allowedDatasource("<value>")
                                                .createTime(OffsetDateTime.parse("2024-07-30T13:34:32.569Z"))
                                                .updateTime(OffsetDateTime.parse("2023-04-24T03:06:17.109Z"))
                                                .creator(Person.builder()
                                                    .name("<value>")
                                                    .obfuscatedId("<id>")
                                                    .metadata(PersonMetadata.builder()
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .build())
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("<value>")
                                                    .obfuscatedId("<id>")
                                                    .metadata(PersonMetadata.builder()
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .build())
                                                    .build())
                                                .itemCount(534236L)
                                                .childCount(215291L)
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("innocent downchange ick rudely what youthfully lightly yum")
                                                .id(569914L)
                                                .createTime(OffsetDateTime.parse("2023-02-12T07:51:20.736Z"))
                                                .updateTime(OffsetDateTime.parse("2024-03-18T02:09:52.587Z"))
                                                .creator(Person.builder()
                                                    .name("<value>")
                                                    .obfuscatedId("<id>")
                                                    .metadata(PersonMetadata.builder()
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .build())
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("<value>")
                                                    .obfuscatedId("<id>")
                                                    .metadata(PersonMetadata.builder()
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .build())
                                                    .build())
                                                .itemCount(771154L)
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .destinationUrl("https://tight-version.org/")
                                                .description("however generally ew ha sonar usually slow guacamole")
                                                .unlisted(false)
                                                .urlTemplate("<value>")
                                                .createdBy(Person.builder()
                                                    .name("<value>")
                                                    .obfuscatedId("<id>")
                                                    .build())
                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .updatedBy(Person.builder()
                                                    .name("<value>")
                                                    .obfuscatedId("<id>")
                                                    .build())
                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("<value>")
                                                    .obfuscatedId("<id>")
                                                    .metadata(PersonMetadata.builder()
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .build())
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .question("<value>")
                                                .answer("<value>")
                                                .build())
                                            .disambiguation(Disambiguation.builder()
                                                .name("<value>")
                                                .id("<id>")
                                                .type(EntityType.PERSON)
                                                .build())
                                            .trackingToken("string")
                                            .prominence(Prominence.HERO)
                                            .source(StructuredResultSource.EXPERT_DETECTION)
                                            .build()))
                                    .trackingToken("string")
                                    .text("string")
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .build())
                                    .file(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .metadata(ChatFileMetadata.builder()
                                            .status(ChatFileStatus.PROCESSING)
                                            .uploadTime(0L)
                                            .processedSize(0L)
                                            .failureReason(ChatFileFailureReason.PARSE_FAILED)
                                            .mimeType("string")
                                            .build())
                                        .build())
                                    .action(ToolInfo.builder()
                                        .metadata(ToolMetadata.builder()
                                            .type(ToolMetadataType.RETRIEVAL)
                                            .name("string")
                                            .displayName("string")
                                            .displayDescription("string")
                                            .toolId("string")
                                            .logoUrl("string")
                                            .objectName("[\"HR ticket\",\"Email\",\"Chat message\"]")
                                            .knowledgeType(KnowledgeType.NEUTRAL_KNOWLEDGE)
                                            .createdBy(PersonObject.builder()
                                                .name("<value>")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .lastUpdatedBy(PersonObject.builder()
                                                .name("<value>")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .createdAt(OffsetDateTime.parse("2019-08-24T14:15:22Z"))
                                            .lastUpdatedAt(OffsetDateTime.parse("2019-08-24T14:15:22Z"))
                                            .writeActionType(WriteActionType.REDIRECT)
                                            .authType(AuthType.NONE)
                                            .auth(AuthConfig.builder()
                                                .isOnPrem(true)
                                                .usesCentralAuth(false)
                                                .type(AuthConfigType.DWD)
                                                .grantType(GrantType.AUTH_CODE)
                                                .status(AuthConfigStatus.AUTHORIZED)
                                                .clientUrl("https://woeful-trench.com/")
                                                .authorizationUrl("https://imaginative-premium.com/")
                                                .lastAuthorizedAt(OffsetDateTime.parse("2023-12-19T20:03:14.149Z"))
                                                .build())
                                            .permissions(ObjectPermissions.builder()
                                                .build())
                                            .usageInstructions("string")
                                            .isSetupFinished(true)
                                            .build())
                                        .parameters(Map.ofEntries(
                                            Map.entry("property1", WriteActionParameter.builder()
                                                .type(WriteActionParameterType.UNKNOWN)
                                                .displayName("Shemar63")
                                                .value("<value>")
                                                .isRequired(true)
                                                .description("handle unlike unlike fen gently or exotic mortally nor")
                                                .build()),
                                            Map.entry("property2", WriteActionParameter.builder()
                                                .type(WriteActionParameterType.STRING)
                                                .displayName("Ahmad_Reichel95")
                                                .value("<value>")
                                                .isRequired(false)
                                                .description("mmm premise pro instead bleakly starch including per ill-fated")
                                                .build())))
                                        .build())
                                    .build()))
                            .ts("string")
                            .messageId("string")
                            .messageTrackingToken("string")
                            .messageType(MessageType.UPDATE)
                            .hasMoreFragments(true)
                            .build()))
                    .build())
                .trackingToken("string")
                .build())
            .build(),
            res.getChatResponse().get());
    }

    @Test
    public void testClientChat_Listchats() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("listchats");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        ListchatsResponse res = sdk.client().chat().list()
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            ListChatsResponse.builder()
            .chatResults(List.of(
                ChatMetadataResult.builder()
                    .chat(ChatMetadata.builder()
                        .createdBy(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .relatedDocuments(List.of(
                                RelatedDocuments.builder()
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .searchProviderInfo(SearchProviderInfo.builder()
                                            .name("Google")
                                            .searchLinkUrlTemplate("https://www.google.com/search?q={query}&hl=en")
                                            .build())
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .requestOptions(SearchRequestOptions.builder()
                                            .facetBucketSize(177706L)
                                            .datasourceFilter("JIRA")
                                            .datasourcesFilter(List.of(
                                                "JIRA"))
                                            .queryOverridesFacetFilters(true)
                                            .facetFilters(List.of(
                                                FacetFilter.builder()
                                                    .fieldName("type")
                                                    .values(List.of(
                                                        FacetFilterValue.builder()
                                                            .value("Spreadsheet")
                                                            .relationType(RelationType.EQUALS)
                                                            .build(),
                                                        FacetFilterValue.builder()
                                                            .value("Presentation")
                                                            .relationType(RelationType.EQUALS)
                                                            .build()))
                                                    .build()))
                                            .facetFilterSets(List.of(
                                                FacetFilterSet.builder()
                                                    .filters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .build(),
                                                FacetFilterSet.builder()
                                                    .filters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .build(),
                                                FacetFilterSet.builder()
                                                    .filters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .build()))
                                            .authTokens(List.of(
                                                AuthToken.builder()
                                                    .accessToken("123abc")
                                                    .datasource("gmail")
                                                    .scope("email profile https://www.googleapis.com/auth/gmail.readonly")
                                                    .tokenType("Bearer")
                                                    .authUser("1")
                                                    .build()))
                                            .build())
                                        .ranges(List.of(
                                            TextRange.builder()
                                                .startIndex(152837L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .pins(List.of(
                                                            PinDocument.builder()
                                                                .documentId("<id>")
                                                                .audienceFilters(List.of(
                                                                    FacetFilter.builder()
                                                                        .fieldName("type")
                                                                        .values(List.of(
                                                                            FacetFilterValue.builder()
                                                                                .value("Spreadsheet")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build(),
                                                                            FacetFilterValue.builder()
                                                                                .value("Presentation")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build()))
                                                                        .build()))
                                                                .build(),
                                                            PinDocument.builder()
                                                                .documentId("<id>")
                                                                .audienceFilters(List.of(
                                                                    FacetFilter.builder()
                                                                        .fieldName("type")
                                                                        .values(List.of(
                                                                            FacetFilterValue.builder()
                                                                                .value("Spreadsheet")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build(),
                                                                            FacetFilterValue.builder()
                                                                                .value("Presentation")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build()))
                                                                        .build()))
                                                                .build()))
                                                        .collections(List.of(
                                                            Collection.builder()
                                                                .name("<value>")
                                                                .description("accountability pish likewise")
                                                                .id(425334L)
                                                                .addedRoles(List.of(
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.OWNER)
                                                                        .build(),
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.OWNER)
                                                                        .build(),
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.VERIFIER)
                                                                        .build()))
                                                                .removedRoles(List.of(
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.ANSWER_MODERATOR)
                                                                        .build()))
                                                                .audienceFilters(List.of(
                                                                    FacetFilter.builder()
                                                                        .fieldName("type")
                                                                        .values(List.of(
                                                                            FacetFilterValue.builder()
                                                                                .value("Spreadsheet")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build(),
                                                                            FacetFilterValue.builder()
                                                                                .value("Presentation")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build()))
                                                                        .build()))
                                                                .items(List.of(
                                                                    CollectionItem.builder()
                                                                        .collectionId(480616L)
                                                                        .itemType(CollectionItemItemType.DOCUMENT)
                                                                        .build(),
                                                                    CollectionItem.builder()
                                                                        .collectionId(523875L)
                                                                        .itemType(CollectionItemItemType.COLLECTION)
                                                                        .build()))
                                                                .roles(List.of(
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.VIEWER)
                                                                        .build(),
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.VIEWER)
                                                                        .build(),
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.OWNER)
                                                                        .build()))
                                                                .build(),
                                                            Collection.builder()
                                                                .name("<value>")
                                                                .description("safely briefly ugh fen")
                                                                .id(96709L)
                                                                .audienceFilters(List.of(
                                                                    FacetFilter.builder()
                                                                        .fieldName("type")
                                                                        .values(List.of(
                                                                            FacetFilterValue.builder()
                                                                                .value("Spreadsheet")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build(),
                                                                            FacetFilterValue.builder()
                                                                                .value("Presentation")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build()))
                                                                        .build()))
                                                                .build()))
                                                        .interactions(DocumentInteractions.builder()
                                                            .reacts(List.of(
                                                                Reaction.builder()
                                                                    .build(),
                                                                Reaction.builder()
                                                                    .build(),
                                                                Reaction.builder()
                                                                    .build()))
                                                            .shares(List.of(
                                                                Share.builder()
                                                                    .numDaysAgo(5229L)
                                                                    .build(),
                                                                Share.builder()
                                                                    .numDaysAgo(810770L)
                                                                    .build()))
                                                            .build())
                                                        .verification(Verification.builder()
                                                            .state(State.DEPRECATED)
                                                            .metadata(VerificationMetadata.builder()
                                                                .reminders(List.of(
                                                                    Reminder.builder()
                                                                        .assignee(Person.builder()
                                                                            .name("George Clooney")
                                                                            .obfuscatedId("abc123")
                                                                            .build())
                                                                        .remindAt(505778L)
                                                                        .build(),
                                                                    Reminder.builder()
                                                                        .assignee(Person.builder()
                                                                            .name("George Clooney")
                                                                            .obfuscatedId("abc123")
                                                                            .build())
                                                                        .remindAt(948614L)
                                                                        .build(),
                                                                    Reminder.builder()
                                                                        .assignee(Person.builder()
                                                                            .name("George Clooney")
                                                                            .obfuscatedId("abc123")
                                                                            .build())
                                                                        .remindAt(900109L)
                                                                        .build()))
                                                                .lastReminder(Reminder.builder()
                                                                    .assignee(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .remindAt(20615L)
                                                                    .build())
                                                                .build())
                                                            .build())
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build()))
                                        .inputDetails(SearchRequestInputDetails.builder()
                                            .hasCopyPaste(true)
                                            .build())
                                        .build())
                                    .results(List.of(
                                        SearchResult.builder()
                                            .url("https://example.com/foo/bar")
                                            .title("title")
                                            .nativeAppUrl("slack://foo/bar")
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build()))
                                    .build(),
                                RelatedDocuments.builder()
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .searchProviderInfo(SearchProviderInfo.builder()
                                            .name("Google")
                                            .searchLinkUrlTemplate("https://www.google.com/search?q={query}&hl=en")
                                            .build())
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .requestOptions(SearchRequestOptions.builder()
                                            .facetBucketSize(726700L)
                                            .datasourceFilter("JIRA")
                                            .datasourcesFilter(List.of(
                                                "JIRA"))
                                            .queryOverridesFacetFilters(true)
                                            .facetFilters(List.of(
                                                FacetFilter.builder()
                                                    .fieldName("type")
                                                    .values(List.of(
                                                        FacetFilterValue.builder()
                                                            .value("Spreadsheet")
                                                            .relationType(RelationType.EQUALS)
                                                            .build(),
                                                        FacetFilterValue.builder()
                                                            .value("Presentation")
                                                            .relationType(RelationType.EQUALS)
                                                            .build()))
                                                    .build()))
                                            .facetFilterSets(List.of(
                                                FacetFilterSet.builder()
                                                    .filters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .build(),
                                                FacetFilterSet.builder()
                                                    .filters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .build(),
                                                FacetFilterSet.builder()
                                                    .filters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .build()))
                                            .authTokens(List.of(
                                                AuthToken.builder()
                                                    .accessToken("123abc")
                                                    .datasource("gmail")
                                                    .scope("email profile https://www.googleapis.com/auth/gmail.readonly")
                                                    .tokenType("Bearer")
                                                    .authUser("1")
                                                    .build()))
                                            .build())
                                        .inputDetails(SearchRequestInputDetails.builder()
                                            .hasCopyPaste(true)
                                            .build())
                                        .build())
                                    .build()))
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .suggestions(List.of(
                                        QuerySuggestion.builder()
                                            .query("app:github type:pull author:mortimer")
                                            .label("Mortimer's PRs")
                                            .datasource("github")
                                            .build()))
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .invites(List.of(
                                        ChannelInviteInfo.builder()
                                            .build(),
                                        ChannelInviteInfo.builder()
                                            .build()))
                                    .build())
                                .customFields(List.of(
                                    CustomFieldData.builder()
                                        .label("<value>")
                                        .values(List.of(
                                            CustomFieldValue.of(CustomFieldValueStr.builder()
                                                .build()),
                                            CustomFieldValue.of(CustomFieldValueStr.builder()
                                                .build())))
                                        .displayable(true)
                                        .build()))
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .icon(IconConfig.builder()
                            .color("#343CED")
                            .key("person_icon")
                            .iconType(IconType.GLYPH)
                            .name("user")
                            .build())
                        .build())
                    .build(),
                ChatMetadataResult.builder()
                    .chat(ChatMetadata.builder()
                        .createdBy(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .icon(IconConfig.builder()
                            .color("#343CED")
                            .key("person_icon")
                            .iconType(IconType.GLYPH)
                            .name("user")
                            .build())
                        .build())
                    .build(),
                ChatMetadataResult.builder()
                    .chat(ChatMetadata.builder()
                        .createdBy(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .icon(IconConfig.builder()
                            .color("#343CED")
                            .key("person_icon")
                            .iconType(IconType.GLYPH)
                            .name("user")
                            .build())
                        .build())
                    .build()))
            .build(),
            res.listChatsResponse().get());
    }

    @Test
    public void testClientChat_Getchatapplication() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("getchatapplication");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        GetchatapplicationResponse res = sdk.client().chat().retrieveApplication()
                .getChatApplicationRequest(GetChatApplicationRequest.builder()
                    .id("<id>")
                    .build())
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            GetChatApplicationResponse.builder()
            .build(),
            res.getChatApplicationResponse().get());
    }

    @Test
    public void testClientChat_Getchatfiles() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("getchatfiles");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        GetchatfilesResponse res = sdk.client().chat().retrieveFiles()
                .getChatFilesRequest(GetChatFilesRequest.builder()
                    .fileIds(List.of(
                        "<value>",
                        "<value>"))
                    .build())
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            GetChatFilesResponse.builder()
            .files(Map.ofEntries(
                Map.entry("key", ChatFile.builder()
                    .id("FILE_1234")
                    .url("www.google.com")
                    .name("sample.pdf")
                    .build()),
                Map.entry("key1", ChatFile.builder()
                    .id("FILE_1234")
                    .url("www.google.com")
                    .name("sample.pdf")
                    .build()),
                Map.entry("key2", ChatFile.builder()
                    .id("FILE_1234")
                    .url("www.google.com")
                    .name("sample.pdf")
                    .build())))
            .build(),
            res.getChatFilesResponse().get());
    }

    @Test
    public void testClientChat_Deletechatfiles() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("deletechatfiles");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        DeletechatfilesResponse res = sdk.client().chat().deleteFiles()
                .deleteChatFilesRequest(DeleteChatFilesRequest.builder()
                    .fileIds(List.of(
                        "<value>"))
                    .build())
                .call();
        assertEquals(200, res.statusCode());
    }

    @Test
    public void testClientChat_ChatStreamDefaultExample() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("chatStream-defaultExample");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        ChatStreamResponse res = sdk.client().chat().createStream()
                .chatRequest(ChatRequest.builder()
                    .messages(List.of(
                        ChatMessage.builder()
                            .fragments(List.of(
                                ChatMessageFragment.builder()
                                    .text("What are the company holidays this year?")
                                    .build()))
                            .build()))
                    .build())
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            "{\"messages\":[{\"author\":\"GLEAN_AI\",\"messageType\":\"CONTENT\",\"hasMoreFragments\":false,\"agentConfig\":{\"agent\":\"DEFAULT\",\"mode\":\"DEFAULT\"},\"fragments\":[{\"text\":\"There are no holidays!\"}]}]}",
            res.chatRequestStream().get());
    }

    @Test
    public void testClientChat_ChatStreamGptAgentExample() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("chatStream-gptAgentExample");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        ChatStreamResponse res = sdk.client().chat().createStream()
                .chatRequest(ChatRequest.builder()
                    .messages(List.of(
                        ChatMessage.builder()
                            .fragments(List.of(
                                ChatMessageFragment.builder()
                                    .text("Who was the first person to land on the moon?")
                                    .build()))
                            .build()))
                    .agentConfig(AgentConfig.builder()
                        .agent(AgentEnum.GPT)
                        .build())
                    .build())
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            "<value>",
            res.chatRequestStream().get());
    }

    @Test
    public void testClientChat_ChatStreamStreamingExample() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("chatStream-streamingExample");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        ChatStreamResponse res = sdk.client().chat().createStream()
                .chatRequest(ChatRequest.builder()
                    .messages(List.of())
                    .timeoutMillis(30000L)
                    .build())
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            "{\"messages\":[{\"author\":\"GLEAN_AI\",\"messageType\":\"CONTENT\",\"agentConfig\":{\"agent\":\"DEFAULT\",\"mode\":\"DEFAULT\",\"hasMoreFragments\":true},\"fragments\":null},{\"author\":\"GLEAN_AI\",\"messageType\":\"CONTENT\",\"agentConfig\":{\"agent\":\"DEFAULT\",\"mode\":\"DEFAULT\",\"hasMoreFragments\":true},\"fragments\":null},{\"author\":\"GLEAN_AI\",\"messageType\":\"CONTENT\",\"agentConfig\":{\"agent\":\"DEFAULT\",\"mode\":\"DEFAULT\",\"hasMoreFragments\":true},\"fragments\":[{\"text\":\"e are\"}]},{\"author\":\"GLEAN_AI\",\"messageType\":\"CONTENT\",\"agentConfig\":{\"agent\":\"DEFAULT\",\"mode\":\"DEFAULT\",\"hasMoreFragments\":true},\"fragments\":[{\"text\":\"no hol\"}]},{\"author\":\"GLEAN_AI\",\"messageType\":\"CONTENT\",\"agentConfig\":{\"agent\":\"DEFAULT\",\"mode\":\"DEFAULT\",\"hasMoreFragments\":false},\"fragments\":[{\"text\":\"idays!\"}]}]}",
            res.chatRequestStream().get());
    }

    @Test
    public void testClientChat_ChatStreamUpdateResponse() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("chatStream-updateResponse");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        ChatStreamResponse res = sdk.client().chat().createStream()
                .chatRequest(ChatRequest.builder()
                    .messages(List.of(
                        ChatMessage.builder()
                            .citations(List.of(
                                ChatMessageCitation.builder()
                                    .sourceDocument(Document.builder()
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .build())
                                    .sourceFile(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .sourcePerson(Person.builder()
                                        .name("George Clooney")
                                        .obfuscatedId("abc123")
                                        .build())
                                    .referenceRanges(List.of(
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(485333L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(159062L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(369746L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build()))
                                    .build()))
                            .fragments(List.of(
                                ChatMessageFragment.builder()
                                    .structuredResults(List.of(
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .poc(List.of(
                                                    Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build()))
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .members(List.of(
                                                    PersonToTeamRelationship.builder()
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build(),
                                                    PersonToTeamRelationship.builder()
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build(),
                                                    PersonToTeamRelationship.builder()
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .customFields(List.of(
                                                    CustomFieldData.builder()
                                                        .label("<value>")
                                                        .values(List.of(
                                                            CustomFieldValue.of(CustomFieldValuePerson.builder()
                                                                .person(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build()),
                                                            CustomFieldValue.of(CustomFieldValueStr.builder()
                                                                .build()),
                                                            CustomFieldValue.of(CustomFieldValueStr.builder()
                                                                .build())))
                                                        .build()))
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .roles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.OWNER)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build(),
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.VIEWER)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build(),
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.OWNER)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .addedRoles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.EDITOR)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .removedRoles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.EDITOR)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build(),
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.EDITOR)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .structuredList(List.of(
                                                        StructuredTextItem.builder()
                                                            .link("https://en.wikipedia.org/wiki/Diffuse_sky_radiation")
                                                            .document(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .text("Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.")
                                                            .build()))
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of(
                                                        AnswerLike.builder()
                                                            .user(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build()))
                                                    .likedByUser(false)
                                                    .numLikes(490380L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.VERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .reminders(List.of(
                                                            Reminder.builder()
                                                                .assignee(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .remindAt(646506L)
                                                                .requestor(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build(),
                                                            Reminder.builder()
                                                                .assignee(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .remindAt(14111L)
                                                                .requestor(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build(),
                                                            Reminder.builder()
                                                                .assignee(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .remindAt(911718L)
                                                                .requestor(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build()))
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(997948L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .candidateVerifiers(List.of(
                                                            Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("stage atop minion which best sturdy enormously afore circumference duh")
                                                    .id(647529L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .collections(List.of(
                                                    Collection.builder()
                                                        .name("<value>")
                                                        .description("wring blank who sate woot")
                                                        .id(370683L)
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .creator(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .updatedBy(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .items(List.of(
                                                            CollectionItem.builder()
                                                                .collectionId(836170L)
                                                                .itemType(CollectionItemItemType.DOCUMENT)
                                                                .createdBy(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .document(Document.builder()
                                                                    .metadata(DocumentMetadata.builder()
                                                                        .datasource("datasource")
                                                                        .objectType("Feature Request")
                                                                        .container("container")
                                                                        .parentId("JIRA_EN-1337")
                                                                        .mimeType("mimeType")
                                                                        .documentId("documentId")
                                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .author(Person.builder()
                                                                            .name("name")
                                                                            .obfuscatedId("<id>")
                                                                            .build())
                                                                        .components(List.of(
                                                                            "Backend",
                                                                            "Networking"))
                                                                        .status("[\"Done\"]")
                                                                        .customData(Map.ofEntries(
                                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                                .build())))
                                                                        .build())
                                                                    .build())
                                                                .shortcut(Shortcut.builder()
                                                                    .inputAlias("<value>")
                                                                    .createdBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .updatedBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .destinationDocument(Document.builder()
                                                                        .metadata(DocumentMetadata.builder()
                                                                            .datasource("datasource")
                                                                            .objectType("Feature Request")
                                                                            .container("container")
                                                                            .parentId("JIRA_EN-1337")
                                                                            .mimeType("mimeType")
                                                                            .documentId("documentId")
                                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .author(Person.builder()
                                                                                .name("name")
                                                                                .obfuscatedId("<id>")
                                                                                .build())
                                                                            .components(List.of(
                                                                                "Backend",
                                                                                "Networking"))
                                                                            .status("[\"Done\"]")
                                                                            .customData(Map.ofEntries(
                                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                                    .build())))
                                                                            .build())
                                                                        .build())
                                                                    .build())
                                                                .build(),
                                                            CollectionItem.builder()
                                                                .collectionId(743315L)
                                                                .itemType(CollectionItemItemType.DOCUMENT)
                                                                .createdBy(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .document(Document.builder()
                                                                    .metadata(DocumentMetadata.builder()
                                                                        .datasource("datasource")
                                                                        .objectType("Feature Request")
                                                                        .container("container")
                                                                        .parentId("JIRA_EN-1337")
                                                                        .mimeType("mimeType")
                                                                        .documentId("documentId")
                                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .author(Person.builder()
                                                                            .name("name")
                                                                            .obfuscatedId("<id>")
                                                                            .build())
                                                                        .components(List.of(
                                                                            "Backend",
                                                                            "Networking"))
                                                                        .status("[\"Done\"]")
                                                                        .customData(Map.ofEntries(
                                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                                .build())))
                                                                        .build())
                                                                    .build())
                                                                .shortcut(Shortcut.builder()
                                                                    .inputAlias("<value>")
                                                                    .createdBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .updatedBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .destinationDocument(Document.builder()
                                                                        .metadata(DocumentMetadata.builder()
                                                                            .datasource("datasource")
                                                                            .objectType("Feature Request")
                                                                            .container("container")
                                                                            .parentId("JIRA_EN-1337")
                                                                            .mimeType("mimeType")
                                                                            .documentId("documentId")
                                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .author(Person.builder()
                                                                                .name("name")
                                                                                .obfuscatedId("<id>")
                                                                                .build())
                                                                            .components(List.of(
                                                                                "Backend",
                                                                                "Networking"))
                                                                            .status("[\"Done\"]")
                                                                            .customData(Map.ofEntries(
                                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                                    .build())))
                                                                            .build())
                                                                        .build())
                                                                    .build())
                                                                .build()))
                                                        .build(),
                                                    Collection.builder()
                                                        .name("<value>")
                                                        .description("keenly until phew veto calculus")
                                                        .id(140813L)
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .creator(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .updatedBy(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .people(List.of(
                                                        CalendarAttendee.builder()
                                                            .person(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build(),
                                                        CalendarAttendee.builder()
                                                            .person(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build()))
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("veg welcome boss manage freely")
                                                .id(79387L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("after er grouchy stained plus buck")
                                                .id(668238L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .suggestions(List.of(
                                                    QuerySuggestion.builder()
                                                        .query("app:github type:pull author:mortimer")
                                                        .label("Mortimer's PRs")
                                                        .datasource("github")
                                                        .build()))
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedDocuments(List.of(
                                                RelatedDocuments.builder()
                                                    .querySuggestion(QuerySuggestion.builder()
                                                        .query("app:github type:pull author:mortimer")
                                                        .label("Mortimer's PRs")
                                                        .datasource("github")
                                                        .build())
                                                    .results(List.of(
                                                        SearchResult.builder()
                                                            .url("https://example.com/foo/bar")
                                                            .title("title")
                                                            .nativeAppUrl("slack://foo/bar")
                                                            .build()))
                                                    .build(),
                                                RelatedDocuments.builder()
                                                    .querySuggestion(QuerySuggestion.builder()
                                                        .query("app:github type:pull author:mortimer")
                                                        .label("Mortimer's PRs")
                                                        .datasource("github")
                                                        .build())
                                                    .build(),
                                                RelatedDocuments.builder()
                                                    .querySuggestion(QuerySuggestion.builder()
                                                        .query("app:github type:pull author:mortimer")
                                                        .label("Mortimer's PRs")
                                                        .datasource("github")
                                                        .build())
                                                    .build()))
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .ranges(List.of(
                                                    TextRange.builder()
                                                        .startIndex(1054L)
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .build()))
                                                .build())
                                            .build()))
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .build())
                                    .file(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .action(ToolInfo.builder()
                                        .metadata(ToolMetadata.builder()
                                            .type(ToolMetadataType.RETRIEVAL)
                                            .name("<value>")
                                            .displayName("Brianne.OReilly19")
                                            .displayDescription("<value>")
                                            .objectName("[\"HR ticket\",\"Email\",\"Chat message\"]")
                                            .build())
                                        .build())
                                    .build(),
                                ChatMessageFragment.builder()
                                    .structuredResults(List.of(
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(false)
                                                    .numLikes(370922L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.VERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(605L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("finally waist inasmuch woot ignorance")
                                                    .id(291881L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("even metal boo blindly for steak gadzooks ick monthly heating")
                                                .id(833343L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("geez huzzah oof webbed certainly degenerate along inure cow zowie")
                                                .id(656491L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build()))
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .build())
                                    .file(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .action(ToolInfo.builder()
                                        .metadata(ToolMetadata.builder()
                                            .type(ToolMetadataType.ACTION)
                                            .name("<value>")
                                            .displayName("Elinor_Champlin")
                                            .displayDescription("<value>")
                                            .objectName("[\"HR ticket\",\"Email\",\"Chat message\"]")
                                            .build())
                                        .build())
                                    .build(),
                                ChatMessageFragment.builder()
                                    .structuredResults(List.of(
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(86395L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.VERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(612122L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("the across instead into aching where descent shark lest times")
                                                    .id(760885L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("woefully optimal beside tame")
                                                .id(750557L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("impanel hydrant spectacles justly hence absolve after sleet drat")
                                                .id(603732L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(false)
                                                    .numLikes(226392L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.DEPRECATED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(130628L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("amongst uh-huh reassemble upset concrete")
                                                    .id(911324L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("behind boyfriend slime nor")
                                                .id(146903L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("psst um devil gazebo save")
                                                .id(45693L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(654201L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.UNVERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(804029L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("except gadzooks geez")
                                                    .id(567840L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("aha hence nectarine within airbus so stylish while")
                                                .id(376424L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("surprise outside whether ack")
                                                .id(621220L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build()))
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .build())
                                    .file(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .action(ToolInfo.builder()
                                        .metadata(ToolMetadata.builder()
                                            .type(ToolMetadataType.RETRIEVAL)
                                            .name("<value>")
                                            .displayName("Chanel.Kshlerin")
                                            .displayDescription("<value>")
                                            .objectName("[\"HR ticket\",\"Email\",\"Chat message\"]")
                                            .build())
                                        .build())
                                    .build()))
                            .build(),
                        ChatMessage.builder()
                            .citations(List.of(
                                ChatMessageCitation.builder()
                                    .sourceDocument(Document.builder()
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .build())
                                    .sourceFile(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .sourcePerson(Person.builder()
                                        .name("George Clooney")
                                        .obfuscatedId("abc123")
                                        .build())
                                    .referenceRanges(List.of(
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(537317L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(302109L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build()))
                                    .build(),
                                ChatMessageCitation.builder()
                                    .sourceDocument(Document.builder()
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .build())
                                    .sourceFile(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .sourcePerson(Person.builder()
                                        .name("George Clooney")
                                        .obfuscatedId("abc123")
                                        .build())
                                    .referenceRanges(List.of(
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(494612L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build()))
                                    .build(),
                                ChatMessageCitation.builder()
                                    .sourceDocument(Document.builder()
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .build())
                                    .sourceFile(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .sourcePerson(Person.builder()
                                        .name("George Clooney")
                                        .obfuscatedId("abc123")
                                        .build())
                                    .referenceRanges(List.of(
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(767229L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(437321L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(949459L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build()))
                                    .build()))
                            .fragments(List.of(
                                ChatMessageFragment.builder()
                                    .structuredResults(List.of(
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(280784L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.VERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(764407L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("short-term suffice why rightfully")
                                                    .id(974132L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("times loudly upon dramatize")
                                                .id(186567L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("er reconsideration triumphantly meaty yearly fragrant delightfully though painfully robust")
                                                .id(804940L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(175872L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.VERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(922297L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("planula presume mismatch of commandeer ready mortally although")
                                                    .id(711093L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("phooey aw than proceed perky")
                                                .id(365383L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("rundown recklessly favorite supposing dull politely soon ignorant")
                                                .id(171217L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(false)
                                                    .numLikes(447757L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.VERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(452627L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("striking confound wilderness but rapid an convection scoop litter than")
                                                    .id(569913L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("extra-large innocent impassioned stealthily yet gum onset blah second-hand")
                                                .id(123250L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("meaty impure round")
                                                .id(31007L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build()))
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .build())
                                    .file(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .action(ToolInfo.builder()
                                        .metadata(ToolMetadata.builder()
                                            .type(ToolMetadataType.ACTION)
                                            .name("<value>")
                                            .displayName("Lauren53")
                                            .displayDescription("<value>")
                                            .objectName("[\"HR ticket\",\"Email\",\"Chat message\"]")
                                            .build())
                                        .build())
                                    .build(),
                                ChatMessageFragment.builder()
                                    .structuredResults(List.of(
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(false)
                                                    .numLikes(141476L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.VERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(146280L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("intrigue psst furthermore personalise actually showboat eek punctuation ownership ah")
                                                    .id(785749L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("irresponsible meanwhile supposing classic than loyalty before who")
                                                .id(362665L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("colorfully aha where")
                                                .id(673010L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(false)
                                                    .numLikes(932912L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.DEPRECATED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(10437L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("hence inquisitively proud meh yahoo")
                                                    .id(165945L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("indeed enthusiastically airman facilitate")
                                                .id(52239L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("excluding severe amongst bump farm zowie prickly why")
                                                .id(617911L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(false)
                                                    .numLikes(126508L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.DEPRECATED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(504638L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("approach hm gadzooks yahoo shameless underneath negative")
                                                    .id(111255L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("jogging however inwardly yahoo although bah monthly lively colorfully justly")
                                                .id(656993L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("guidance zen cross-contamination ick pry mundane thoroughly oof ha")
                                                .id(474526L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build()))
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .build())
                                    .file(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .action(ToolInfo.builder()
                                        .metadata(ToolMetadata.builder()
                                            .type(ToolMetadataType.ACTION)
                                            .name("<value>")
                                            .displayName("Brooklyn64")
                                            .displayDescription("<value>")
                                            .objectName("[\"HR ticket\",\"Email\",\"Chat message\"]")
                                            .build())
                                        .build())
                                    .build()))
                            .build()))
                    .timeoutMillis(30000L)
                    .build())
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            "{\"messages\":[{\"author\":\"GLEAN_AI\",\"messageType\":\"UPDATE\",\"agentConfig\":{\"agent\":\"DEFAULT\",\"mode\":\"DEFAULT\"},\"fragments\":[{\"text\":\"**Reading:**\"},{\"structuredResults\":[{\"document\":{\"id\":\"123\",\"title\":\"Company Handbook\"}}]}]}]}",
            res.chatRequestStream().get());
    }

    @Test
    public void testClientChat_ChatStreamCitationResponse() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("chatStream-citationResponse");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        ChatStreamResponse res = sdk.client().chat().createStream()
                .chatRequest(ChatRequest.builder()
                    .messages(List.of(
                        ChatMessage.builder()
                            .citations(List.of(
                                ChatMessageCitation.builder()
                                    .sourceDocument(Document.builder()
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .build())
                                    .sourceFile(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .sourcePerson(Person.builder()
                                        .name("George Clooney")
                                        .obfuscatedId("abc123")
                                        .build())
                                    .referenceRanges(List.of(
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(436071L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(735937L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build()))
                                    .build(),
                                ChatMessageCitation.builder()
                                    .sourceDocument(Document.builder()
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .build())
                                    .sourceFile(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .sourcePerson(Person.builder()
                                        .name("George Clooney")
                                        .obfuscatedId("abc123")
                                        .build())
                                    .referenceRanges(List.of(
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(418969L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(510246L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(760612L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build()))
                                    .build()))
                            .fragments(List.of(
                                ChatMessageFragment.builder()
                                    .structuredResults(List.of(
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .poc(List.of(
                                                    Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build()))
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .members(List.of(
                                                    PersonToTeamRelationship.builder()
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build(),
                                                    PersonToTeamRelationship.builder()
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .customFields(List.of(
                                                    CustomFieldData.builder()
                                                        .label("<value>")
                                                        .values(List.of(
                                                            CustomFieldValue.of(CustomFieldValuePerson.builder()
                                                                .person(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build()),
                                                            CustomFieldValue.of(CustomFieldValuePerson.builder()
                                                                .person(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build()),
                                                            CustomFieldValue.of(CustomFieldValuePerson.builder()
                                                                .person(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build())))
                                                        .build(),
                                                    CustomFieldData.builder()
                                                        .label("<value>")
                                                        .values(List.of())
                                                        .build()))
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .roles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.ANSWER_MODERATOR)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .addedRoles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.ANSWER_MODERATOR)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .removedRoles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.VERIFIER)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .structuredList(List.of(
                                                        StructuredTextItem.builder()
                                                            .link("https://en.wikipedia.org/wiki/Diffuse_sky_radiation")
                                                            .document(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .text("Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.")
                                                            .build(),
                                                        StructuredTextItem.builder()
                                                            .link("https://en.wikipedia.org/wiki/Diffuse_sky_radiation")
                                                            .document(Document.builder()
                                                                .metadata(DocumentMetadata.builder()
                                                                    .datasource("datasource")
                                                                    .objectType("Feature Request")
                                                                    .container("container")
                                                                    .parentId("JIRA_EN-1337")
                                                                    .mimeType("mimeType")
                                                                    .documentId("documentId")
                                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                    .author(Person.builder()
                                                                        .name("name")
                                                                        .obfuscatedId("<id>")
                                                                        .build())
                                                                    .components(List.of(
                                                                        "Backend",
                                                                        "Networking"))
                                                                    .status("[\"Done\"]")
                                                                    .customData(Map.ofEntries(
                                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                                            .build())))
                                                                    .build())
                                                                .build())
                                                            .text("Because its wavelengths are shorter, blue light is more strongly scattered than the longer-wavelength lights, red or green. Hence the result that when looking at the sky away from the direct incident sunlight, the human eye perceives the sky to be blue.")
                                                            .build()))
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(181994L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.DEPRECATED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .reminders(List.of(
                                                            Reminder.builder()
                                                                .assignee(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .remindAt(670162L)
                                                                .requestor(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build(),
                                                            Reminder.builder()
                                                                .assignee(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .remindAt(690554L)
                                                                .requestor(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .build()))
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(424843L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .candidateVerifiers(List.of(
                                                            Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("extent emotional white oil buck")
                                                    .id(392138L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .collections(List.of(
                                                    Collection.builder()
                                                        .name("<value>")
                                                        .description("an french sans astride duh dreamily weary disloyal woot eke")
                                                        .id(928199L)
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .creator(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .updatedBy(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .items(List.of(
                                                            CollectionItem.builder()
                                                                .collectionId(574875L)
                                                                .itemType(CollectionItemItemType.DOCUMENT)
                                                                .createdBy(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .document(Document.builder()
                                                                    .metadata(DocumentMetadata.builder()
                                                                        .datasource("datasource")
                                                                        .objectType("Feature Request")
                                                                        .container("container")
                                                                        .parentId("JIRA_EN-1337")
                                                                        .mimeType("mimeType")
                                                                        .documentId("documentId")
                                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .author(Person.builder()
                                                                            .name("name")
                                                                            .obfuscatedId("<id>")
                                                                            .build())
                                                                        .components(List.of(
                                                                            "Backend",
                                                                            "Networking"))
                                                                        .status("[\"Done\"]")
                                                                        .customData(Map.ofEntries(
                                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                                .build())))
                                                                        .build())
                                                                    .build())
                                                                .shortcut(Shortcut.builder()
                                                                    .inputAlias("<value>")
                                                                    .createdBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .updatedBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .destinationDocument(Document.builder()
                                                                        .metadata(DocumentMetadata.builder()
                                                                            .datasource("datasource")
                                                                            .objectType("Feature Request")
                                                                            .container("container")
                                                                            .parentId("JIRA_EN-1337")
                                                                            .mimeType("mimeType")
                                                                            .documentId("documentId")
                                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .author(Person.builder()
                                                                                .name("name")
                                                                                .obfuscatedId("<id>")
                                                                                .build())
                                                                            .components(List.of(
                                                                                "Backend",
                                                                                "Networking"))
                                                                            .status("[\"Done\"]")
                                                                            .customData(Map.ofEntries(
                                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                                    .build())))
                                                                            .build())
                                                                        .build())
                                                                    .build())
                                                                .build(),
                                                            CollectionItem.builder()
                                                                .collectionId(447663L)
                                                                .itemType(CollectionItemItemType.URL)
                                                                .createdBy(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .document(Document.builder()
                                                                    .metadata(DocumentMetadata.builder()
                                                                        .datasource("datasource")
                                                                        .objectType("Feature Request")
                                                                        .container("container")
                                                                        .parentId("JIRA_EN-1337")
                                                                        .mimeType("mimeType")
                                                                        .documentId("documentId")
                                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .author(Person.builder()
                                                                            .name("name")
                                                                            .obfuscatedId("<id>")
                                                                            .build())
                                                                        .components(List.of(
                                                                            "Backend",
                                                                            "Networking"))
                                                                        .status("[\"Done\"]")
                                                                        .customData(Map.ofEntries(
                                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                                .build())))
                                                                        .build())
                                                                    .build())
                                                                .shortcut(Shortcut.builder()
                                                                    .inputAlias("<value>")
                                                                    .createdBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .updatedBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .destinationDocument(Document.builder()
                                                                        .metadata(DocumentMetadata.builder()
                                                                            .datasource("datasource")
                                                                            .objectType("Feature Request")
                                                                            .container("container")
                                                                            .parentId("JIRA_EN-1337")
                                                                            .mimeType("mimeType")
                                                                            .documentId("documentId")
                                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .author(Person.builder()
                                                                                .name("name")
                                                                                .obfuscatedId("<id>")
                                                                                .build())
                                                                            .components(List.of(
                                                                                "Backend",
                                                                                "Networking"))
                                                                            .status("[\"Done\"]")
                                                                            .customData(Map.ofEntries(
                                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                                    .build())))
                                                                            .build())
                                                                        .build())
                                                                    .build())
                                                                .build(),
                                                            CollectionItem.builder()
                                                                .collectionId(60642L)
                                                                .itemType(CollectionItemItemType.TEXT)
                                                                .createdBy(Person.builder()
                                                                    .name("George Clooney")
                                                                    .obfuscatedId("abc123")
                                                                    .build())
                                                                .document(Document.builder()
                                                                    .metadata(DocumentMetadata.builder()
                                                                        .datasource("datasource")
                                                                        .objectType("Feature Request")
                                                                        .container("container")
                                                                        .parentId("JIRA_EN-1337")
                                                                        .mimeType("mimeType")
                                                                        .documentId("documentId")
                                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                        .author(Person.builder()
                                                                            .name("name")
                                                                            .obfuscatedId("<id>")
                                                                            .build())
                                                                        .components(List.of(
                                                                            "Backend",
                                                                            "Networking"))
                                                                        .status("[\"Done\"]")
                                                                        .customData(Map.ofEntries(
                                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                                .build())))
                                                                        .build())
                                                                    .build())
                                                                .shortcut(Shortcut.builder()
                                                                    .inputAlias("<value>")
                                                                    .createdBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .updatedBy(Person.builder()
                                                                        .name("George Clooney")
                                                                        .obfuscatedId("abc123")
                                                                        .build())
                                                                    .destinationDocument(Document.builder()
                                                                        .metadata(DocumentMetadata.builder()
                                                                            .datasource("datasource")
                                                                            .objectType("Feature Request")
                                                                            .container("container")
                                                                            .parentId("JIRA_EN-1337")
                                                                            .mimeType("mimeType")
                                                                            .documentId("documentId")
                                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                            .author(Person.builder()
                                                                                .name("name")
                                                                                .obfuscatedId("<id>")
                                                                                .build())
                                                                            .components(List.of(
                                                                                "Backend",
                                                                                "Networking"))
                                                                            .status("[\"Done\"]")
                                                                            .customData(Map.ofEntries(
                                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                                    .build())))
                                                                            .build())
                                                                        .build())
                                                                    .build())
                                                                .build()))
                                                        .build()))
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .people(List.of(
                                                        CalendarAttendee.builder()
                                                            .person(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build(),
                                                        CalendarAttendee.builder()
                                                            .person(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build(),
                                                        CalendarAttendee.builder()
                                                            .person(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build()))
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("matter lest spark oof unfurl jubilantly across")
                                                .id(194535L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("communicate prudent powerful considering quietly with tromp spring brr")
                                                .id(595008L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .suggestions(List.of(
                                                    QuerySuggestion.builder()
                                                        .query("app:github type:pull author:mortimer")
                                                        .label("Mortimer's PRs")
                                                        .datasource("github")
                                                        .build()))
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedDocuments(List.of(
                                                RelatedDocuments.builder()
                                                    .querySuggestion(QuerySuggestion.builder()
                                                        .query("app:github type:pull author:mortimer")
                                                        .label("Mortimer's PRs")
                                                        .datasource("github")
                                                        .build())
                                                    .results(List.of(
                                                        SearchResult.builder()
                                                            .url("https://example.com/foo/bar")
                                                            .title("title")
                                                            .nativeAppUrl("slack://foo/bar")
                                                            .build()))
                                                    .build()))
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .ranges(List.of(
                                                    TextRange.builder()
                                                        .startIndex(516098L)
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .build(),
                                                    TextRange.builder()
                                                        .startIndex(358039L)
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .build()))
                                                .build())
                                            .build()))
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .build())
                                    .file(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .action(ToolInfo.builder()
                                        .metadata(ToolMetadata.builder()
                                            .type(ToolMetadataType.RETRIEVAL)
                                            .name("<value>")
                                            .displayName("Blaise87")
                                            .displayDescription("<value>")
                                            .objectName("[\"HR ticket\",\"Email\",\"Chat message\"]")
                                            .build())
                                        .build())
                                    .build(),
                                ChatMessageFragment.builder()
                                    .structuredResults(List.of(
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(982657L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.DEPRECATED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(668662L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("materialise likewise ew bah scarper instead")
                                                    .id(291792L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("whup bah scarcely on although royal")
                                                .id(535445L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("heavenly status yippee whose blushing")
                                                .id(983667L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(false)
                                                    .numLikes(118326L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.DEPRECATED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(427120L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("manipulate explode out")
                                                    .id(605176L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("bus outrun boldly opposite")
                                                .id(512474L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("complete help um live beyond for huzzah rowdy foot cross")
                                                .id(402862L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(62815L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.DEPRECATED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(934490L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("lobotomise below psst duh interchange poetry")
                                                    .id(521402L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("fooey handle supposing greedily contrail whenever geez yahoo broadcast")
                                                .id(175510L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("fashion bleakly thankfully indeed fully")
                                                .id(723852L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build()))
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .build())
                                    .file(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .action(ToolInfo.builder()
                                        .metadata(ToolMetadata.builder()
                                            .type(ToolMetadataType.RETRIEVAL)
                                            .name("<value>")
                                            .displayName("Alfred_Wilderman")
                                            .displayDescription("<value>")
                                            .objectName("[\"HR ticket\",\"Email\",\"Chat message\"]")
                                            .build())
                                        .build())
                                    .build()))
                            .build(),
                        ChatMessage.builder()
                            .citations(List.of(
                                ChatMessageCitation.builder()
                                    .sourceDocument(Document.builder()
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .build())
                                    .sourceFile(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .sourcePerson(Person.builder()
                                        .name("George Clooney")
                                        .obfuscatedId("abc123")
                                        .build())
                                    .referenceRanges(List.of(
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(222131L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(453578L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(137281L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build()))
                                    .build()))
                            .fragments(List.of(
                                ChatMessageFragment.builder()
                                    .structuredResults(List.of(
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(569501L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.DEPRECATED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(873746L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("minus oof dazzling ew for forearm utterly hm onto unexpectedly")
                                                    .id(808814L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("through garrote nor")
                                                .id(999094L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("elderly since boohoo appropriate righteously vice following complete impartial sans")
                                                .id(315292L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(610289L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.VERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(46078L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("netsuke stump terrorise ugh zowie")
                                                    .id(942095L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("cheetah amid lest nor instead consequently upbeat fuel incidentally")
                                                .id(65448L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("abaft tightly blah redound qua")
                                                .id(843154L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(false)
                                                    .numLikes(25770L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.UNVERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(103920L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("gratefully failing square consequently discourse since")
                                                    .id(139991L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("futon geez oof coolly selfishly proselytise lest fooey and")
                                                .id(455101L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("able mockingly boo entice softly furthermore woeful")
                                                .id(33669L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build()))
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .build())
                                    .file(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .action(ToolInfo.builder()
                                        .metadata(ToolMetadata.builder()
                                            .type(ToolMetadataType.ACTION)
                                            .name("<value>")
                                            .displayName("Dylan_Schowalter48")
                                            .displayDescription("<value>")
                                            .objectName("[\"HR ticket\",\"Email\",\"Chat message\"]")
                                            .build())
                                        .build())
                                    .build()))
                            .build(),
                        ChatMessage.builder()
                            .citations(List.of(
                                ChatMessageCitation.builder()
                                    .sourceDocument(Document.builder()
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .build())
                                    .sourceFile(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .sourcePerson(Person.builder()
                                        .name("George Clooney")
                                        .obfuscatedId("abc123")
                                        .build())
                                    .referenceRanges(List.of(
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(171021L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(383744L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build()))
                                    .build(),
                                ChatMessageCitation.builder()
                                    .sourceDocument(Document.builder()
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .build())
                                    .sourceFile(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .sourcePerson(Person.builder()
                                        .name("George Clooney")
                                        .obfuscatedId("abc123")
                                        .build())
                                    .referenceRanges(List.of(
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(343186L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(227225L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(55034L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build()))
                                    .build(),
                                ChatMessageCitation.builder()
                                    .sourceDocument(Document.builder()
                                        .metadata(DocumentMetadata.builder()
                                            .datasource("datasource")
                                            .objectType("Feature Request")
                                            .container("container")
                                            .parentId("JIRA_EN-1337")
                                            .mimeType("mimeType")
                                            .documentId("documentId")
                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                            .author(Person.builder()
                                                .name("name")
                                                .obfuscatedId("<id>")
                                                .build())
                                            .components(List.of(
                                                "Backend",
                                                "Networking"))
                                            .status("[\"Done\"]")
                                            .customData(Map.ofEntries(
                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                    .build())))
                                            .build())
                                        .build())
                                    .sourceFile(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .sourcePerson(Person.builder()
                                        .name("George Clooney")
                                        .obfuscatedId("abc123")
                                        .build())
                                    .referenceRanges(List.of(
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(935065L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build(),
                                        ReferenceRange.builder()
                                            .textRange(TextRange.builder()
                                                .startIndex(816251L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build()))
                                    .build()))
                            .fragments(List.of(
                                ChatMessageFragment.builder()
                                    .structuredResults(List.of(
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(251149L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.VERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(23422L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("affiliate who lamp blushing plait after violent")
                                                    .id(55380L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("thankfully bliss merge inside without regarding how endow")
                                                .id(420468L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("gee edge scholarship")
                                                .id(632878L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(18033L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.VERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(807925L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("rust forenenst phew immediately")
                                                    .id(277574L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("till likewise boiling yesterday gah upward brr")
                                                .id(377350L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("blah lowball who moor following folklore as or")
                                                .id(115719L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(591310L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.UNVERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(265693L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("among under although ack gee atop horn")
                                                    .id(170010L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("owlishly genuine woot ocelot nor next")
                                                .id(754074L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("finally jaggedly nightlife surface")
                                                .id(435267L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build()))
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .build())
                                    .file(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .action(ToolInfo.builder()
                                        .metadata(ToolMetadata.builder()
                                            .type(ToolMetadataType.ACTION)
                                            .name("<value>")
                                            .displayName("Solon.Schmitt10")
                                            .displayDescription("<value>")
                                            .objectName("[\"HR ticket\",\"Email\",\"Chat message\"]")
                                            .build())
                                        .build())
                                    .build(),
                                ChatMessageFragment.builder()
                                    .structuredResults(List.of(
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(464085L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.DEPRECATED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(197253L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("ah once gee")
                                                    .id(785222L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("toe yowza yum soon hypothesize")
                                                .id(655575L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("godparent before colorize")
                                                .id(624868L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(439860L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.UNVERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(257885L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("uh-huh ha notwithstanding so near troubled onto volunteer hm")
                                                    .id(38370L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("for now role baseboard woot entrench")
                                                .id(816883L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("meanwhile instead colorfully overheard")
                                                .id(209097L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build(),
                                        StructuredResult.builder()
                                            .document(Document.builder()
                                                .metadata(DocumentMetadata.builder()
                                                    .datasource("datasource")
                                                    .objectType("Feature Request")
                                                    .container("container")
                                                    .parentId("JIRA_EN-1337")
                                                    .mimeType("mimeType")
                                                    .documentId("documentId")
                                                    .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                    .author(Person.builder()
                                                        .name("name")
                                                        .obfuscatedId("<id>")
                                                        .build())
                                                    .components(List.of(
                                                        "Backend",
                                                        "Networking"))
                                                    .status("[\"Done\"]")
                                                    .customData(Map.ofEntries(
                                                        Map.entry("someCustomField", CustomDataValue.builder()
                                                            .build())))
                                                    .build())
                                                .build())
                                            .person(Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build())
                                            .customer(Customer.builder()
                                                .id("<id>")
                                                .company(Company.builder()
                                                    .name("<value>")
                                                    .location("New York City")
                                                    .industry("Finances")
                                                    .about("Financial, software, data, and media company headquartered in Midtown Manhattan, New York City")
                                                    .build())
                                                .notes("CIO is interested in trying out the product.")
                                                .build())
                                            .team(Team.builder()
                                                .id("<id>")
                                                .name("<value>")
                                                .datasourceProfiles(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .build())
                                            .customEntity(CustomEntity.builder()
                                                .build())
                                            .answer(Answer.builder()
                                                .id(3L)
                                                .docId("ANSWERS_answer_3")
                                                .question("Why is the sky blue?")
                                                .bodyText("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .combinedAnswerText(StructuredText.builder()
                                                    .text("From https://en.wikipedia.org/wiki/Diffuse_sky_radiation, the sky is blue because blue light is more strongly scattered than longer-wavelength light.")
                                                    .build())
                                                .likes(AnswerLikes.builder()
                                                    .likedBy(List.of())
                                                    .likedByUser(true)
                                                    .numLikes(788886L)
                                                    .build())
                                                .author(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .verification(Verification.builder()
                                                    .state(State.UNVERIFIED)
                                                    .metadata(VerificationMetadata.builder()
                                                        .lastVerifier(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build())
                                                        .document(Document.builder()
                                                            .metadata(DocumentMetadata.builder()
                                                                .datasource("datasource")
                                                                .objectType("Feature Request")
                                                                .container("container")
                                                                .parentId("JIRA_EN-1337")
                                                                .mimeType("mimeType")
                                                                .documentId("documentId")
                                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                                .author(Person.builder()
                                                                    .name("name")
                                                                    .obfuscatedId("<id>")
                                                                    .build())
                                                                .components(List.of(
                                                                    "Backend",
                                                                    "Networking"))
                                                                .status("[\"Done\"]")
                                                                .customData(Map.ofEntries(
                                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                                        .build())))
                                                                .build())
                                                            .build())
                                                        .lastReminder(Reminder.builder()
                                                            .assignee(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .remindAt(820471L)
                                                            .requestor(Person.builder()
                                                                .name("George Clooney")
                                                                .obfuscatedId("abc123")
                                                                .build())
                                                            .build())
                                                        .build())
                                                    .build())
                                                .board(AnswerBoard.builder()
                                                    .name("<value>")
                                                    .description("indelible aha yuck loyally")
                                                    .id(278807L)
                                                    .audienceFilters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .creator(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .updatedBy(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build())
                                                    .build())
                                                .sourceDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .extractedQnA(ExtractedQnA.builder()
                                                .questionResult(SearchResult.builder()
                                                    .url("https://example.com/foo/bar")
                                                    .title("title")
                                                    .nativeAppUrl("slack://foo/bar")
                                                    .build())
                                                .build())
                                            .meeting(Meeting.builder()
                                                .attendees(CalendarAttendees.builder()
                                                    .build())
                                                .build())
                                            .collection(Collection.builder()
                                                .name("<value>")
                                                .description("throughout though reluctantly healthily furlough minister unique simple over sidetrack")
                                                .id(316354L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .answerBoard(AnswerBoard.builder()
                                                .name("<value>")
                                                .description("frequent aw above ultimate into till pish husky wetly agitated")
                                                .id(744434L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .code(Code.builder()
                                                .repoName("scio")
                                                .fileName("README.md")
                                                .build())
                                            .shortcut(Shortcut.builder()
                                                .inputAlias("<value>")
                                                .createdBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .destinationDocument(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .author(Person.builder()
                                                            .name("name")
                                                            .obfuscatedId("<id>")
                                                            .build())
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build())
                                            .querySuggestions(QuerySuggestionList.builder()
                                                .person(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .build())
                                                .build())
                                            .relatedQuestion(RelatedQuestion.builder()
                                                .build())
                                            .build()))
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .build())
                                    .file(ChatFile.builder()
                                        .id("FILE_1234")
                                        .url("www.google.com")
                                        .name("sample.pdf")
                                        .build())
                                    .action(ToolInfo.builder()
                                        .metadata(ToolMetadata.builder()
                                            .type(ToolMetadataType.ACTION)
                                            .name("<value>")
                                            .displayName("Nannie.McDermott")
                                            .displayDescription("<value>")
                                            .objectName("[\"HR ticket\",\"Email\",\"Chat message\"]")
                                            .build())
                                        .build())
                                    .build()))
                            .build()))
                    .timeoutMillis(30000L)
                    .build())
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            "{\"messages\":[{\"author\":\"GLEAN_AI\",\"messageType\":\"CONTENT\",\"agentConfig\":{\"agent\":\"DEFAULT\",\"mode\":\"DEFAULT\"},\"citations\":[{\"sourceDocument\":{\"id\":\"123\",\"title\":\"Company Handbook\",\"referenceRanges\":[{\"textRange\":{\"startIndex\":0,\"endIndex\":12,\"type\":\"CITATION\"}}]}}]}]}",
            res.chatRequestStream().get());
    }
}