/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static org.junit.jupiter.api.Assertions.assertEquals;

import com.glean.api_client.glean_api_client.models.components.CheckDocumentAccessRequest;
import com.glean.api_client.glean_api_client.models.components.CheckDocumentAccessResponse;
import com.glean.api_client.glean_api_client.models.components.GetDocumentCountRequest;
import com.glean.api_client.glean_api_client.models.components.GetDocumentCountResponse;
import com.glean.api_client.glean_api_client.models.components.GetDocumentStatusRequest;
import com.glean.api_client.glean_api_client.models.components.GetDocumentStatusResponse;
import com.glean.api_client.glean_api_client.models.components.GetUserCountRequest;
import com.glean.api_client.glean_api_client.models.components.GetUserCountResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1CheckdocumentaccessResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1GetdocumentcountResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1GetdocumentstatusResponse;
import com.glean.api_client.glean_api_client.models.operations.PostApiIndexV1GetusercountResponse;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Exception;
import org.junit.jupiter.api.Assumptions;
import org.junit.jupiter.api.Test;

public class TroubleshootingTests {

    @Test
    public void testTroubleshooting_PostApiIndexV1DebugDatasourceStatus() throws Exception {
        Assumptions.assumeTrue(false, "incomplete test found please make sure to address the following errors: [`workflow step post_/api/index/v1/debug/{datasource}/status.test contains criterion simple with invalid condition`, `workflow step post_/api/index/v1/debug/{datasource}/status.test does not contain $contentType successCriteria and required for response body assertion`]");
    }

    @Test
    public void testTroubleshooting_PostApiIndexV1Checkdocumentaccess() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("post_/api/index/v1/checkdocumentaccess");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        CheckDocumentAccessRequest req = CheckDocumentAccessRequest.builder()
                .datasource("<value>")
                .objectType("<value>")
                .docId("<id>")
                .userEmail("<value>")
                .build();

        PostApiIndexV1CheckdocumentaccessResponse res = sdk.indexing().documents().checkAccess()
                .request(req)
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            CheckDocumentAccessResponse.builder()
            .build(),
            res.checkDocumentAccessResponse().get());
    }

    @Test
    public void testTroubleshooting_PostApiIndexV1Getdocumentstatus() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("post_/api/index/v1/getdocumentstatus");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        GetDocumentStatusRequest req = GetDocumentStatusRequest.builder()
                .datasource("<value>")
                .objectType("<value>")
                .docId("<id>")
                .build();

        PostApiIndexV1GetdocumentstatusResponse res = sdk.indexing().documents().status()
                .request(req)
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            GetDocumentStatusResponse.builder()
            .build(),
            res.getDocumentStatusResponse().get());
    }

    @Test
    public void testTroubleshooting_PostApiIndexV1Getdocumentcount() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("post_/api/index/v1/getdocumentcount");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        GetDocumentCountRequest req = GetDocumentCountRequest.builder()
                .datasource("<value>")
                .build();

        PostApiIndexV1GetdocumentcountResponse res = sdk.indexing().documents().count()
                .request(req)
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            GetDocumentCountResponse.builder()
            .build(),
            res.getDocumentCountResponse().get());
    }

    @Test
    public void testTroubleshooting_PostApiIndexV1Getusercount() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("post_/api/index/v1/getusercount");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        GetUserCountRequest req = GetUserCountRequest.builder()
                .datasource("<value>")
                .build();

        PostApiIndexV1GetusercountResponse res = sdk.indexing().people().count()
                .request(req)
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            GetUserCountResponse.builder()
            .build(),
            res.getUserCountResponse().get());
    }
}