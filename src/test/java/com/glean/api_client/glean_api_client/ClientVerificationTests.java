/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static org.junit.jupiter.api.Assertions.assertEquals;

import com.glean.api_client.glean_api_client.models.components.AuthToken;
import com.glean.api_client.glean_api_client.models.components.Badge;
import com.glean.api_client.glean_api_client.models.components.ChannelInviteInfo;
import com.glean.api_client.glean_api_client.models.components.Collection;
import com.glean.api_client.glean_api_client.models.components.CollectionItem;
import com.glean.api_client.glean_api_client.models.components.CollectionItemItemType;
import com.glean.api_client.glean_api_client.models.components.CustomDataValue;
import com.glean.api_client.glean_api_client.models.components.CustomFieldData;
import com.glean.api_client.glean_api_client.models.components.CustomFieldValue;
import com.glean.api_client.glean_api_client.models.components.CustomFieldValueStr;
import com.glean.api_client.glean_api_client.models.components.DatasourceProfile;
import com.glean.api_client.glean_api_client.models.components.Document;
import com.glean.api_client.glean_api_client.models.components.DocumentInteractions;
import com.glean.api_client.glean_api_client.models.components.DocumentMetadata;
import com.glean.api_client.glean_api_client.models.components.FacetFilter;
import com.glean.api_client.glean_api_client.models.components.FacetFilterSet;
import com.glean.api_client.glean_api_client.models.components.FacetFilterValue;
import com.glean.api_client.glean_api_client.models.components.IconConfig;
import com.glean.api_client.glean_api_client.models.components.IconType;
import com.glean.api_client.glean_api_client.models.components.InviteInfo;
import com.glean.api_client.glean_api_client.models.components.Person;
import com.glean.api_client.glean_api_client.models.components.PersonMetadata;
import com.glean.api_client.glean_api_client.models.components.PersonMetadataType;
import com.glean.api_client.glean_api_client.models.components.PinDocument;
import com.glean.api_client.glean_api_client.models.components.QuerySuggestion;
import com.glean.api_client.glean_api_client.models.components.QuerySuggestionList;
import com.glean.api_client.glean_api_client.models.components.Reaction;
import com.glean.api_client.glean_api_client.models.components.RelatedDocuments;
import com.glean.api_client.glean_api_client.models.components.RelationType;
import com.glean.api_client.glean_api_client.models.components.Reminder;
import com.glean.api_client.glean_api_client.models.components.ReminderRequest;
import com.glean.api_client.glean_api_client.models.components.SearchProviderInfo;
import com.glean.api_client.glean_api_client.models.components.SearchRequestInputDetails;
import com.glean.api_client.glean_api_client.models.components.SearchRequestOptions;
import com.glean.api_client.glean_api_client.models.components.SearchResult;
import com.glean.api_client.glean_api_client.models.components.SearchResultSnippet;
import com.glean.api_client.glean_api_client.models.components.Share;
import com.glean.api_client.glean_api_client.models.components.State;
import com.glean.api_client.glean_api_client.models.components.TextRange;
import com.glean.api_client.glean_api_client.models.components.UserRole;
import com.glean.api_client.glean_api_client.models.components.UserRoleSpecification;
import com.glean.api_client.glean_api_client.models.components.Verification;
import com.glean.api_client.glean_api_client.models.components.VerificationFeed;
import com.glean.api_client.glean_api_client.models.components.VerificationMetadata;
import com.glean.api_client.glean_api_client.models.components.VerifyRequest;
import com.glean.api_client.glean_api_client.models.operations.AddverificationreminderResponse;
import com.glean.api_client.glean_api_client.models.operations.ListverificationsResponse;
import com.glean.api_client.glean_api_client.models.operations.VerifyResponse;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Exception;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Test;

public class ClientVerificationTests {

    @Test
    public void testClientVerification_Addverificationreminder() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("addverificationreminder");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        ReminderRequest req = ReminderRequest.builder()
                .documentId("<id>")
                .build();

        AddverificationreminderResponse res = sdk.client().verification().addReminder()
                .request(req)
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            Verification.builder()
            .state(State.VERIFIED)
            .metadata(VerificationMetadata.builder()
                .lastVerifier(Person.builder()
                    .name("George Clooney")
                    .obfuscatedId("abc123")
                    .relatedDocuments(List.of(
                        RelatedDocuments.builder()
                            .querySuggestion(QuerySuggestion.builder()
                                .query("app:github type:pull author:mortimer")
                                .searchProviderInfo(SearchProviderInfo.builder()
                                    .name("Google")
                                    .searchLinkUrlTemplate("https://www.google.com/search?q={query}&hl=en")
                                    .build())
                                .label("Mortimer's PRs")
                                .datasource("github")
                                .requestOptions(SearchRequestOptions.builder()
                                    .facetBucketSize(310007L)
                                    .datasourceFilter("JIRA")
                                    .datasourcesFilter(List.of(
                                        "JIRA"))
                                    .queryOverridesFacetFilters(true)
                                    .facetFilters(List.of(
                                        FacetFilter.builder()
                                            .fieldName("type")
                                            .values(List.of(
                                                FacetFilterValue.builder()
                                                    .value("Spreadsheet")
                                                    .relationType(RelationType.EQUALS)
                                                    .build(),
                                                FacetFilterValue.builder()
                                                    .value("Presentation")
                                                    .relationType(RelationType.EQUALS)
                                                    .build()))
                                            .build()))
                                    .facetFilterSets(List.of(
                                        FacetFilterSet.builder()
                                            .filters(List.of(
                                                FacetFilter.builder()
                                                    .fieldName("type")
                                                    .values(List.of(
                                                        FacetFilterValue.builder()
                                                            .value("Spreadsheet")
                                                            .relationType(RelationType.EQUALS)
                                                            .build(),
                                                        FacetFilterValue.builder()
                                                            .value("Presentation")
                                                            .relationType(RelationType.EQUALS)
                                                            .build()))
                                                    .build()))
                                            .build()))
                                    .authTokens(List.of(
                                        AuthToken.builder()
                                            .accessToken("123abc")
                                            .datasource("gmail")
                                            .scope("email profile https://www.googleapis.com/auth/gmail.readonly")
                                            .tokenType("Bearer")
                                            .authUser("1")
                                            .build()))
                                    .build())
                                .ranges(List.of(
                                    TextRange.builder()
                                        .startIndex(381872L)
                                        .document(Document.builder()
                                            .metadata(DocumentMetadata.builder()
                                                .datasource("datasource")
                                                .objectType("Feature Request")
                                                .container("container")
                                                .parentId("JIRA_EN-1337")
                                                .mimeType("mimeType")
                                                .documentId("documentId")
                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .components(List.of(
                                                    "Backend",
                                                    "Networking"))
                                                .status("[\"Done\"]")
                                                .pins(List.of(
                                                    PinDocument.builder()
                                                        .documentId("<id>")
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .build(),
                                                    PinDocument.builder()
                                                        .documentId("<id>")
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .build()))
                                                .collections(List.of(
                                                    Collection.builder()
                                                        .name("<value>")
                                                        .description("ditch cruelly geez bah")
                                                        .id(922427L)
                                                        .addedRoles(List.of(
                                                            UserRoleSpecification.builder()
                                                                .role(UserRole.VIEWER)
                                                                .build()))
                                                        .removedRoles(List.of(
                                                            UserRoleSpecification.builder()
                                                                .role(UserRole.EDITOR)
                                                                .build(),
                                                            UserRoleSpecification.builder()
                                                                .role(UserRole.VIEWER)
                                                                .build(),
                                                            UserRoleSpecification.builder()
                                                                .role(UserRole.VERIFIER)
                                                                .build()))
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .items(List.of(
                                                            CollectionItem.builder()
                                                                .collectionId(744290L)
                                                                .itemType(CollectionItemItemType.COLLECTION)
                                                                .build(),
                                                            CollectionItem.builder()
                                                                .collectionId(857658L)
                                                                .itemType(CollectionItemItemType.COLLECTION)
                                                                .build()))
                                                        .roles(List.of(
                                                            UserRoleSpecification.builder()
                                                                .role(UserRole.OWNER)
                                                                .build(),
                                                            UserRoleSpecification.builder()
                                                                .role(UserRole.VERIFIER)
                                                                .build(),
                                                            UserRoleSpecification.builder()
                                                                .role(UserRole.OWNER)
                                                                .build()))
                                                        .build(),
                                                    Collection.builder()
                                                        .name("<value>")
                                                        .description("unfortunately brr brr whereas object if frantically randomize contrail silently")
                                                        .id(571806L)
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .build()))
                                                .interactions(DocumentInteractions.builder()
                                                    .reacts(List.of(
                                                        Reaction.builder()
                                                            .build(),
                                                        Reaction.builder()
                                                            .build(),
                                                        Reaction.builder()
                                                            .build()))
                                                    .shares(List.of(
                                                        Share.builder()
                                                            .numDaysAgo(991839L)
                                                            .build()))
                                                    .build())
                                                .customData(Map.ofEntries(
                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                        .build())))
                                                .build())
                                            .build())
                                        .build()))
                                .inputDetails(SearchRequestInputDetails.builder()
                                    .hasCopyPaste(true)
                                    .build())
                                .build())
                            .results(List.of(
                                SearchResult.builder()
                                    .url("https://example.com/foo/bar")
                                    .title("title")
                                    .nativeAppUrl("slack://foo/bar")
                                    .snippets(List.of(
                                        SearchResultSnippet.builder()
                                            .snippet("snippet")
                                            .mimeType("mimeType")
                                            .build()))
                                    .build()))
                            .build()))
                    .metadata(PersonMetadata.builder()
                        .type(PersonMetadataType.FULL_TIME)
                        .title("Actor")
                        .department("Movies")
                        .email("george@example.com")
                        .location("Hollywood, CA")
                        .phone("6505551234")
                        .photoUrl("https://example.com/george.jpg")
                        .startDate(LocalDate.parse("2000-01-23"))
                        .datasourceProfile(List.of(
                            DatasourceProfile.builder()
                                .datasource("github")
                                .handle("<value>")
                                .build()))
                        .querySuggestions(QuerySuggestionList.builder()
                            .suggestions(List.of(
                                QuerySuggestion.builder()
                                    .query("app:github type:pull author:mortimer")
                                    .label("Mortimer's PRs")
                                    .datasource("github")
                                    .build()))
                            .build())
                        .inviteInfo(InviteInfo.builder()
                            .invites(List.of(
                                ChannelInviteInfo.builder()
                                    .build(),
                                ChannelInviteInfo.builder()
                                    .build()))
                            .build())
                        .customFields(List.of(
                            CustomFieldData.builder()
                                .label("<value>")
                                .values(List.of(
                                    CustomFieldValue.of(CustomFieldValueStr.builder()
                                        .build()),
                                    CustomFieldValue.of(CustomFieldValueStr.builder()
                                        .build())))
                                .displayable(true)
                                .build(),
                            CustomFieldData.builder()
                                .label("<value>")
                                .values(List.of())
                                .displayable(true)
                                .build()))
                        .badges(List.of(
                            Badge.builder()
                                .key("deployment_name_new_hire")
                                .displayName("New hire")
                                .iconConfig(IconConfig.builder()
                                    .color("#343CED")
                                    .key("person_icon")
                                    .iconType(IconType.GLYPH)
                                    .name("user")
                                    .build())
                                .build()))
                        .build())
                    .build())
                .document(Document.builder()
                    .metadata(DocumentMetadata.builder()
                        .datasource("datasource")
                        .objectType("Feature Request")
                        .container("container")
                        .parentId("JIRA_EN-1337")
                        .mimeType("mimeType")
                        .documentId("documentId")
                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                        .author(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .owner(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .components(List.of(
                            "Backend",
                            "Networking"))
                        .status("[\"Done\"]")
                        .assignedTo(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .updatedBy(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .interactions(DocumentInteractions.builder()
                            .build())
                        .customData(Map.ofEntries(
                            Map.entry("someCustomField", CustomDataValue.builder()
                                .build())))
                        .contactPerson(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .build())
                    .build())
                .reminders(List.of(
                    Reminder.builder()
                        .assignee(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .remindAt(431849L)
                        .requestor(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .build()))
                .lastReminder(Reminder.builder()
                    .assignee(Person.builder()
                        .name("George Clooney")
                        .obfuscatedId("abc123")
                        .metadata(PersonMetadata.builder()
                            .type(PersonMetadataType.FULL_TIME)
                            .title("Actor")
                            .department("Movies")
                            .email("george@example.com")
                            .location("Hollywood, CA")
                            .phone("6505551234")
                            .photoUrl("https://example.com/george.jpg")
                            .startDate(LocalDate.parse("2000-01-23"))
                            .datasourceProfile(List.of(
                                DatasourceProfile.builder()
                                    .datasource("github")
                                    .handle("<value>")
                                    .build(),
                                DatasourceProfile.builder()
                                    .datasource("github")
                                    .handle("<value>")
                                    .build(),
                                DatasourceProfile.builder()
                                    .datasource("github")
                                    .handle("<value>")
                                    .build()))
                            .querySuggestions(QuerySuggestionList.builder()
                                .build())
                            .inviteInfo(InviteInfo.builder()
                                .build())
                            .badges(List.of(
                                Badge.builder()
                                    .key("deployment_name_new_hire")
                                    .displayName("New hire")
                                    .iconConfig(IconConfig.builder()
                                        .color("#343CED")
                                        .key("person_icon")
                                        .iconType(IconType.GLYPH)
                                        .name("user")
                                        .build())
                                    .build()))
                            .build())
                        .build())
                    .remindAt(121811L)
                    .requestor(Person.builder()
                        .name("George Clooney")
                        .obfuscatedId("abc123")
                        .metadata(PersonMetadata.builder()
                            .type(PersonMetadataType.FULL_TIME)
                            .title("Actor")
                            .department("Movies")
                            .email("george@example.com")
                            .location("Hollywood, CA")
                            .phone("6505551234")
                            .photoUrl("https://example.com/george.jpg")
                            .startDate(LocalDate.parse("2000-01-23"))
                            .datasourceProfile(List.of(
                                DatasourceProfile.builder()
                                    .datasource("github")
                                    .handle("<value>")
                                    .build(),
                                DatasourceProfile.builder()
                                    .datasource("github")
                                    .handle("<value>")
                                    .build(),
                                DatasourceProfile.builder()
                                    .datasource("github")
                                    .handle("<value>")
                                    .build()))
                            .querySuggestions(QuerySuggestionList.builder()
                                .build())
                            .inviteInfo(InviteInfo.builder()
                                .build())
                            .badges(List.of(
                                Badge.builder()
                                    .key("deployment_name_new_hire")
                                    .displayName("New hire")
                                    .iconConfig(IconConfig.builder()
                                        .color("#343CED")
                                        .key("person_icon")
                                        .iconType(IconType.GLYPH)
                                        .name("user")
                                        .build())
                                    .build()))
                            .build())
                        .build())
                    .build())
                .candidateVerifiers(List.of(
                    Person.builder()
                        .name("George Clooney")
                        .obfuscatedId("abc123")
                        .build()))
                .build())
            .build(),
            res.verification().get());
    }

    @Test
    public void testClientVerification_Listverifications() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("listverifications");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        ListverificationsResponse res = sdk.client().verification().list()
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            VerificationFeed.builder()
            .documents(List.of(
                Verification.builder()
                    .state(State.VERIFIED)
                    .metadata(VerificationMetadata.builder()
                        .lastVerifier(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .relatedDocuments(List.of(
                                RelatedDocuments.builder()
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .searchProviderInfo(SearchProviderInfo.builder()
                                            .name("Google")
                                            .searchLinkUrlTemplate("https://www.google.com/search?q={query}&hl=en")
                                            .build())
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .requestOptions(SearchRequestOptions.builder()
                                            .facetBucketSize(229716L)
                                            .datasourceFilter("JIRA")
                                            .datasourcesFilter(List.of(
                                                "JIRA"))
                                            .queryOverridesFacetFilters(true)
                                            .facetFilters(List.of(
                                                FacetFilter.builder()
                                                    .fieldName("type")
                                                    .values(List.of(
                                                        FacetFilterValue.builder()
                                                            .value("Spreadsheet")
                                                            .relationType(RelationType.EQUALS)
                                                            .build(),
                                                        FacetFilterValue.builder()
                                                            .value("Presentation")
                                                            .relationType(RelationType.EQUALS)
                                                            .build()))
                                                    .build()))
                                            .facetFilterSets(List.of(
                                                FacetFilterSet.builder()
                                                    .filters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .build()))
                                            .authTokens(List.of(
                                                AuthToken.builder()
                                                    .accessToken("123abc")
                                                    .datasource("gmail")
                                                    .scope("email profile https://www.googleapis.com/auth/gmail.readonly")
                                                    .tokenType("Bearer")
                                                    .authUser("1")
                                                    .build()))
                                            .build())
                                        .ranges(List.of(
                                            TextRange.builder()
                                                .startIndex(635532L)
                                                .document(Document.builder()
                                                    .metadata(DocumentMetadata.builder()
                                                        .datasource("datasource")
                                                        .objectType("Feature Request")
                                                        .container("container")
                                                        .parentId("JIRA_EN-1337")
                                                        .mimeType("mimeType")
                                                        .documentId("documentId")
                                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                        .components(List.of(
                                                            "Backend",
                                                            "Networking"))
                                                        .status("[\"Done\"]")
                                                        .pins(List.of(
                                                            PinDocument.builder()
                                                                .documentId("<id>")
                                                                .audienceFilters(List.of(
                                                                    FacetFilter.builder()
                                                                        .fieldName("type")
                                                                        .values(List.of(
                                                                            FacetFilterValue.builder()
                                                                                .value("Spreadsheet")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build(),
                                                                            FacetFilterValue.builder()
                                                                                .value("Presentation")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build()))
                                                                        .build()))
                                                                .build(),
                                                            PinDocument.builder()
                                                                .documentId("<id>")
                                                                .audienceFilters(List.of(
                                                                    FacetFilter.builder()
                                                                        .fieldName("type")
                                                                        .values(List.of(
                                                                            FacetFilterValue.builder()
                                                                                .value("Spreadsheet")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build(),
                                                                            FacetFilterValue.builder()
                                                                                .value("Presentation")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build()))
                                                                        .build()))
                                                                .build()))
                                                        .collections(List.of(
                                                            Collection.builder()
                                                                .name("<value>")
                                                                .description("avalanche jungle unto meanwhile beside tromp worth reluctantly")
                                                                .id(294083L)
                                                                .addedRoles(List.of(
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.EDITOR)
                                                                        .build()))
                                                                .removedRoles(List.of(
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.OWNER)
                                                                        .build(),
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.OWNER)
                                                                        .build()))
                                                                .audienceFilters(List.of(
                                                                    FacetFilter.builder()
                                                                        .fieldName("type")
                                                                        .values(List.of(
                                                                            FacetFilterValue.builder()
                                                                                .value("Spreadsheet")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build(),
                                                                            FacetFilterValue.builder()
                                                                                .value("Presentation")
                                                                                .relationType(RelationType.EQUALS)
                                                                                .build()))
                                                                        .build()))
                                                                .items(List.of(
                                                                    CollectionItem.builder()
                                                                        .collectionId(747562L)
                                                                        .itemType(CollectionItemItemType.TEXT)
                                                                        .build(),
                                                                    CollectionItem.builder()
                                                                        .collectionId(324206L)
                                                                        .itemType(CollectionItemItemType.DOCUMENT)
                                                                        .build(),
                                                                    CollectionItem.builder()
                                                                        .collectionId(678179L)
                                                                        .itemType(CollectionItemItemType.TEXT)
                                                                        .build()))
                                                                .roles(List.of(
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.VERIFIER)
                                                                        .build(),
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.EDITOR)
                                                                        .build(),
                                                                    UserRoleSpecification.builder()
                                                                        .role(UserRole.ANSWER_MODERATOR)
                                                                        .build()))
                                                                .build()))
                                                        .interactions(DocumentInteractions.builder()
                                                            .reacts(List.of(
                                                                Reaction.builder()
                                                                    .build(),
                                                                Reaction.builder()
                                                                    .build(),
                                                                Reaction.builder()
                                                                    .build()))
                                                            .shares(List.of(
                                                                Share.builder()
                                                                    .numDaysAgo(20615L)
                                                                    .build(),
                                                                Share.builder()
                                                                    .numDaysAgo(467775L)
                                                                    .build(),
                                                                Share.builder()
                                                                    .numDaysAgo(993677L)
                                                                    .build()))
                                                            .build())
                                                        .customData(Map.ofEntries(
                                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                                .build())))
                                                        .build())
                                                    .build())
                                                .build()))
                                        .inputDetails(SearchRequestInputDetails.builder()
                                            .hasCopyPaste(true)
                                            .build())
                                        .build())
                                    .results(List.of(
                                        SearchResult.builder()
                                            .url("https://example.com/foo/bar")
                                            .title("title")
                                            .nativeAppUrl("slack://foo/bar")
                                            .snippets(List.of(
                                                SearchResultSnippet.builder()
                                                    .snippet("snippet")
                                                    .mimeType("mimeType")
                                                    .build()))
                                            .build()))
                                    .build(),
                                RelatedDocuments.builder()
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .searchProviderInfo(SearchProviderInfo.builder()
                                            .name("Google")
                                            .searchLinkUrlTemplate("https://www.google.com/search?q={query}&hl=en")
                                            .build())
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .requestOptions(SearchRequestOptions.builder()
                                            .facetBucketSize(406555L)
                                            .datasourceFilter("JIRA")
                                            .datasourcesFilter(List.of(
                                                "JIRA"))
                                            .queryOverridesFacetFilters(true)
                                            .facetFilters(List.of(
                                                FacetFilter.builder()
                                                    .fieldName("type")
                                                    .values(List.of(
                                                        FacetFilterValue.builder()
                                                            .value("Spreadsheet")
                                                            .relationType(RelationType.EQUALS)
                                                            .build(),
                                                        FacetFilterValue.builder()
                                                            .value("Presentation")
                                                            .relationType(RelationType.EQUALS)
                                                            .build()))
                                                    .build()))
                                            .facetFilterSets(List.of(
                                                FacetFilterSet.builder()
                                                    .filters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .build(),
                                                FacetFilterSet.builder()
                                                    .filters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .build(),
                                                FacetFilterSet.builder()
                                                    .filters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .build()))
                                            .authTokens(List.of(
                                                AuthToken.builder()
                                                    .accessToken("123abc")
                                                    .datasource("gmail")
                                                    .scope("email profile https://www.googleapis.com/auth/gmail.readonly")
                                                    .tokenType("Bearer")
                                                    .authUser("1")
                                                    .build()))
                                            .build())
                                        .inputDetails(SearchRequestInputDetails.builder()
                                            .hasCopyPaste(true)
                                            .build())
                                        .build())
                                    .build(),
                                RelatedDocuments.builder()
                                    .querySuggestion(QuerySuggestion.builder()
                                        .query("app:github type:pull author:mortimer")
                                        .searchProviderInfo(SearchProviderInfo.builder()
                                            .name("Google")
                                            .searchLinkUrlTemplate("https://www.google.com/search?q={query}&hl=en")
                                            .build())
                                        .label("Mortimer's PRs")
                                        .datasource("github")
                                        .requestOptions(SearchRequestOptions.builder()
                                            .facetBucketSize(652326L)
                                            .datasourceFilter("JIRA")
                                            .datasourcesFilter(List.of(
                                                "JIRA"))
                                            .queryOverridesFacetFilters(true)
                                            .facetFilters(List.of(
                                                FacetFilter.builder()
                                                    .fieldName("type")
                                                    .values(List.of(
                                                        FacetFilterValue.builder()
                                                            .value("Spreadsheet")
                                                            .relationType(RelationType.EQUALS)
                                                            .build(),
                                                        FacetFilterValue.builder()
                                                            .value("Presentation")
                                                            .relationType(RelationType.EQUALS)
                                                            .build()))
                                                    .build()))
                                            .facetFilterSets(List.of(
                                                FacetFilterSet.builder()
                                                    .filters(List.of(
                                                        FacetFilter.builder()
                                                            .fieldName("type")
                                                            .values(List.of(
                                                                FacetFilterValue.builder()
                                                                    .value("Spreadsheet")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build(),
                                                                FacetFilterValue.builder()
                                                                    .value("Presentation")
                                                                    .relationType(RelationType.EQUALS)
                                                                    .build()))
                                                            .build()))
                                                    .build()))
                                            .authTokens(List.of(
                                                AuthToken.builder()
                                                    .accessToken("123abc")
                                                    .datasource("gmail")
                                                    .scope("email profile https://www.googleapis.com/auth/gmail.readonly")
                                                    .tokenType("Bearer")
                                                    .authUser("1")
                                                    .build()))
                                            .build())
                                        .inputDetails(SearchRequestInputDetails.builder()
                                            .hasCopyPaste(true)
                                            .build())
                                        .build())
                                    .build()))
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .suggestions(List.of(
                                        QuerySuggestion.builder()
                                            .query("app:github type:pull author:mortimer")
                                            .label("Mortimer's PRs")
                                            .datasource("github")
                                            .build()))
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .invites(List.of(
                                        ChannelInviteInfo.builder()
                                            .build(),
                                        ChannelInviteInfo.builder()
                                            .build()))
                                    .build())
                                .customFields(List.of(
                                    CustomFieldData.builder()
                                        .label("<value>")
                                        .values(List.of())
                                        .displayable(true)
                                        .build(),
                                    CustomFieldData.builder()
                                        .label("<value>")
                                        .values(List.of())
                                        .displayable(true)
                                        .build()))
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .document(Document.builder()
                            .metadata(DocumentMetadata.builder()
                                .datasource("datasource")
                                .objectType("Feature Request")
                                .container("container")
                                .parentId("JIRA_EN-1337")
                                .mimeType("mimeType")
                                .documentId("documentId")
                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                .author(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .owner(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .components(List.of(
                                    "Backend",
                                    "Networking"))
                                .status("[\"Done\"]")
                                .assignedTo(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .updatedBy(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .interactions(DocumentInteractions.builder()
                                    .build())
                                .customData(Map.ofEntries(
                                    Map.entry("someCustomField", CustomDataValue.builder()
                                        .build())))
                                .contactPerson(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .build())
                            .build())
                        .reminders(List.of(
                            Reminder.builder()
                                .assignee(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .remindAt(370293L)
                                .requestor(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .build(),
                            Reminder.builder()
                                .assignee(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .remindAt(900911L)
                                .requestor(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .build(),
                            Reminder.builder()
                                .assignee(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .remindAt(424586L)
                                .requestor(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .build()))
                        .lastReminder(Reminder.builder()
                            .assignee(Person.builder()
                                .name("George Clooney")
                                .obfuscatedId("abc123")
                                .metadata(PersonMetadata.builder()
                                    .type(PersonMetadataType.FULL_TIME)
                                    .title("Actor")
                                    .department("Movies")
                                    .email("george@example.com")
                                    .location("Hollywood, CA")
                                    .phone("6505551234")
                                    .photoUrl("https://example.com/george.jpg")
                                    .startDate(LocalDate.parse("2000-01-23"))
                                    .datasourceProfile(List.of(
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build()))
                                    .querySuggestions(QuerySuggestionList.builder()
                                        .build())
                                    .inviteInfo(InviteInfo.builder()
                                        .build())
                                    .badges(List.of(
                                        Badge.builder()
                                            .key("deployment_name_new_hire")
                                            .displayName("New hire")
                                            .iconConfig(IconConfig.builder()
                                                .color("#343CED")
                                                .key("person_icon")
                                                .iconType(IconType.GLYPH)
                                                .name("user")
                                                .build())
                                            .build()))
                                    .build())
                                .build())
                            .remindAt(221489L)
                            .requestor(Person.builder()
                                .name("George Clooney")
                                .obfuscatedId("abc123")
                                .metadata(PersonMetadata.builder()
                                    .type(PersonMetadataType.FULL_TIME)
                                    .title("Actor")
                                    .department("Movies")
                                    .email("george@example.com")
                                    .location("Hollywood, CA")
                                    .phone("6505551234")
                                    .photoUrl("https://example.com/george.jpg")
                                    .startDate(LocalDate.parse("2000-01-23"))
                                    .datasourceProfile(List.of(
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build()))
                                    .querySuggestions(QuerySuggestionList.builder()
                                        .build())
                                    .inviteInfo(InviteInfo.builder()
                                        .build())
                                    .badges(List.of(
                                        Badge.builder()
                                            .key("deployment_name_new_hire")
                                            .displayName("New hire")
                                            .iconConfig(IconConfig.builder()
                                                .color("#343CED")
                                                .key("person_icon")
                                                .iconType(IconType.GLYPH)
                                                .name("user")
                                                .build())
                                            .build()))
                                    .build())
                                .build())
                            .build())
                        .candidateVerifiers(List.of(
                            Person.builder()
                                .name("George Clooney")
                                .obfuscatedId("abc123")
                                .build()))
                        .build())
                    .build(),
                Verification.builder()
                    .state(State.UNVERIFIED)
                    .metadata(VerificationMetadata.builder()
                        .lastVerifier(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .document(Document.builder()
                            .metadata(DocumentMetadata.builder()
                                .datasource("datasource")
                                .objectType("Feature Request")
                                .container("container")
                                .parentId("JIRA_EN-1337")
                                .mimeType("mimeType")
                                .documentId("documentId")
                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                .author(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .owner(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .components(List.of(
                                    "Backend",
                                    "Networking"))
                                .status("[\"Done\"]")
                                .assignedTo(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .updatedBy(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .interactions(DocumentInteractions.builder()
                                    .build())
                                .customData(Map.ofEntries(
                                    Map.entry("someCustomField", CustomDataValue.builder()
                                        .build())))
                                .contactPerson(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .build())
                            .build())
                        .lastReminder(Reminder.builder()
                            .assignee(Person.builder()
                                .name("George Clooney")
                                .obfuscatedId("abc123")
                                .metadata(PersonMetadata.builder()
                                    .type(PersonMetadataType.FULL_TIME)
                                    .title("Actor")
                                    .department("Movies")
                                    .email("george@example.com")
                                    .location("Hollywood, CA")
                                    .phone("6505551234")
                                    .photoUrl("https://example.com/george.jpg")
                                    .startDate(LocalDate.parse("2000-01-23"))
                                    .datasourceProfile(List.of(
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build(),
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build(),
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build()))
                                    .querySuggestions(QuerySuggestionList.builder()
                                        .build())
                                    .inviteInfo(InviteInfo.builder()
                                        .build())
                                    .badges(List.of(
                                        Badge.builder()
                                            .key("deployment_name_new_hire")
                                            .displayName("New hire")
                                            .iconConfig(IconConfig.builder()
                                                .color("#343CED")
                                                .key("person_icon")
                                                .iconType(IconType.GLYPH)
                                                .name("user")
                                                .build())
                                            .build()))
                                    .build())
                                .build())
                            .remindAt(277523L)
                            .requestor(Person.builder()
                                .name("George Clooney")
                                .obfuscatedId("abc123")
                                .metadata(PersonMetadata.builder()
                                    .type(PersonMetadataType.FULL_TIME)
                                    .title("Actor")
                                    .department("Movies")
                                    .email("george@example.com")
                                    .location("Hollywood, CA")
                                    .phone("6505551234")
                                    .photoUrl("https://example.com/george.jpg")
                                    .startDate(LocalDate.parse("2000-01-23"))
                                    .datasourceProfile(List.of(
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build(),
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build(),
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build()))
                                    .querySuggestions(QuerySuggestionList.builder()
                                        .build())
                                    .inviteInfo(InviteInfo.builder()
                                        .build())
                                    .badges(List.of(
                                        Badge.builder()
                                            .key("deployment_name_new_hire")
                                            .displayName("New hire")
                                            .iconConfig(IconConfig.builder()
                                                .color("#343CED")
                                                .key("person_icon")
                                                .iconType(IconType.GLYPH)
                                                .name("user")
                                                .build())
                                            .build()))
                                    .build())
                                .build())
                            .build())
                        .build())
                    .build(),
                Verification.builder()
                    .state(State.VERIFIED)
                    .metadata(VerificationMetadata.builder()
                        .lastVerifier(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .document(Document.builder()
                            .metadata(DocumentMetadata.builder()
                                .datasource("datasource")
                                .objectType("Feature Request")
                                .container("container")
                                .parentId("JIRA_EN-1337")
                                .mimeType("mimeType")
                                .documentId("documentId")
                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                .author(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .owner(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .components(List.of(
                                    "Backend",
                                    "Networking"))
                                .status("[\"Done\"]")
                                .assignedTo(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .updatedBy(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .interactions(DocumentInteractions.builder()
                                    .build())
                                .customData(Map.ofEntries(
                                    Map.entry("someCustomField", CustomDataValue.builder()
                                        .build())))
                                .contactPerson(Person.builder()
                                    .name("George Clooney")
                                    .obfuscatedId("abc123")
                                    .metadata(PersonMetadata.builder()
                                        .type(PersonMetadataType.FULL_TIME)
                                        .title("Actor")
                                        .department("Movies")
                                        .email("george@example.com")
                                        .location("Hollywood, CA")
                                        .phone("6505551234")
                                        .photoUrl("https://example.com/george.jpg")
                                        .startDate(LocalDate.parse("2000-01-23"))
                                        .datasourceProfile(List.of(
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build(),
                                            DatasourceProfile.builder()
                                                .datasource("github")
                                                .handle("<value>")
                                                .build()))
                                        .querySuggestions(QuerySuggestionList.builder()
                                            .build())
                                        .inviteInfo(InviteInfo.builder()
                                            .build())
                                        .badges(List.of(
                                            Badge.builder()
                                                .key("deployment_name_new_hire")
                                                .displayName("New hire")
                                                .iconConfig(IconConfig.builder()
                                                    .color("#343CED")
                                                    .key("person_icon")
                                                    .iconType(IconType.GLYPH)
                                                    .name("user")
                                                    .build())
                                                .build()))
                                        .build())
                                    .build())
                                .build())
                            .build())
                        .lastReminder(Reminder.builder()
                            .assignee(Person.builder()
                                .name("George Clooney")
                                .obfuscatedId("abc123")
                                .metadata(PersonMetadata.builder()
                                    .type(PersonMetadataType.FULL_TIME)
                                    .title("Actor")
                                    .department("Movies")
                                    .email("george@example.com")
                                    .location("Hollywood, CA")
                                    .phone("6505551234")
                                    .photoUrl("https://example.com/george.jpg")
                                    .startDate(LocalDate.parse("2000-01-23"))
                                    .datasourceProfile(List.of(
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build(),
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build()))
                                    .querySuggestions(QuerySuggestionList.builder()
                                        .build())
                                    .inviteInfo(InviteInfo.builder()
                                        .build())
                                    .badges(List.of(
                                        Badge.builder()
                                            .key("deployment_name_new_hire")
                                            .displayName("New hire")
                                            .iconConfig(IconConfig.builder()
                                                .color("#343CED")
                                                .key("person_icon")
                                                .iconType(IconType.GLYPH)
                                                .name("user")
                                                .build())
                                            .build()))
                                    .build())
                                .build())
                            .remindAt(749833L)
                            .requestor(Person.builder()
                                .name("George Clooney")
                                .obfuscatedId("abc123")
                                .metadata(PersonMetadata.builder()
                                    .type(PersonMetadataType.FULL_TIME)
                                    .title("Actor")
                                    .department("Movies")
                                    .email("george@example.com")
                                    .location("Hollywood, CA")
                                    .phone("6505551234")
                                    .photoUrl("https://example.com/george.jpg")
                                    .startDate(LocalDate.parse("2000-01-23"))
                                    .datasourceProfile(List.of(
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build(),
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build(),
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build()))
                                    .querySuggestions(QuerySuggestionList.builder()
                                        .build())
                                    .inviteInfo(InviteInfo.builder()
                                        .build())
                                    .badges(List.of(
                                        Badge.builder()
                                            .key("deployment_name_new_hire")
                                            .displayName("New hire")
                                            .iconConfig(IconConfig.builder()
                                                .color("#343CED")
                                                .key("person_icon")
                                                .iconType(IconType.GLYPH)
                                                .name("user")
                                                .build())
                                            .build()))
                                    .build())
                                .build())
                            .build())
                        .build())
                    .build()))
            .build(),
            res.verificationFeed().get());
    }

    @Test
    public void testClientVerification_Verify() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("verify");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        VerifyRequest req = VerifyRequest.builder()
                .documentId("<id>")
                .build();

        VerifyResponse res = sdk.client().verification().verify()
                .request(req)
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            Verification.builder()
            .state(State.DEPRECATED)
            .metadata(VerificationMetadata.builder()
                .lastVerifier(Person.builder()
                    .name("George Clooney")
                    .obfuscatedId("abc123")
                    .relatedDocuments(List.of(
                        RelatedDocuments.builder()
                            .querySuggestion(QuerySuggestion.builder()
                                .query("app:github type:pull author:mortimer")
                                .searchProviderInfo(SearchProviderInfo.builder()
                                    .name("Google")
                                    .searchLinkUrlTemplate("https://www.google.com/search?q={query}&hl=en")
                                    .build())
                                .label("Mortimer's PRs")
                                .datasource("github")
                                .requestOptions(SearchRequestOptions.builder()
                                    .facetBucketSize(227138L)
                                    .datasourceFilter("JIRA")
                                    .datasourcesFilter(List.of(
                                        "JIRA"))
                                    .queryOverridesFacetFilters(true)
                                    .facetFilters(List.of(
                                        FacetFilter.builder()
                                            .fieldName("type")
                                            .values(List.of(
                                                FacetFilterValue.builder()
                                                    .value("Spreadsheet")
                                                    .relationType(RelationType.EQUALS)
                                                    .build(),
                                                FacetFilterValue.builder()
                                                    .value("Presentation")
                                                    .relationType(RelationType.EQUALS)
                                                    .build()))
                                            .build()))
                                    .facetFilterSets(List.of(
                                        FacetFilterSet.builder()
                                            .filters(List.of(
                                                FacetFilter.builder()
                                                    .fieldName("type")
                                                    .values(List.of(
                                                        FacetFilterValue.builder()
                                                            .value("Spreadsheet")
                                                            .relationType(RelationType.EQUALS)
                                                            .build(),
                                                        FacetFilterValue.builder()
                                                            .value("Presentation")
                                                            .relationType(RelationType.EQUALS)
                                                            .build()))
                                                    .build()))
                                            .build()))
                                    .authTokens(List.of(
                                        AuthToken.builder()
                                            .accessToken("123abc")
                                            .datasource("gmail")
                                            .scope("email profile https://www.googleapis.com/auth/gmail.readonly")
                                            .tokenType("Bearer")
                                            .authUser("1")
                                            .build()))
                                    .build())
                                .ranges(List.of(
                                    TextRange.builder()
                                        .startIndex(394054L)
                                        .document(Document.builder()
                                            .metadata(DocumentMetadata.builder()
                                                .datasource("datasource")
                                                .objectType("Feature Request")
                                                .container("container")
                                                .parentId("JIRA_EN-1337")
                                                .mimeType("mimeType")
                                                .documentId("documentId")
                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .components(List.of(
                                                    "Backend",
                                                    "Networking"))
                                                .status("[\"Done\"]")
                                                .pins(List.of(
                                                    PinDocument.builder()
                                                        .documentId("<id>")
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .build()))
                                                .collections(List.of(
                                                    Collection.builder()
                                                        .name("<value>")
                                                        .description("fiddle gee lightly these unique")
                                                        .id(248707L)
                                                        .addedRoles(List.of(
                                                            UserRoleSpecification.builder()
                                                                .role(UserRole.VIEWER)
                                                                .build()))
                                                        .removedRoles(List.of(
                                                            UserRoleSpecification.builder()
                                                                .role(UserRole.VIEWER)
                                                                .build()))
                                                        .audienceFilters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .items(List.of(
                                                            CollectionItem.builder()
                                                                .collectionId(159863L)
                                                                .itemType(CollectionItemItemType.DOCUMENT)
                                                                .build(),
                                                            CollectionItem.builder()
                                                                .collectionId(725143L)
                                                                .itemType(CollectionItemItemType.DOCUMENT)
                                                                .build()))
                                                        .roles(List.of(
                                                            UserRoleSpecification.builder()
                                                                .role(UserRole.OWNER)
                                                                .build(),
                                                            UserRoleSpecification.builder()
                                                                .role(UserRole.VERIFIER)
                                                                .build()))
                                                        .build()))
                                                .interactions(DocumentInteractions.builder()
                                                    .reacts(List.of(
                                                        Reaction.builder()
                                                            .build(),
                                                        Reaction.builder()
                                                            .build()))
                                                    .shares(List.of(
                                                        Share.builder()
                                                            .numDaysAgo(638745L)
                                                            .build(),
                                                        Share.builder()
                                                            .numDaysAgo(331260L)
                                                            .build(),
                                                        Share.builder()
                                                            .numDaysAgo(759941L)
                                                            .build()))
                                                    .build())
                                                .customData(Map.ofEntries(
                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                        .build())))
                                                .build())
                                            .build())
                                        .build(),
                                    TextRange.builder()
                                        .startIndex(344155L)
                                        .document(Document.builder()
                                            .metadata(DocumentMetadata.builder()
                                                .datasource("datasource")
                                                .objectType("Feature Request")
                                                .container("container")
                                                .parentId("JIRA_EN-1337")
                                                .mimeType("mimeType")
                                                .documentId("documentId")
                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .components(List.of(
                                                    "Backend",
                                                    "Networking"))
                                                .status("[\"Done\"]")
                                                .interactions(DocumentInteractions.builder()
                                                    .build())
                                                .customData(Map.ofEntries(
                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                        .build())))
                                                .build())
                                            .build())
                                        .build(),
                                    TextRange.builder()
                                        .startIndex(851433L)
                                        .document(Document.builder()
                                            .metadata(DocumentMetadata.builder()
                                                .datasource("datasource")
                                                .objectType("Feature Request")
                                                .container("container")
                                                .parentId("JIRA_EN-1337")
                                                .mimeType("mimeType")
                                                .documentId("documentId")
                                                .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                .components(List.of(
                                                    "Backend",
                                                    "Networking"))
                                                .status("[\"Done\"]")
                                                .interactions(DocumentInteractions.builder()
                                                    .build())
                                                .customData(Map.ofEntries(
                                                    Map.entry("someCustomField", CustomDataValue.builder()
                                                        .build())))
                                                .build())
                                            .build())
                                        .build()))
                                .inputDetails(SearchRequestInputDetails.builder()
                                    .hasCopyPaste(true)
                                    .build())
                                .build())
                            .results(List.of(
                                SearchResult.builder()
                                    .url("https://example.com/foo/bar")
                                    .title("title")
                                    .nativeAppUrl("slack://foo/bar")
                                    .snippets(List.of(
                                        SearchResultSnippet.builder()
                                            .snippet("snippet")
                                            .mimeType("mimeType")
                                            .build()))
                                    .build()))
                            .build()))
                    .metadata(PersonMetadata.builder()
                        .type(PersonMetadataType.FULL_TIME)
                        .title("Actor")
                        .department("Movies")
                        .email("george@example.com")
                        .location("Hollywood, CA")
                        .phone("6505551234")
                        .photoUrl("https://example.com/george.jpg")
                        .startDate(LocalDate.parse("2000-01-23"))
                        .datasourceProfile(List.of(
                            DatasourceProfile.builder()
                                .datasource("github")
                                .handle("<value>")
                                .build()))
                        .querySuggestions(QuerySuggestionList.builder()
                            .suggestions(List.of(
                                QuerySuggestion.builder()
                                    .query("app:github type:pull author:mortimer")
                                    .label("Mortimer's PRs")
                                    .datasource("github")
                                    .build()))
                            .build())
                        .inviteInfo(InviteInfo.builder()
                            .invites(List.of(
                                ChannelInviteInfo.builder()
                                    .build(),
                                ChannelInviteInfo.builder()
                                    .build()))
                            .build())
                        .customFields(List.of(
                            CustomFieldData.builder()
                                .label("<value>")
                                .values(List.of())
                                .displayable(true)
                                .build(),
                            CustomFieldData.builder()
                                .label("<value>")
                                .values(List.of())
                                .displayable(true)
                                .build(),
                            CustomFieldData.builder()
                                .label("<value>")
                                .values(List.of())
                                .displayable(true)
                                .build()))
                        .badges(List.of(
                            Badge.builder()
                                .key("deployment_name_new_hire")
                                .displayName("New hire")
                                .iconConfig(IconConfig.builder()
                                    .color("#343CED")
                                    .key("person_icon")
                                    .iconType(IconType.GLYPH)
                                    .name("user")
                                    .build())
                                .build()))
                        .build())
                    .build())
                .document(Document.builder()
                    .metadata(DocumentMetadata.builder()
                        .datasource("datasource")
                        .objectType("Feature Request")
                        .container("container")
                        .parentId("JIRA_EN-1337")
                        .mimeType("mimeType")
                        .documentId("documentId")
                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                        .author(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .owner(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .components(List.of(
                            "Backend",
                            "Networking"))
                        .status("[\"Done\"]")
                        .assignedTo(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .updatedBy(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .interactions(DocumentInteractions.builder()
                            .build())
                        .customData(Map.ofEntries(
                            Map.entry("someCustomField", CustomDataValue.builder()
                                .build())))
                        .contactPerson(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .build())
                    .build())
                .reminders(List.of(
                    Reminder.builder()
                        .assignee(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .remindAt(732097L)
                        .requestor(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .build(),
                    Reminder.builder()
                        .assignee(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .remindAt(510781L)
                        .requestor(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build(),
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .build(),
                    Reminder.builder()
                        .assignee(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .remindAt(875373L)
                        .requestor(Person.builder()
                            .name("George Clooney")
                            .obfuscatedId("abc123")
                            .metadata(PersonMetadata.builder()
                                .type(PersonMetadataType.FULL_TIME)
                                .title("Actor")
                                .department("Movies")
                                .email("george@example.com")
                                .location("Hollywood, CA")
                                .phone("6505551234")
                                .photoUrl("https://example.com/george.jpg")
                                .startDate(LocalDate.parse("2000-01-23"))
                                .datasourceProfile(List.of(
                                    DatasourceProfile.builder()
                                        .datasource("github")
                                        .handle("<value>")
                                        .build()))
                                .querySuggestions(QuerySuggestionList.builder()
                                    .build())
                                .inviteInfo(InviteInfo.builder()
                                    .build())
                                .badges(List.of(
                                    Badge.builder()
                                        .key("deployment_name_new_hire")
                                        .displayName("New hire")
                                        .iconConfig(IconConfig.builder()
                                            .color("#343CED")
                                            .key("person_icon")
                                            .iconType(IconType.GLYPH)
                                            .name("user")
                                            .build())
                                        .build()))
                                .build())
                            .build())
                        .build()))
                .lastReminder(Reminder.builder()
                    .assignee(Person.builder()
                        .name("George Clooney")
                        .obfuscatedId("abc123")
                        .metadata(PersonMetadata.builder()
                            .type(PersonMetadataType.FULL_TIME)
                            .title("Actor")
                            .department("Movies")
                            .email("george@example.com")
                            .location("Hollywood, CA")
                            .phone("6505551234")
                            .photoUrl("https://example.com/george.jpg")
                            .startDate(LocalDate.parse("2000-01-23"))
                            .datasourceProfile(List.of(
                                DatasourceProfile.builder()
                                    .datasource("github")
                                    .handle("<value>")
                                    .build(),
                                DatasourceProfile.builder()
                                    .datasource("github")
                                    .handle("<value>")
                                    .build()))
                            .querySuggestions(QuerySuggestionList.builder()
                                .build())
                            .inviteInfo(InviteInfo.builder()
                                .build())
                            .badges(List.of(
                                Badge.builder()
                                    .key("deployment_name_new_hire")
                                    .displayName("New hire")
                                    .iconConfig(IconConfig.builder()
                                        .color("#343CED")
                                        .key("person_icon")
                                        .iconType(IconType.GLYPH)
                                        .name("user")
                                        .build())
                                    .build()))
                            .build())
                        .build())
                    .remindAt(740498L)
                    .requestor(Person.builder()
                        .name("George Clooney")
                        .obfuscatedId("abc123")
                        .metadata(PersonMetadata.builder()
                            .type(PersonMetadataType.FULL_TIME)
                            .title("Actor")
                            .department("Movies")
                            .email("george@example.com")
                            .location("Hollywood, CA")
                            .phone("6505551234")
                            .photoUrl("https://example.com/george.jpg")
                            .startDate(LocalDate.parse("2000-01-23"))
                            .datasourceProfile(List.of(
                                DatasourceProfile.builder()
                                    .datasource("github")
                                    .handle("<value>")
                                    .build()))
                            .querySuggestions(QuerySuggestionList.builder()
                                .build())
                            .inviteInfo(InviteInfo.builder()
                                .build())
                            .badges(List.of(
                                Badge.builder()
                                    .key("deployment_name_new_hire")
                                    .displayName("New hire")
                                    .iconConfig(IconConfig.builder()
                                        .color("#343CED")
                                        .key("person_icon")
                                        .iconType(IconType.GLYPH)
                                        .name("user")
                                        .build())
                                    .build()))
                            .build())
                        .build())
                    .build())
                .candidateVerifiers(List.of(
                    Person.builder()
                        .name("George Clooney")
                        .obfuscatedId("abc123")
                        .build()))
                .build())
            .build(),
            res.verification().get());
    }
}