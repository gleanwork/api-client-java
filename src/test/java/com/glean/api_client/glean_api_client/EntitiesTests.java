/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static org.junit.jupiter.api.Assertions.assertEquals;

import com.glean.api_client.glean_api_client.models.components.AuthToken;
import com.glean.api_client.glean_api_client.models.components.Badge;
import com.glean.api_client.glean_api_client.models.components.ChannelInviteInfo;
import com.glean.api_client.glean_api_client.models.components.Collection;
import com.glean.api_client.glean_api_client.models.components.CollectionItem;
import com.glean.api_client.glean_api_client.models.components.CollectionItemItemType;
import com.glean.api_client.glean_api_client.models.components.CustomDataValue;
import com.glean.api_client.glean_api_client.models.components.CustomEntity;
import com.glean.api_client.glean_api_client.models.components.CustomFieldData;
import com.glean.api_client.glean_api_client.models.components.CustomFieldValue;
import com.glean.api_client.glean_api_client.models.components.CustomFieldValueStr;
import com.glean.api_client.glean_api_client.models.components.DatasourceProfile;
import com.glean.api_client.glean_api_client.models.components.Document;
import com.glean.api_client.glean_api_client.models.components.DocumentInteractions;
import com.glean.api_client.glean_api_client.models.components.DocumentMetadata;
import com.glean.api_client.glean_api_client.models.components.FacetBucket;
import com.glean.api_client.glean_api_client.models.components.FacetFilter;
import com.glean.api_client.glean_api_client.models.components.FacetFilterSet;
import com.glean.api_client.glean_api_client.models.components.FacetFilterValue;
import com.glean.api_client.glean_api_client.models.components.FacetResult;
import com.glean.api_client.glean_api_client.models.components.FacetValue;
import com.glean.api_client.glean_api_client.models.components.IconConfig;
import com.glean.api_client.glean_api_client.models.components.IconType;
import com.glean.api_client.glean_api_client.models.components.InviteInfo;
import com.glean.api_client.glean_api_client.models.components.ListEntitiesRequest;
import com.glean.api_client.glean_api_client.models.components.ListEntitiesResponse;
import com.glean.api_client.glean_api_client.models.components.PeopleRequest;
import com.glean.api_client.glean_api_client.models.components.Person;
import com.glean.api_client.glean_api_client.models.components.PersonMetadata;
import com.glean.api_client.glean_api_client.models.components.PersonMetadataType;
import com.glean.api_client.glean_api_client.models.components.PersonToTeamRelationship;
import com.glean.api_client.glean_api_client.models.components.PersonToTeamRelationshipRelationship;
import com.glean.api_client.glean_api_client.models.components.PinDocument;
import com.glean.api_client.glean_api_client.models.components.QuerySuggestion;
import com.glean.api_client.glean_api_client.models.components.QuerySuggestionList;
import com.glean.api_client.glean_api_client.models.components.Reaction;
import com.glean.api_client.glean_api_client.models.components.RelatedDocuments;
import com.glean.api_client.glean_api_client.models.components.RelationType;
import com.glean.api_client.glean_api_client.models.components.Reminder;
import com.glean.api_client.glean_api_client.models.components.SearchProviderInfo;
import com.glean.api_client.glean_api_client.models.components.SearchRequestInputDetails;
import com.glean.api_client.glean_api_client.models.components.SearchRequestOptions;
import com.glean.api_client.glean_api_client.models.components.SearchResult;
import com.glean.api_client.glean_api_client.models.components.SearchResultSnippet;
import com.glean.api_client.glean_api_client.models.components.Share;
import com.glean.api_client.glean_api_client.models.components.State;
import com.glean.api_client.glean_api_client.models.components.Team;
import com.glean.api_client.glean_api_client.models.components.TeamStatus;
import com.glean.api_client.glean_api_client.models.components.TextRange;
import com.glean.api_client.glean_api_client.models.components.UserRole;
import com.glean.api_client.glean_api_client.models.components.UserRoleSpecification;
import com.glean.api_client.glean_api_client.models.components.Verification;
import com.glean.api_client.glean_api_client.models.components.VerificationMetadata;
import com.glean.api_client.glean_api_client.models.operations.ListentitiesResponse;
import com.glean.api_client.glean_api_client.models.operations.PeopleResponse;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Exception;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Assumptions;
import org.junit.jupiter.api.Test;

public class EntitiesTests {

    @Test
    public void testEntities_Listentities() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("listentities");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        ListEntitiesRequest req = ListEntitiesRequest.builder()
                .filter(List.of(
                    FacetFilter.builder()
                        .fieldName("type")
                        .values(List.of(
                            FacetFilterValue.builder()
                                .value("Spreadsheet")
                                .relationType(RelationType.EQUALS)
                                .build(),
                            FacetFilterValue.builder()
                                .value("Presentation")
                                .relationType(RelationType.EQUALS)
                                .build()))
                        .build()))
                .pageSize(100L)
                .build();

        ListentitiesResponse res = sdk.client().entities().list()
                .request(req)
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            ListEntitiesResponse.builder()
            .results(List.of(
                Person.builder()
                    .name("George Clooney")
                    .obfuscatedId("abc123")
                    .build()))
            .teamResults(List.of(
                Team.builder()
                    .id("<id>")
                    .name("<value>")
                    .members(List.of(
                        PersonToTeamRelationship.builder()
                            .person(Person.builder()
                                .name("George Clooney")
                                .obfuscatedId("abc123")
                                .relatedDocuments(List.of(
                                    RelatedDocuments.builder()
                                        .querySuggestion(QuerySuggestion.builder()
                                            .query("app:github type:pull author:mortimer")
                                            .searchProviderInfo(SearchProviderInfo.builder()
                                                .name("Google")
                                                .searchLinkUrlTemplate("https://www.google.com/search?q={query}&hl=en")
                                                .build())
                                            .label("Mortimer's PRs")
                                            .datasource("github")
                                            .requestOptions(SearchRequestOptions.builder()
                                                .facetBucketSize(229716L)
                                                .datasourceFilter("JIRA")
                                                .datasourcesFilter(List.of(
                                                    "JIRA"))
                                                .queryOverridesFacetFilters(true)
                                                .facetFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .facetFilterSets(List.of(
                                                    FacetFilterSet.builder()
                                                        .filters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .build()))
                                                .authTokens(List.of(
                                                    AuthToken.builder()
                                                        .accessToken("123abc")
                                                        .datasource("gmail")
                                                        .scope("email profile https://www.googleapis.com/auth/gmail.readonly")
                                                        .tokenType("Bearer")
                                                        .authUser("1")
                                                        .build()))
                                                .build())
                                            .ranges(List.of(
                                                TextRange.builder()
                                                    .startIndex(635532L)
                                                    .document(Document.builder()
                                                        .metadata(DocumentMetadata.builder()
                                                            .datasource("datasource")
                                                            .objectType("Feature Request")
                                                            .container("container")
                                                            .parentId("JIRA_EN-1337")
                                                            .mimeType("mimeType")
                                                            .documentId("documentId")
                                                            .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                                            .components(List.of(
                                                                "Backend",
                                                                "Networking"))
                                                            .status("[\"Done\"]")
                                                            .pins(List.of(
                                                                PinDocument.builder()
                                                                    .documentId("<id>")
                                                                    .audienceFilters(List.of(
                                                                        FacetFilter.builder()
                                                                            .fieldName("type")
                                                                            .values(List.of(
                                                                                FacetFilterValue.builder()
                                                                                    .value("Spreadsheet")
                                                                                    .relationType(RelationType.EQUALS)
                                                                                    .build(),
                                                                                FacetFilterValue.builder()
                                                                                    .value("Presentation")
                                                                                    .relationType(RelationType.EQUALS)
                                                                                    .build()))
                                                                            .build()))
                                                                    .build(),
                                                                PinDocument.builder()
                                                                    .documentId("<id>")
                                                                    .audienceFilters(List.of(
                                                                        FacetFilter.builder()
                                                                            .fieldName("type")
                                                                            .values(List.of(
                                                                                FacetFilterValue.builder()
                                                                                    .value("Spreadsheet")
                                                                                    .relationType(RelationType.EQUALS)
                                                                                    .build(),
                                                                                FacetFilterValue.builder()
                                                                                    .value("Presentation")
                                                                                    .relationType(RelationType.EQUALS)
                                                                                    .build()))
                                                                            .build()))
                                                                    .build()))
                                                            .collections(List.of(
                                                                Collection.builder()
                                                                    .name("<value>")
                                                                    .description("avalanche jungle unto meanwhile beside tromp worth reluctantly")
                                                                    .id(294083L)
                                                                    .addedRoles(List.of(
                                                                        UserRoleSpecification.builder()
                                                                            .role(UserRole.EDITOR)
                                                                            .build()))
                                                                    .removedRoles(List.of(
                                                                        UserRoleSpecification.builder()
                                                                            .role(UserRole.OWNER)
                                                                            .build(),
                                                                        UserRoleSpecification.builder()
                                                                            .role(UserRole.OWNER)
                                                                            .build()))
                                                                    .audienceFilters(List.of(
                                                                        FacetFilter.builder()
                                                                            .fieldName("type")
                                                                            .values(List.of(
                                                                                FacetFilterValue.builder()
                                                                                    .value("Spreadsheet")
                                                                                    .relationType(RelationType.EQUALS)
                                                                                    .build(),
                                                                                FacetFilterValue.builder()
                                                                                    .value("Presentation")
                                                                                    .relationType(RelationType.EQUALS)
                                                                                    .build()))
                                                                            .build()))
                                                                    .items(List.of(
                                                                        CollectionItem.builder()
                                                                            .collectionId(747562L)
                                                                            .itemType(CollectionItemItemType.TEXT)
                                                                            .build(),
                                                                        CollectionItem.builder()
                                                                            .collectionId(324206L)
                                                                            .itemType(CollectionItemItemType.DOCUMENT)
                                                                            .build(),
                                                                        CollectionItem.builder()
                                                                            .collectionId(678179L)
                                                                            .itemType(CollectionItemItemType.TEXT)
                                                                            .build()))
                                                                    .roles(List.of(
                                                                        UserRoleSpecification.builder()
                                                                            .role(UserRole.VERIFIER)
                                                                            .build(),
                                                                        UserRoleSpecification.builder()
                                                                            .role(UserRole.EDITOR)
                                                                            .build(),
                                                                        UserRoleSpecification.builder()
                                                                            .role(UserRole.ANSWER_MODERATOR)
                                                                            .build()))
                                                                    .build()))
                                                            .interactions(DocumentInteractions.builder()
                                                                .reacts(List.of(
                                                                    Reaction.builder()
                                                                        .build(),
                                                                    Reaction.builder()
                                                                        .build(),
                                                                    Reaction.builder()
                                                                        .build()))
                                                                .shares(List.of(
                                                                    Share.builder()
                                                                        .numDaysAgo(20615L)
                                                                        .build(),
                                                                    Share.builder()
                                                                        .numDaysAgo(467775L)
                                                                        .build(),
                                                                    Share.builder()
                                                                        .numDaysAgo(993677L)
                                                                        .build()))
                                                                .build())
                                                            .verification(Verification.builder()
                                                                .state(State.DEPRECATED)
                                                                .metadata(VerificationMetadata.builder()
                                                                    .reminders(List.of(
                                                                        Reminder.builder()
                                                                            .assignee(Person.builder()
                                                                                .name("George Clooney")
                                                                                .obfuscatedId("abc123")
                                                                                .build())
                                                                            .remindAt(406555L)
                                                                            .build(),
                                                                        Reminder.builder()
                                                                            .assignee(Person.builder()
                                                                                .name("George Clooney")
                                                                                .obfuscatedId("abc123")
                                                                                .build())
                                                                            .remindAt(29267L)
                                                                            .build(),
                                                                        Reminder.builder()
                                                                            .assignee(Person.builder()
                                                                                .name("George Clooney")
                                                                                .obfuscatedId("abc123")
                                                                                .build())
                                                                            .remindAt(652326L)
                                                                            .build()))
                                                                    .lastReminder(Reminder.builder()
                                                                        .assignee(Person.builder()
                                                                            .name("George Clooney")
                                                                            .obfuscatedId("abc123")
                                                                            .build())
                                                                        .remindAt(688784L)
                                                                        .build())
                                                                    .build())
                                                                .build())
                                                            .customData(Map.ofEntries(
                                                                Map.entry("someCustomField", CustomDataValue.builder()
                                                                    .build())))
                                                            .build())
                                                        .build())
                                                    .build()))
                                            .inputDetails(SearchRequestInputDetails.builder()
                                                .hasCopyPaste(true)
                                                .build())
                                            .build())
                                        .results(List.of(
                                            SearchResult.builder()
                                                .url("https://example.com/foo/bar")
                                                .title("title")
                                                .nativeAppUrl("slack://foo/bar")
                                                .snippets(List.of(
                                                    SearchResultSnippet.builder()
                                                        .snippet("snippet")
                                                        .mimeType("mimeType")
                                                        .build()))
                                                .build()))
                                        .build(),
                                    RelatedDocuments.builder()
                                        .querySuggestion(QuerySuggestion.builder()
                                            .query("app:github type:pull author:mortimer")
                                            .searchProviderInfo(SearchProviderInfo.builder()
                                                .name("Google")
                                                .searchLinkUrlTemplate("https://www.google.com/search?q={query}&hl=en")
                                                .build())
                                            .label("Mortimer's PRs")
                                            .datasource("github")
                                            .requestOptions(SearchRequestOptions.builder()
                                                .facetBucketSize(41398L)
                                                .datasourceFilter("JIRA")
                                                .datasourcesFilter(List.of(
                                                    "JIRA"))
                                                .queryOverridesFacetFilters(true)
                                                .facetFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .facetFilterSets(List.of(
                                                    FacetFilterSet.builder()
                                                        .filters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .build(),
                                                    FacetFilterSet.builder()
                                                        .filters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .build()))
                                                .authTokens(List.of(
                                                    AuthToken.builder()
                                                        .accessToken("123abc")
                                                        .datasource("gmail")
                                                        .scope("email profile https://www.googleapis.com/auth/gmail.readonly")
                                                        .tokenType("Bearer")
                                                        .authUser("1")
                                                        .build()))
                                                .build())
                                            .inputDetails(SearchRequestInputDetails.builder()
                                                .hasCopyPaste(true)
                                                .build())
                                            .build())
                                        .build(),
                                    RelatedDocuments.builder()
                                        .querySuggestion(QuerySuggestion.builder()
                                            .query("app:github type:pull author:mortimer")
                                            .searchProviderInfo(SearchProviderInfo.builder()
                                                .name("Google")
                                                .searchLinkUrlTemplate("https://www.google.com/search?q={query}&hl=en")
                                                .build())
                                            .label("Mortimer's PRs")
                                            .datasource("github")
                                            .requestOptions(SearchRequestOptions.builder()
                                                .facetBucketSize(329360L)
                                                .datasourceFilter("JIRA")
                                                .datasourcesFilter(List.of(
                                                    "JIRA"))
                                                .queryOverridesFacetFilters(true)
                                                .facetFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .facetFilterSets(List.of(
                                                    FacetFilterSet.builder()
                                                        .filters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .build(),
                                                    FacetFilterSet.builder()
                                                        .filters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .build(),
                                                    FacetFilterSet.builder()
                                                        .filters(List.of(
                                                            FacetFilter.builder()
                                                                .fieldName("type")
                                                                .values(List.of(
                                                                    FacetFilterValue.builder()
                                                                        .value("Spreadsheet")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build(),
                                                                    FacetFilterValue.builder()
                                                                        .value("Presentation")
                                                                        .relationType(RelationType.EQUALS)
                                                                        .build()))
                                                                .build()))
                                                        .build()))
                                                .authTokens(List.of(
                                                    AuthToken.builder()
                                                        .accessToken("123abc")
                                                        .datasource("gmail")
                                                        .scope("email profile https://www.googleapis.com/auth/gmail.readonly")
                                                        .tokenType("Bearer")
                                                        .authUser("1")
                                                        .build()))
                                                .build())
                                            .inputDetails(SearchRequestInputDetails.builder()
                                                .hasCopyPaste(true)
                                                .build())
                                            .build())
                                        .build()))
                                .metadata(PersonMetadata.builder()
                                    .type(PersonMetadataType.FULL_TIME)
                                    .title("Actor")
                                    .department("Movies")
                                    .email("george@example.com")
                                    .location("Hollywood, CA")
                                    .phone("6505551234")
                                    .photoUrl("https://example.com/george.jpg")
                                    .startDate(LocalDate.parse("2000-01-23"))
                                    .datasourceProfile(List.of(
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build(),
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build()))
                                    .querySuggestions(QuerySuggestionList.builder()
                                        .suggestions(List.of(
                                            QuerySuggestion.builder()
                                                .query("app:github type:pull author:mortimer")
                                                .label("Mortimer's PRs")
                                                .datasource("github")
                                                .build()))
                                        .build())
                                    .inviteInfo(InviteInfo.builder()
                                        .invites(List.of(
                                            ChannelInviteInfo.builder()
                                                .build()))
                                        .build())
                                    .customFields(List.of(
                                        CustomFieldData.builder()
                                            .label("<value>")
                                            .values(List.of(
                                                CustomFieldValue.of(CustomFieldValueStr.builder()
                                                    .build()),
                                                CustomFieldValue.of(CustomFieldValueStr.builder()
                                                    .build()),
                                                CustomFieldValue.of(CustomFieldValueStr.builder()
                                                    .build())))
                                            .displayable(true)
                                            .build()))
                                    .badges(List.of(
                                        Badge.builder()
                                            .key("deployment_name_new_hire")
                                            .displayName("New hire")
                                            .iconConfig(IconConfig.builder()
                                                .color("#343CED")
                                                .key("person_icon")
                                                .iconType(IconType.GLYPH)
                                                .name("user")
                                                .build())
                                            .build()))
                                    .build())
                                .build())
                            .relationship(PersonToTeamRelationshipRelationship.MEMBER)
                            .build(),
                        PersonToTeamRelationship.builder()
                            .person(Person.builder()
                                .name("George Clooney")
                                .obfuscatedId("abc123")
                                .metadata(PersonMetadata.builder()
                                    .type(PersonMetadataType.FULL_TIME)
                                    .title("Actor")
                                    .department("Movies")
                                    .email("george@example.com")
                                    .location("Hollywood, CA")
                                    .phone("6505551234")
                                    .photoUrl("https://example.com/george.jpg")
                                    .startDate(LocalDate.parse("2000-01-23"))
                                    .datasourceProfile(List.of(
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build(),
                                        DatasourceProfile.builder()
                                            .datasource("github")
                                            .handle("<value>")
                                            .build()))
                                    .querySuggestions(QuerySuggestionList.builder()
                                        .build())
                                    .inviteInfo(InviteInfo.builder()
                                        .build())
                                    .badges(List.of(
                                        Badge.builder()
                                            .key("deployment_name_new_hire")
                                            .displayName("New hire")
                                            .iconConfig(IconConfig.builder()
                                                .color("#343CED")
                                                .key("person_icon")
                                                .iconType(IconType.GLYPH)
                                                .name("user")
                                                .build())
                                            .build()))
                                    .build())
                                .build())
                            .relationship(PersonToTeamRelationshipRelationship.MEMBER)
                            .build()))
                    .datasourceProfiles(List.of(
                        DatasourceProfile.builder()
                            .datasource("github")
                            .handle("<value>")
                            .build()))
                    .status(TeamStatus.PROCESSED)
                    .canBeDeleted(true)
                    .build(),
                Team.builder()
                    .id("<id>")
                    .name("<value>")
                    .datasourceProfiles(List.of(
                        DatasourceProfile.builder()
                            .datasource("github")
                            .handle("<value>")
                            .build(),
                        DatasourceProfile.builder()
                            .datasource("github")
                            .handle("<value>")
                            .build(),
                        DatasourceProfile.builder()
                            .datasource("github")
                            .handle("<value>")
                            .build()))
                    .status(TeamStatus.PROCESSED)
                    .canBeDeleted(true)
                    .build(),
                Team.builder()
                    .id("<id>")
                    .name("<value>")
                    .datasourceProfiles(List.of(
                        DatasourceProfile.builder()
                            .datasource("github")
                            .handle("<value>")
                            .build()))
                    .status(TeamStatus.PROCESSED)
                    .canBeDeleted(true)
                    .build()))
            .customEntityResults(List.of(
                CustomEntity.builder()
                    .build(),
                CustomEntity.builder()
                    .build()))
            .facetResults(List.of(
                FacetResult.builder()
                    .sourceName("container_name")
                    .operatorName("SelectMultiple")
                    .buckets(List.of(
                        FacetBucket.builder()
                            .count(1L)
                            .datasource("jira")
                            .percentage(5L)
                            .value(FacetValue.builder()
                                .stringValue("engineering")
                                .integerValue(5L)
                                .displayLabel("engineering")
                                .iconConfig(IconConfig.builder()
                                    .color("#343CED")
                                    .key("person_icon")
                                    .iconType(IconType.GLYPH)
                                    .name("user")
                                    .build())
                                .build())
                            .build()))
                    .hasMoreBuckets(false)
                    .groupName("Service Cloud")
                    .build(),
                FacetResult.builder()
                    .sourceName("container_name")
                    .operatorName("SelectMultiple")
                    .buckets(List.of(
                        FacetBucket.builder()
                            .count(1L)
                            .datasource("jira")
                            .percentage(5L)
                            .value(FacetValue.builder()
                                .stringValue("engineering")
                                .integerValue(5L)
                                .displayLabel("engineering")
                                .iconConfig(IconConfig.builder()
                                    .color("#343CED")
                                    .key("person_icon")
                                    .iconType(IconType.GLYPH)
                                    .name("user")
                                    .build())
                                .build())
                            .build()))
                    .hasMoreBuckets(false)
                    .groupName("Service Cloud")
                    .build()))
            .build(),
            res.listEntitiesResponse().get());
    }

    @Test
    public void testEntities_People() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("people");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        PeopleRequest req = PeopleRequest.builder()
                .obfuscatedIds(List.of(
                    "abc123",
                    "abc456"))
                .build();

        PeopleResponse res = sdk.client().entities().readPeople()
                .request(req)
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            com.glean.api_client.glean_api_client.models.components.PeopleResponse.builder()
            .results(List.of(
                Person.builder()
                    .name("George Clooney")
                    .obfuscatedId("abc123")
                    .build()))
            .relatedDocuments(List.of(
                RelatedDocuments.builder()
                    .querySuggestion(QuerySuggestion.builder()
                        .query("app:github type:pull author:mortimer")
                        .searchProviderInfo(SearchProviderInfo.builder()
                            .name("Google")
                            .searchLinkUrlTemplate("https://www.google.com/search?q={query}&hl=en")
                            .build())
                        .label("Mortimer's PRs")
                        .datasource("github")
                        .requestOptions(SearchRequestOptions.builder()
                            .facetBucketSize(325985L)
                            .datasourceFilter("JIRA")
                            .datasourcesFilter(List.of(
                                "JIRA"))
                            .queryOverridesFacetFilters(true)
                            .facetFilters(List.of(
                                FacetFilter.builder()
                                    .fieldName("type")
                                    .values(List.of(
                                        FacetFilterValue.builder()
                                            .value("Spreadsheet")
                                            .relationType(RelationType.EQUALS)
                                            .build(),
                                        FacetFilterValue.builder()
                                            .value("Presentation")
                                            .relationType(RelationType.EQUALS)
                                            .build()))
                                    .build()))
                            .facetFilterSets(List.of(
                                FacetFilterSet.builder()
                                    .filters(List.of(
                                        FacetFilter.builder()
                                            .fieldName("type")
                                            .values(List.of(
                                                FacetFilterValue.builder()
                                                    .value("Spreadsheet")
                                                    .relationType(RelationType.EQUALS)
                                                    .build(),
                                                FacetFilterValue.builder()
                                                    .value("Presentation")
                                                    .relationType(RelationType.EQUALS)
                                                    .build()))
                                            .build()))
                                    .build(),
                                FacetFilterSet.builder()
                                    .filters(List.of(
                                        FacetFilter.builder()
                                            .fieldName("type")
                                            .values(List.of(
                                                FacetFilterValue.builder()
                                                    .value("Spreadsheet")
                                                    .relationType(RelationType.EQUALS)
                                                    .build(),
                                                FacetFilterValue.builder()
                                                    .value("Presentation")
                                                    .relationType(RelationType.EQUALS)
                                                    .build()))
                                            .build()))
                                    .build(),
                                FacetFilterSet.builder()
                                    .filters(List.of(
                                        FacetFilter.builder()
                                            .fieldName("type")
                                            .values(List.of(
                                                FacetFilterValue.builder()
                                                    .value("Spreadsheet")
                                                    .relationType(RelationType.EQUALS)
                                                    .build(),
                                                FacetFilterValue.builder()
                                                    .value("Presentation")
                                                    .relationType(RelationType.EQUALS)
                                                    .build()))
                                            .build()))
                                    .build()))
                            .authTokens(List.of(
                                AuthToken.builder()
                                    .accessToken("123abc")
                                    .datasource("gmail")
                                    .scope("email profile https://www.googleapis.com/auth/gmail.readonly")
                                    .tokenType("Bearer")
                                    .authUser("1")
                                    .build()))
                            .build())
                        .ranges(List.of(
                            TextRange.builder()
                                .startIndex(5324L)
                                .document(Document.builder()
                                    .metadata(DocumentMetadata.builder()
                                        .datasource("datasource")
                                        .objectType("Feature Request")
                                        .container("container")
                                        .parentId("JIRA_EN-1337")
                                        .mimeType("mimeType")
                                        .documentId("documentId")
                                        .createTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                        .updateTime(OffsetDateTime.parse("2000-01-23T04:56:07.000Z"))
                                        .author(Person.builder()
                                            .name("George Clooney")
                                            .obfuscatedId("abc123")
                                            .metadata(PersonMetadata.builder()
                                                .type(PersonMetadataType.FULL_TIME)
                                                .title("Actor")
                                                .department("Movies")
                                                .email("george@example.com")
                                                .location("Hollywood, CA")
                                                .phone("6505551234")
                                                .photoUrl("https://example.com/george.jpg")
                                                .startDate(LocalDate.parse("2000-01-23"))
                                                .datasourceProfile(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .querySuggestions(QuerySuggestionList.builder()
                                                    .build())
                                                .inviteInfo(InviteInfo.builder()
                                                    .invites(List.of(
                                                        ChannelInviteInfo.builder()
                                                            .build()))
                                                    .build())
                                                .customFields(List.of(
                                                    CustomFieldData.builder()
                                                        .label("<value>")
                                                        .values(List.of(
                                                            CustomFieldValue.of(CustomFieldValueStr.builder()
                                                                .build()),
                                                            CustomFieldValue.of(CustomFieldValueStr.builder()
                                                                .build())))
                                                        .displayable(true)
                                                        .build()))
                                                .badges(List.of(
                                                    Badge.builder()
                                                        .key("deployment_name_new_hire")
                                                        .displayName("New hire")
                                                        .iconConfig(IconConfig.builder()
                                                            .color("#343CED")
                                                            .key("person_icon")
                                                            .iconType(IconType.GLYPH)
                                                            .name("user")
                                                            .build())
                                                        .build()))
                                                .build())
                                            .build())
                                        .owner(Person.builder()
                                            .name("George Clooney")
                                            .obfuscatedId("abc123")
                                            .metadata(PersonMetadata.builder()
                                                .type(PersonMetadataType.FULL_TIME)
                                                .title("Actor")
                                                .department("Movies")
                                                .email("george@example.com")
                                                .location("Hollywood, CA")
                                                .phone("6505551234")
                                                .photoUrl("https://example.com/george.jpg")
                                                .startDate(LocalDate.parse("2000-01-23"))
                                                .datasourceProfile(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .querySuggestions(QuerySuggestionList.builder()
                                                    .build())
                                                .inviteInfo(InviteInfo.builder()
                                                    .build())
                                                .badges(List.of(
                                                    Badge.builder()
                                                        .key("deployment_name_new_hire")
                                                        .displayName("New hire")
                                                        .iconConfig(IconConfig.builder()
                                                            .color("#343CED")
                                                            .key("person_icon")
                                                            .iconType(IconType.GLYPH)
                                                            .name("user")
                                                            .build())
                                                        .build()))
                                                .build())
                                            .build())
                                        .mentionedPeople(List.of(
                                            Person.builder()
                                                .name("George Clooney")
                                                .obfuscatedId("abc123")
                                                .build()))
                                        .components(List.of(
                                            "Backend",
                                            "Networking"))
                                        .status("[\"Done\"]")
                                        .pins(List.of(
                                            PinDocument.builder()
                                                .documentId("<id>")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .attribution(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .build(),
                                            PinDocument.builder()
                                                .documentId("<id>")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .attribution(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .build(),
                                            PinDocument.builder()
                                                .documentId("<id>")
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .attribution(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .build()))
                                        .assignedTo(Person.builder()
                                            .name("George Clooney")
                                            .obfuscatedId("abc123")
                                            .metadata(PersonMetadata.builder()
                                                .type(PersonMetadataType.FULL_TIME)
                                                .title("Actor")
                                                .department("Movies")
                                                .email("george@example.com")
                                                .location("Hollywood, CA")
                                                .phone("6505551234")
                                                .photoUrl("https://example.com/george.jpg")
                                                .startDate(LocalDate.parse("2000-01-23"))
                                                .datasourceProfile(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build(),
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .querySuggestions(QuerySuggestionList.builder()
                                                    .build())
                                                .inviteInfo(InviteInfo.builder()
                                                    .build())
                                                .badges(List.of(
                                                    Badge.builder()
                                                        .key("deployment_name_new_hire")
                                                        .displayName("New hire")
                                                        .iconConfig(IconConfig.builder()
                                                            .color("#343CED")
                                                            .key("person_icon")
                                                            .iconType(IconType.GLYPH)
                                                            .name("user")
                                                            .build())
                                                        .build()))
                                                .build())
                                            .build())
                                        .updatedBy(Person.builder()
                                            .name("George Clooney")
                                            .obfuscatedId("abc123")
                                            .metadata(PersonMetadata.builder()
                                                .type(PersonMetadataType.FULL_TIME)
                                                .title("Actor")
                                                .department("Movies")
                                                .email("george@example.com")
                                                .location("Hollywood, CA")
                                                .phone("6505551234")
                                                .photoUrl("https://example.com/george.jpg")
                                                .startDate(LocalDate.parse("2000-01-23"))
                                                .datasourceProfile(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .querySuggestions(QuerySuggestionList.builder()
                                                    .build())
                                                .inviteInfo(InviteInfo.builder()
                                                    .build())
                                                .badges(List.of(
                                                    Badge.builder()
                                                        .key("deployment_name_new_hire")
                                                        .displayName("New hire")
                                                        .iconConfig(IconConfig.builder()
                                                            .color("#343CED")
                                                            .key("person_icon")
                                                            .iconType(IconType.GLYPH)
                                                            .name("user")
                                                            .build())
                                                        .build()))
                                                .build())
                                            .build())
                                        .collections(List.of(
                                            Collection.builder()
                                                .name("<value>")
                                                .description("underneath whoa electronics tributary")
                                                .id(544551L)
                                                .addedRoles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.OWNER)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .metadata(PersonMetadata.builder()
                                                                .type(PersonMetadataType.FULL_TIME)
                                                                .title("Actor")
                                                                .department("Movies")
                                                                .email("george@example.com")
                                                                .location("Hollywood, CA")
                                                                .phone("6505551234")
                                                                .photoUrl("https://example.com/george.jpg")
                                                                .startDate(LocalDate.parse("2000-01-23"))
                                                                .datasourceProfile(List.of(
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build()))
                                                                .querySuggestions(QuerySuggestionList.builder()
                                                                    .build())
                                                                .inviteInfo(InviteInfo.builder()
                                                                    .build())
                                                                .badges(List.of(
                                                                    Badge.builder()
                                                                        .key("deployment_name_new_hire")
                                                                        .displayName("New hire")
                                                                        .iconConfig(IconConfig.builder()
                                                                            .color("#343CED")
                                                                            .key("person_icon")
                                                                            .iconType(IconType.GLYPH)
                                                                            .name("user")
                                                                            .build())
                                                                        .build()))
                                                                .build())
                                                            .build())
                                                        .build(),
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.VIEWER)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .metadata(PersonMetadata.builder()
                                                                .type(PersonMetadataType.FULL_TIME)
                                                                .title("Actor")
                                                                .department("Movies")
                                                                .email("george@example.com")
                                                                .location("Hollywood, CA")
                                                                .phone("6505551234")
                                                                .photoUrl("https://example.com/george.jpg")
                                                                .startDate(LocalDate.parse("2000-01-23"))
                                                                .datasourceProfile(List.of(
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build(),
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build()))
                                                                .querySuggestions(QuerySuggestionList.builder()
                                                                    .build())
                                                                .inviteInfo(InviteInfo.builder()
                                                                    .build())
                                                                .badges(List.of(
                                                                    Badge.builder()
                                                                        .key("deployment_name_new_hire")
                                                                        .displayName("New hire")
                                                                        .iconConfig(IconConfig.builder()
                                                                            .color("#343CED")
                                                                            .key("person_icon")
                                                                            .iconType(IconType.GLYPH)
                                                                            .name("user")
                                                                            .build())
                                                                        .build()))
                                                                .build())
                                                            .build())
                                                        .build(),
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.OWNER)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .metadata(PersonMetadata.builder()
                                                                .type(PersonMetadataType.FULL_TIME)
                                                                .title("Actor")
                                                                .department("Movies")
                                                                .email("george@example.com")
                                                                .location("Hollywood, CA")
                                                                .phone("6505551234")
                                                                .photoUrl("https://example.com/george.jpg")
                                                                .startDate(LocalDate.parse("2000-01-23"))
                                                                .datasourceProfile(List.of(
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build(),
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build(),
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build()))
                                                                .querySuggestions(QuerySuggestionList.builder()
                                                                    .build())
                                                                .inviteInfo(InviteInfo.builder()
                                                                    .build())
                                                                .badges(List.of(
                                                                    Badge.builder()
                                                                        .key("deployment_name_new_hire")
                                                                        .displayName("New hire")
                                                                        .iconConfig(IconConfig.builder()
                                                                            .color("#343CED")
                                                                            .key("person_icon")
                                                                            .iconType(IconType.GLYPH)
                                                                            .name("user")
                                                                            .build())
                                                                        .build()))
                                                                .build())
                                                            .build())
                                                        .build()))
                                                .removedRoles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.EDITOR)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .metadata(PersonMetadata.builder()
                                                                .type(PersonMetadataType.FULL_TIME)
                                                                .title("Actor")
                                                                .department("Movies")
                                                                .email("george@example.com")
                                                                .location("Hollywood, CA")
                                                                .phone("6505551234")
                                                                .photoUrl("https://example.com/george.jpg")
                                                                .startDate(LocalDate.parse("2000-01-23"))
                                                                .datasourceProfile(List.of(
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build()))
                                                                .querySuggestions(QuerySuggestionList.builder()
                                                                    .build())
                                                                .inviteInfo(InviteInfo.builder()
                                                                    .build())
                                                                .badges(List.of(
                                                                    Badge.builder()
                                                                        .key("deployment_name_new_hire")
                                                                        .displayName("New hire")
                                                                        .iconConfig(IconConfig.builder()
                                                                            .color("#343CED")
                                                                            .key("person_icon")
                                                                            .iconType(IconType.GLYPH)
                                                                            .name("user")
                                                                            .build())
                                                                        .build()))
                                                                .build())
                                                            .build())
                                                        .build()))
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .items(List.of(
                                                    CollectionItem.builder()
                                                        .collectionId(450370L)
                                                        .itemType(CollectionItemItemType.DOCUMENT)
                                                        .createdBy(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .metadata(PersonMetadata.builder()
                                                                .type(PersonMetadataType.FULL_TIME)
                                                                .title("Actor")
                                                                .department("Movies")
                                                                .email("george@example.com")
                                                                .location("Hollywood, CA")
                                                                .phone("6505551234")
                                                                .photoUrl("https://example.com/george.jpg")
                                                                .startDate(LocalDate.parse("2000-01-23"))
                                                                .datasourceProfile(List.of(
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build(),
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build(),
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build()))
                                                                .querySuggestions(QuerySuggestionList.builder()
                                                                    .build())
                                                                .inviteInfo(InviteInfo.builder()
                                                                    .build())
                                                                .badges(List.of(
                                                                    Badge.builder()
                                                                        .key("deployment_name_new_hire")
                                                                        .displayName("New hire")
                                                                        .iconConfig(IconConfig.builder()
                                                                            .color("#343CED")
                                                                            .key("person_icon")
                                                                            .iconType(IconType.GLYPH)
                                                                            .name("user")
                                                                            .build())
                                                                        .build()))
                                                                .build())
                                                            .build())
                                                        .build(),
                                                    CollectionItem.builder()
                                                        .collectionId(574783L)
                                                        .itemType(CollectionItemItemType.TEXT)
                                                        .createdBy(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .metadata(PersonMetadata.builder()
                                                                .type(PersonMetadataType.FULL_TIME)
                                                                .title("Actor")
                                                                .department("Movies")
                                                                .email("george@example.com")
                                                                .location("Hollywood, CA")
                                                                .phone("6505551234")
                                                                .photoUrl("https://example.com/george.jpg")
                                                                .startDate(LocalDate.parse("2000-01-23"))
                                                                .datasourceProfile(List.of(
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build()))
                                                                .querySuggestions(QuerySuggestionList.builder()
                                                                    .build())
                                                                .inviteInfo(InviteInfo.builder()
                                                                    .build())
                                                                .badges(List.of(
                                                                    Badge.builder()
                                                                        .key("deployment_name_new_hire")
                                                                        .displayName("New hire")
                                                                        .iconConfig(IconConfig.builder()
                                                                            .color("#343CED")
                                                                            .key("person_icon")
                                                                            .iconType(IconType.GLYPH)
                                                                            .name("user")
                                                                            .build())
                                                                        .build()))
                                                                .build())
                                                            .build())
                                                        .build()))
                                                .roles(List.of(
                                                    UserRoleSpecification.builder()
                                                        .role(UserRole.EDITOR)
                                                        .person(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .metadata(PersonMetadata.builder()
                                                                .type(PersonMetadataType.FULL_TIME)
                                                                .title("Actor")
                                                                .department("Movies")
                                                                .email("george@example.com")
                                                                .location("Hollywood, CA")
                                                                .phone("6505551234")
                                                                .photoUrl("https://example.com/george.jpg")
                                                                .startDate(LocalDate.parse("2000-01-23"))
                                                                .datasourceProfile(List.of(
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build(),
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build(),
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build()))
                                                                .querySuggestions(QuerySuggestionList.builder()
                                                                    .build())
                                                                .inviteInfo(InviteInfo.builder()
                                                                    .build())
                                                                .badges(List.of(
                                                                    Badge.builder()
                                                                        .key("deployment_name_new_hire")
                                                                        .displayName("New hire")
                                                                        .iconConfig(IconConfig.builder()
                                                                            .color("#343CED")
                                                                            .key("person_icon")
                                                                            .iconType(IconType.GLYPH)
                                                                            .name("user")
                                                                            .build())
                                                                        .build()))
                                                                .build())
                                                            .build())
                                                        .build()))
                                                .build(),
                                            Collection.builder()
                                                .name("<value>")
                                                .description("playfully heavy finally altruistic whenever er utter notwithstanding")
                                                .id(372647L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .build(),
                                            Collection.builder()
                                                .name("<value>")
                                                .description("boohoo analogy hm and rise weight")
                                                .id(705939L)
                                                .audienceFilters(List.of(
                                                    FacetFilter.builder()
                                                        .fieldName("type")
                                                        .values(List.of(
                                                            FacetFilterValue.builder()
                                                                .value("Spreadsheet")
                                                                .relationType(RelationType.EQUALS)
                                                                .build(),
                                                            FacetFilterValue.builder()
                                                                .value("Presentation")
                                                                .relationType(RelationType.EQUALS)
                                                                .build()))
                                                        .build()))
                                                .creator(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .updatedBy(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .build()))
                                        .interactions(DocumentInteractions.builder()
                                            .reacts(List.of(
                                                Reaction.builder()
                                                    .reactors(List.of(
                                                        Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .build()))
                                                    .build(),
                                                Reaction.builder()
                                                    .build(),
                                                Reaction.builder()
                                                    .build()))
                                            .shares(List.of(
                                                Share.builder()
                                                    .numDaysAgo(406671L)
                                                    .sharer(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .metadata(PersonMetadata.builder()
                                                            .type(PersonMetadataType.FULL_TIME)
                                                            .title("Actor")
                                                            .department("Movies")
                                                            .email("george@example.com")
                                                            .location("Hollywood, CA")
                                                            .phone("6505551234")
                                                            .photoUrl("https://example.com/george.jpg")
                                                            .startDate(LocalDate.parse("2000-01-23"))
                                                            .datasourceProfile(List.of(
                                                                DatasourceProfile.builder()
                                                                    .datasource("github")
                                                                    .handle("<value>")
                                                                    .build(),
                                                                DatasourceProfile.builder()
                                                                    .datasource("github")
                                                                    .handle("<value>")
                                                                    .build(),
                                                                DatasourceProfile.builder()
                                                                    .datasource("github")
                                                                    .handle("<value>")
                                                                    .build()))
                                                            .querySuggestions(QuerySuggestionList.builder()
                                                                .build())
                                                            .inviteInfo(InviteInfo.builder()
                                                                .build())
                                                            .badges(List.of(
                                                                Badge.builder()
                                                                    .key("deployment_name_new_hire")
                                                                    .displayName("New hire")
                                                                    .iconConfig(IconConfig.builder()
                                                                        .color("#343CED")
                                                                        .key("person_icon")
                                                                        .iconType(IconType.GLYPH)
                                                                        .name("user")
                                                                        .build())
                                                                    .build()))
                                                            .build())
                                                        .build())
                                                    .build()))
                                            .build())
                                        .verification(Verification.builder()
                                            .state(State.DEPRECATED)
                                            .metadata(VerificationMetadata.builder()
                                                .lastVerifier(Person.builder()
                                                    .name("George Clooney")
                                                    .obfuscatedId("abc123")
                                                    .metadata(PersonMetadata.builder()
                                                        .type(PersonMetadataType.FULL_TIME)
                                                        .title("Actor")
                                                        .department("Movies")
                                                        .email("george@example.com")
                                                        .location("Hollywood, CA")
                                                        .phone("6505551234")
                                                        .photoUrl("https://example.com/george.jpg")
                                                        .startDate(LocalDate.parse("2000-01-23"))
                                                        .datasourceProfile(List.of(
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build(),
                                                            DatasourceProfile.builder()
                                                                .datasource("github")
                                                                .handle("<value>")
                                                                .build()))
                                                        .querySuggestions(QuerySuggestionList.builder()
                                                            .build())
                                                        .inviteInfo(InviteInfo.builder()
                                                            .build())
                                                        .badges(List.of(
                                                            Badge.builder()
                                                                .key("deployment_name_new_hire")
                                                                .displayName("New hire")
                                                                .iconConfig(IconConfig.builder()
                                                                    .color("#343CED")
                                                                    .key("person_icon")
                                                                    .iconType(IconType.GLYPH)
                                                                    .name("user")
                                                                    .build())
                                                                .build()))
                                                        .build())
                                                    .build())
                                                .reminders(List.of(
                                                    Reminder.builder()
                                                        .assignee(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .metadata(PersonMetadata.builder()
                                                                .type(PersonMetadataType.FULL_TIME)
                                                                .title("Actor")
                                                                .department("Movies")
                                                                .email("george@example.com")
                                                                .location("Hollywood, CA")
                                                                .phone("6505551234")
                                                                .photoUrl("https://example.com/george.jpg")
                                                                .startDate(LocalDate.parse("2000-01-23"))
                                                                .datasourceProfile(List.of(
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build(),
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build(),
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build()))
                                                                .querySuggestions(QuerySuggestionList.builder()
                                                                    .build())
                                                                .inviteInfo(InviteInfo.builder()
                                                                    .build())
                                                                .badges(List.of(
                                                                    Badge.builder()
                                                                        .key("deployment_name_new_hire")
                                                                        .displayName("New hire")
                                                                        .iconConfig(IconConfig.builder()
                                                                            .color("#343CED")
                                                                            .key("person_icon")
                                                                            .iconType(IconType.GLYPH)
                                                                            .name("user")
                                                                            .build())
                                                                        .build()))
                                                                .build())
                                                            .build())
                                                        .remindAt(870639L)
                                                        .requestor(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .metadata(PersonMetadata.builder()
                                                                .type(PersonMetadataType.FULL_TIME)
                                                                .title("Actor")
                                                                .department("Movies")
                                                                .email("george@example.com")
                                                                .location("Hollywood, CA")
                                                                .phone("6505551234")
                                                                .photoUrl("https://example.com/george.jpg")
                                                                .startDate(LocalDate.parse("2000-01-23"))
                                                                .datasourceProfile(List.of(
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build()))
                                                                .querySuggestions(QuerySuggestionList.builder()
                                                                    .build())
                                                                .inviteInfo(InviteInfo.builder()
                                                                    .build())
                                                                .badges(List.of(
                                                                    Badge.builder()
                                                                        .key("deployment_name_new_hire")
                                                                        .displayName("New hire")
                                                                        .iconConfig(IconConfig.builder()
                                                                            .color("#343CED")
                                                                            .key("person_icon")
                                                                            .iconType(IconType.GLYPH)
                                                                            .name("user")
                                                                            .build())
                                                                        .build()))
                                                                .build())
                                                            .build())
                                                        .build(),
                                                    Reminder.builder()
                                                        .assignee(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .metadata(PersonMetadata.builder()
                                                                .type(PersonMetadataType.FULL_TIME)
                                                                .title("Actor")
                                                                .department("Movies")
                                                                .email("george@example.com")
                                                                .location("Hollywood, CA")
                                                                .phone("6505551234")
                                                                .photoUrl("https://example.com/george.jpg")
                                                                .startDate(LocalDate.parse("2000-01-23"))
                                                                .datasourceProfile(List.of(
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build()))
                                                                .querySuggestions(QuerySuggestionList.builder()
                                                                    .build())
                                                                .inviteInfo(InviteInfo.builder()
                                                                    .build())
                                                                .badges(List.of(
                                                                    Badge.builder()
                                                                        .key("deployment_name_new_hire")
                                                                        .displayName("New hire")
                                                                        .iconConfig(IconConfig.builder()
                                                                            .color("#343CED")
                                                                            .key("person_icon")
                                                                            .iconType(IconType.GLYPH)
                                                                            .name("user")
                                                                            .build())
                                                                        .build()))
                                                                .build())
                                                            .build())
                                                        .remindAt(945399L)
                                                        .requestor(Person.builder()
                                                            .name("George Clooney")
                                                            .obfuscatedId("abc123")
                                                            .metadata(PersonMetadata.builder()
                                                                .type(PersonMetadataType.FULL_TIME)
                                                                .title("Actor")
                                                                .department("Movies")
                                                                .email("george@example.com")
                                                                .location("Hollywood, CA")
                                                                .phone("6505551234")
                                                                .photoUrl("https://example.com/george.jpg")
                                                                .startDate(LocalDate.parse("2000-01-23"))
                                                                .datasourceProfile(List.of(
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build(),
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build(),
                                                                    DatasourceProfile.builder()
                                                                        .datasource("github")
                                                                        .handle("<value>")
                                                                        .build()))
                                                                .querySuggestions(QuerySuggestionList.builder()
                                                                    .build())
                                                                .inviteInfo(InviteInfo.builder()
                                                                    .build())
                                                                .badges(List.of(
                                                                    Badge.builder()
                                                                        .key("deployment_name_new_hire")
                                                                        .displayName("New hire")
                                                                        .iconConfig(IconConfig.builder()
                                                                            .color("#343CED")
                                                                            .key("person_icon")
                                                                            .iconType(IconType.GLYPH)
                                                                            .name("user")
                                                                            .build())
                                                                        .build()))
                                                                .build())
                                                            .build())
                                                        .build()))
                                                .lastReminder(Reminder.builder()
                                                    .assignee(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .metadata(PersonMetadata.builder()
                                                            .type(PersonMetadataType.FULL_TIME)
                                                            .title("Actor")
                                                            .department("Movies")
                                                            .email("george@example.com")
                                                            .location("Hollywood, CA")
                                                            .phone("6505551234")
                                                            .photoUrl("https://example.com/george.jpg")
                                                            .startDate(LocalDate.parse("2000-01-23"))
                                                            .datasourceProfile(List.of(
                                                                DatasourceProfile.builder()
                                                                    .datasource("github")
                                                                    .handle("<value>")
                                                                    .build(),
                                                                DatasourceProfile.builder()
                                                                    .datasource("github")
                                                                    .handle("<value>")
                                                                    .build(),
                                                                DatasourceProfile.builder()
                                                                    .datasource("github")
                                                                    .handle("<value>")
                                                                    .build()))
                                                            .querySuggestions(QuerySuggestionList.builder()
                                                                .build())
                                                            .inviteInfo(InviteInfo.builder()
                                                                .build())
                                                            .badges(List.of(
                                                                Badge.builder()
                                                                    .key("deployment_name_new_hire")
                                                                    .displayName("New hire")
                                                                    .iconConfig(IconConfig.builder()
                                                                        .color("#343CED")
                                                                        .key("person_icon")
                                                                        .iconType(IconType.GLYPH)
                                                                        .name("user")
                                                                        .build())
                                                                    .build()))
                                                            .build())
                                                        .build())
                                                    .remindAt(970028L)
                                                    .requestor(Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .metadata(PersonMetadata.builder()
                                                            .type(PersonMetadataType.FULL_TIME)
                                                            .title("Actor")
                                                            .department("Movies")
                                                            .email("george@example.com")
                                                            .location("Hollywood, CA")
                                                            .phone("6505551234")
                                                            .photoUrl("https://example.com/george.jpg")
                                                            .startDate(LocalDate.parse("2000-01-23"))
                                                            .datasourceProfile(List.of(
                                                                DatasourceProfile.builder()
                                                                    .datasource("github")
                                                                    .handle("<value>")
                                                                    .build(),
                                                                DatasourceProfile.builder()
                                                                    .datasource("github")
                                                                    .handle("<value>")
                                                                    .build()))
                                                            .querySuggestions(QuerySuggestionList.builder()
                                                                .build())
                                                            .inviteInfo(InviteInfo.builder()
                                                                .build())
                                                            .badges(List.of(
                                                                Badge.builder()
                                                                    .key("deployment_name_new_hire")
                                                                    .displayName("New hire")
                                                                    .iconConfig(IconConfig.builder()
                                                                        .color("#343CED")
                                                                        .key("person_icon")
                                                                        .iconType(IconType.GLYPH)
                                                                        .name("user")
                                                                        .build())
                                                                    .build()))
                                                            .build())
                                                        .build())
                                                    .build())
                                                .candidateVerifiers(List.of(
                                                    Person.builder()
                                                        .name("George Clooney")
                                                        .obfuscatedId("abc123")
                                                        .build()))
                                                .build())
                                            .build())
                                        .customData(Map.ofEntries(
                                            Map.entry("someCustomField", CustomDataValue.builder()
                                                .build())))
                                        .contactPerson(Person.builder()
                                            .name("George Clooney")
                                            .obfuscatedId("abc123")
                                            .metadata(PersonMetadata.builder()
                                                .type(PersonMetadataType.FULL_TIME)
                                                .title("Actor")
                                                .department("Movies")
                                                .email("george@example.com")
                                                .location("Hollywood, CA")
                                                .phone("6505551234")
                                                .photoUrl("https://example.com/george.jpg")
                                                .startDate(LocalDate.parse("2000-01-23"))
                                                .datasourceProfile(List.of(
                                                    DatasourceProfile.builder()
                                                        .datasource("github")
                                                        .handle("<value>")
                                                        .build()))
                                                .querySuggestions(QuerySuggestionList.builder()
                                                    .build())
                                                .inviteInfo(InviteInfo.builder()
                                                    .build())
                                                .badges(List.of(
                                                    Badge.builder()
                                                        .key("deployment_name_new_hire")
                                                        .displayName("New hire")
                                                        .iconConfig(IconConfig.builder()
                                                            .color("#343CED")
                                                            .key("person_icon")
                                                            .iconType(IconType.GLYPH)
                                                            .name("user")
                                                            .build())
                                                        .build()))
                                                .build())
                                            .build())
                                        .build())
                                    .build())
                                .build()))
                        .inputDetails(SearchRequestInputDetails.builder()
                            .hasCopyPaste(true)
                            .build())
                        .build())
                    .results(List.of(
                        SearchResult.builder()
                            .url("https://example.com/foo/bar")
                            .title("title")
                            .nativeAppUrl("slack://foo/bar")
                            .snippets(List.of(
                                SearchResultSnippet.builder()
                                    .snippet("snippet")
                                    .mimeType("mimeType")
                                    .build()))
                            .build()))
                    .build()))
            .build(),
            res.peopleResponse().get());
    }

    @Test
    public void testEntities_Teams() throws Exception {
        Assumptions.assumeTrue(false, "incomplete test found please make sure to address the following errors: [`workflow step teams.test referencing operation teams not found in document`]");
    }
}