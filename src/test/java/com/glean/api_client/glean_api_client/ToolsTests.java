/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
package com.glean.api_client.glean_api_client;

import static org.junit.jupiter.api.Assertions.assertEquals;

import com.glean.api_client.glean_api_client.models.components.ToolsCallParameter;
import com.glean.api_client.glean_api_client.models.components.ToolsCallRequest;
import com.glean.api_client.glean_api_client.models.components.ToolsCallResponse;
import com.glean.api_client.glean_api_client.models.components.ToolsListResponse;
import com.glean.api_client.glean_api_client.models.operations.GetRestApiV1ToolsListResponse;
import com.glean.api_client.glean_api_client.models.operations.PostRestApiV1ToolsCallResponse;
import com.glean.api_client.glean_api_client.utils.Utils;
import java.lang.Exception;
import java.util.Map;
import org.junit.jupiter.api.Test;

public class ToolsTests {

    @Test
    public void testTools_GetRestApiV1ToolsList() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("get_/rest/api/v1/tools/list");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        GetRestApiV1ToolsListResponse res = sdk.client().tools().list()
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            ToolsListResponse.builder()
            .build(),
            res.toolsListResponse().get());
    }

    @Test
    public void testTools_PostRestApiV1ToolsCall() throws Exception {

        var testHttpClient = Utils.createTestHTTPClient("post_/rest/api/v1/tools/call");
        Glean sdk = Glean.builder()
                .serverURL(Utils.environmentVariable("TEST_SERVER_URL", "http://localhost:18080"))
                .client(testHttpClient)
                .apiToken("<YOUR_BEARER_TOKEN_HERE>")
            .build();

        ToolsCallRequest req = ToolsCallRequest.builder()
                .name("<value>")
                .parameters(Map.ofEntries(
                    Map.entry("key", ToolsCallParameter.builder()
                        .name("<value>")
                        .value("<value>")
                        .build())))
                .build();

        PostRestApiV1ToolsCallResponse res = sdk.client().tools().run()
                .request(req)
                .call();
        assertEquals(200, res.statusCode());
        assertEquals(
            ToolsCallResponse.builder()
            .build(),
            res.toolsCallResponse().get());
    }
}